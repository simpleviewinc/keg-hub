name: keg-tests
on: push

jobs:
  tests:
    name: 'Run Tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Get Changes"
        id: get-changed-repos
        shell: bash
        run: |
          echo "::debug::{Getting repos with changed files...}"

          # Pull down origin, so we have access to all branches
          git fetch origin --force --depth=1

          # Get a list of all repos in keg-hub/repos directory
          REPOS=($(ls repos))
          
          # Check the differences between the current branch and develop branch
          CHANGE_FILES=($(git diff --name-only origin/develop))

          # Loop over the repos and match the repo path, with changed file paths
          for REPO in "${REPOS[@]}"; do

            # Don't run tests for keg-cli ( currently requires a docker setup )
            if [[ "$REPO" == "keg-cli" ]]; then
              continue
            fi

            # Get the repo path, and default run tests to false
            REPO_PATH="repos/${REPO##*/}"
            TEST_REPOS=""

            # Loop over the files and look for any that match the current repo
            for FILE in "${CHANGE_FILES[@]}"; do
              if [[ "$FILE" =~ "$REPO_PATH" ]]; then
                TEST_REPOS="$REPO $TEST_REPOS"
              fi
            done
            echo "::debug::{Found changed repos $TEST_REPOS}"
            echo "::set-output name=repo_tests::$TEST_REPOS"
          done
      - name: "Run Tests"
        shell: bash
        id: run-repo-tests
        run: |
          # Get a list of changed repos
          REPOS=(${{ steps.get-changed-repos.outputs.repo_tests }})
          echo "::debug::{Running tests for changed repos $REPOS}"

          for REPO in "${REPOS[@]}"; do
            echo "::debug::{Found changed file for repo $REPO}"
          done






