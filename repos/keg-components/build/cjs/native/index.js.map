{"version":3,"file":"index.js","sources":["../../../src/components/filePicker/filePicker.native.js","../../../src/components/form/checkGroup/checkGroup.js","../../../src/components/form/form/form.js","../../../src/components/form/input/input.js","../../../src/components/form/option/option.native.js","../../../src/components/form/radio/radio.native.js","../../../src/components/form/select/select.js","../../../src/components/form/slider/slider.js","../../../src/components/form/switch/switch.js","../../../src/components/link/link.js","../../../src/components/list/scrollView.js"],"sourcesContent":["import React from 'react'\nimport { View } from 'KegView'\nimport { P } from '../typography'\n\nexport const FilePicker = props => {\n  return (\n    <View>\n      <P>FilePicker Not yet implemented for native.</P>\n    </View>\n  )\n}\n","import React, { useCallback, useImperativeHandle, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Text } from '../../typography/text'\nimport { Checkbox } from 'KegCheckbox'\nimport { useStyle } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\nimport { useChildrenWithRefs } from '../../../hooks/useChildrenWithRefs'\nimport { mapObj, noOp } from '@keg-hub/jsutils'\n\n/**\n * Simple header for CheckGroup, without a checkbox\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the Text element\n * @param {*} props.* - remaining props are passed to the Text element\n */\nconst SimpleHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, ...rest } = props\n\n  // add no-op handle here just for consistency with other header\n  useImperativeHandle(ref, () => ({ isChecked: undefined, setChecked: noOp }))\n\n  const textStyle = useStyle('form.checkGroup.simpleHeader.main', style)\n  return (\n    <Text\n      className={className}\n      style={textStyle}\n      {...rest}\n    >\n      { title }\n    </Text>\n  )\n})\n\n/**\n * Header for CheckGroup, with a checkbox for select-all functionality\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the header\n * @param {Function?} props.onPress - handler for checkbox press\n * @param {boolean} props.checked - initial value of header checkbox\n */\nconst CheckboxHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, onPress, checked } = props\n  const headerStyles = useMemo(\n    () => ({\n      main: style,\n      content: {\n        right: {},\n      },\n    }),\n    [style]\n  )\n\n  const onChangeHandler = useCallback((_, val) => onPress?.(val), [onPress])\n\n  return (\n    <Checkbox\n      RightComponent={title}\n      rightClassName={className}\n      styles={headerStyles}\n      checked={checked}\n      onChange={onChangeHandler}\n      ref={ref}\n      close\n    />\n  )\n})\n\n/**\n * A group of checkbox items with a header.\n * Will include a select-all checkbox in the header IF you define the children as a function (@see story examples)\n * @param {Object} props\n * @param {string} props.className - css class name\n * @param {string} props.headerClassName - css class name for header text\n * @param {string} props.title - title of the group\n * @param {boolean?} props.initChecked - initial checked value of the group header box, if you are using it\n * @param {boolean?} props.showHeaderCheckbox - true if you want a group header check box, with select-all functionality\n * @param {boolean?} props.showHeader - true by default. If false, hides the header entirely, only showing children\n * @param {Function?} props.onGroupPress - handler of header checkbox\n * @param {*} props.children - components in the group (@see CheckboxGroup.Item)\n * @param {Object?} props.styles\n * @param {Object?} props.styles.main\n * @param {Object?} props.styles.header\n */\nexport const CheckGroup = React.forwardRef((props, ref) => {\n  const {\n    className,\n    headerClassName,\n    title,\n    children,\n    styles,\n    initChecked = false,\n    onGroupPress,\n    showHeaderCheckbox = false,\n    showHeader = true,\n  } = props\n\n  const groupStyles = useStyle('form.checkGroup', styles)\n\n  // get children updated with ref props, and the refs themselves\n  const [ childrenWithProps, childRefs ] = useChildrenWithRefs(\n    children,\n    showHeaderCheckbox\n  )\n\n  // callback that manages select-all behavior on click of the header checkbox\n  const headerCheckHandler = useCallback(\n    checked => {\n      onGroupPress?.(checked)\n      mapObj(childRefs.current, (_, child) => child?.setChecked?.(checked))\n    },\n    [childRefs]\n  )\n\n  const Header = () =>\n    showHeaderCheckbox ? (\n      <CheckboxHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        onPress={showHeaderCheckbox && headerCheckHandler}\n        checked={showHeaderCheckbox ? initChecked : undefined}\n        ref={ref}\n      />\n    ) : (\n      <SimpleHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        ref={ref}\n      />\n    )\n\n  return (\n    <View\n      className={useClassList('keg-check-group', className)}\n      style={groupStyles?.main}\n    >\n      { showHeader && <Header /> }\n      { childrenWithProps }\n    </View>\n  )\n})\n\nCheckGroup.Item = Checkbox\n\nCheckGroup.propTypes = {\n  className: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  headerClassName: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  title: PropTypes.string,\n  initChecked: PropTypes.bool,\n  showHeaderCheckbox: PropTypes.bool,\n  showHeader: PropTypes.bool,\n  onGroupPress: PropTypes.func,\n  styles: PropTypes.oneOfType([ PropTypes.object, PropTypes.array ]),\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemePath } from '../../../hooks'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\n/**\n * Form\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see formPropTypes\n * @property {String} props.type - default ''\n * @property {Object} props.style - custom style\n * @property {Function} props.onSubmit - function when form is submitted\n * @property {Object} props.children\n * @property {Object} ref - reference to native element\n *\n */\nexport const Form = React.forwardRef((props, ref) => {\n  const theme = useTheme()\n\n  const {\n    children,\n    className,\n    elType,\n    style,\n    type,\n    themePath = `form.form.${type || 'default'}`,\n    ...elProps\n  } = props\n\n  const formTheme = useThemePath(themePath)\n\n  return (\n    <View\n      accessibilityRole='form'\n      className={useClassList('keg-form', className)}\n      {...elProps}\n      style={[ get(theme, 'form.form.default'), formTheme, style ]}\n      ref={ref}\n    >\n      { children }\n    </View>\n  )\n})\n\nForm.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onSubmit: PropTypes.func,\n  ref: PropTypes.object,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n","import React from 'react'\nimport { getValueFromChildren, getReadOnly } from '../../../utils'\nimport {\n  useThemePath,\n  useInputHandlers,\n  usePressHandlers,\n} from '../../../hooks'\nimport PropTypes from 'prop-types'\nimport { Input as InternalInput } from '../../internal/input.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegInput = StyleInjector(InternalInput, {\n  displayName: 'Input',\n  className: 'keg-input'\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n * @param {*} isWeb - Is the platform equal to web\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = ({ children, value }) => {\n  const setValue = getValueFromChildren(value, children)\n\n  return value !== undefined ? { value: setValue } : {} // return empty object, otherwise we would not be able to type into input since it would be waiting on value prop to change\n}\n\n/**\n * Input\n * @summary Default Input component that wraps the Internal Input component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegInput PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Input = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled = false,\n    editable = true,\n    Element,\n    onChange,\n    onValueChange,\n    onChangeText,\n    onClick,\n    onPress,\n    readOnly = false,\n    type = 'default',\n    themePath = `form.input.${type}`,\n    style,\n    value,\n    ...elProps\n  } = props\n\n  const inputStyles = useThemePath(themePath)\n  \n  return (\n    <KegInput\n      accessibilityRole='textbox'\n      onPress={onPress}\n      {...getReadOnly(false, readOnly, disabled, editable)}\n      {...getValue(props, false)}\n      {...useInputHandlers({ onChange, onValueChange, onChangeText })}\n      {...usePressHandlers(false, { onClick, onPress })}\n      {...elProps}\n      style={[ inputStyles, style ]}\n      ref={ref}\n    />\n  )\n})\n\n\nInput.propTypes = {\n  ...KegInput.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onClick: PropTypes.func,\n  onPress: PropTypes.func,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isStr, isNum } from '@keg-hub/jsutils'\nimport { Picker } from 'react-native'\nconst SelectOption = Picker.Item\n\nconst useable = item => (isStr(item) || isNum(item)) && item\n\nconst getVal = (value, text, children, label) =>\n  useable(value) || useable(text) || useable(children) || useable(label)\n\nexport const Option = props => {\n  const { label, children, text, value } = props\n\n  return (\n    <SelectOption\n      label={getVal(label, value, text)}\n      value={getVal(value, text, children, label)}\n    />\n  )\n}\n\nOption.propTypes = {\n  children: PropTypes.string,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n}\n","import React from 'react'\nimport { withTheme } from '@keg-hub/re-theme'\nimport { get } from '@keg-hub/jsutils'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography/text'\n\nexport const Radio = withTheme(props => {\n  const { theme, children, style, onClick, onPress, text, ...args } = props\n\n  return (\n    <Text\n      {...args}\n      style={[get(theme, [ 'form', 'radio' ]), style]}\n    >\n      { text }\n    </Text>\n  )\n})\n\nRadio.propTypes = {\n  style: PropTypes.object,\n  text: PropTypes.string,\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Select as InternalSelect } from '../../internal/select'\nimport { useThemePath } from '../../../hooks'\nimport { useSelectHandlers } from '../../../hooks/useSelectHandlers'\nimport { getValueFromChildren, getInputValueKey } from '../../../utils'\nimport { useClassName } from 'KegClassName'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { ChevronDown } from '../../../assets/icons'\nimport { Icon } from 'KegIcon'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSelect = StyleInjector(InternalSelect, {\n  displayName: 'Select',\n  className: 'keg-select'\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = props => {\n  const { children, onChange, onValueChange, readOnly, value } = props\n\n  const setValue = getValueFromChildren(value, children)\n  const valKey = getInputValueKey(false, onChange, onValueChange, readOnly)\n\n  return { [valKey]: setValue }\n}\n\n/**\n * Select\n * @summary Default Select component that wraps the Internal Select component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegSelect PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled,\n    readOnly,\n    onChange,\n    onValueChange,\n    style,\n    styles,\n    type = 'default',\n    themePath = `form.select.${type}`,\n    value,\n    ...elProps\n  } = props\n\n  const selectStyles = useThemePath(themePath, styles)\n  const selectClasses = useThemeTypeAsClass(\n    themePath || type,\n    'keg-select',\n    className\n  )\n  const classRef = useClassName('keg-select', selectClasses, ref)\n\n  return (\n    <View style={[ selectStyles.main, style ]}>\n      <KegSelect\n        ref={classRef}\n        {...elProps}\n        enabled={!disabled}\n        style={[selectStyles.select]}\n        {...getValue(props)}\n        {...useSelectHandlers({ onChange, onValueChange })}\n      >\n        { children }\n      </KegSelect>\n      <Icon\n        styles={selectStyles.icon}\n        Component={ChevronDown}\n        color={disabled && selectStyles.icon?.disabled?.color}\n      />\n    </View>\n  )\n})\n\n\nSelect.propTypes = {\n  ...InternalSelect.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  ref: PropTypes.object,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n","export const Slider = () => {\n  return null\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.join(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n","import React from 'react'\nimport { LinkWrapper } from './link.wrapper'\nimport { KegText } from 'KegText'\nimport { Touchable } from '../touchable'\nimport PropTypes from 'prop-types'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useClassList } from 'KegClassList'\n\nconst isWeb = getPlatform() === 'web'\nconst Text = KegText('link')\n\nconst Element = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    elProps,\n    href,\n    onPress,\n    style,\n    target,\n    ...attrs\n  } = props\n\n  return (\n    <Touchable\n      className={useClassList('keg-link', className)}\n      {...elProps}\n      {...attrs}\n      touchRef={ref}\n    >\n      <Text\n        accessibilityRole='link'\n        className='keg-link-text'\n        style={style}\n        href={href}\n        target={target}\n      >\n        { children }\n      </Text>\n    </Touchable>\n  )\n})\n\nconst Link = props => <LinkWrapper\n  {...props}\n  Element={Element}\n  isWeb={isWeb}\n/>\n\nLink.propTypes = {\n  href: PropTypes.string,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport { Link, Link as A }\n","import { ScrollView as KegScrollView } from './scrollView.native'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * View\n * @summary Default view component that wraps the React Native View component. All props are optional\n *\n * @param {Object} props - see View PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const ScrollView = StyleInjector(KegScrollView, {\n  displayName: 'Scroll-View',\n  className: 'keg-scrollview',\n})\n\nScrollView.propTypes = KegScrollView.propTypes\n"],"names":["FilePicker","props","React","View","P","SimpleHeader","forwardRef","ref","title","className","style","rest","useImperativeHandle","isChecked","undefined","setChecked","noOp","textStyle","useStyle","Text","CheckboxHeader","onPress","checked","headerStyles","useMemo","main","content","right","onChangeHandler","useCallback","_","val","Checkbox","CheckGroup","headerClassName","children","styles","initChecked","onGroupPress","showHeaderCheckbox","showHeader","groupStyles","useChildrenWithRefs","childrenWithProps","childRefs","headerCheckHandler","mapObj","current","child","Header","header","useClassList","Item","Form","theme","useTheme","elType","type","themePath","elProps","formTheme","useThemePath","get","KegInput","StyleInjector","InternalInput","displayName","getValue","value","setValue","getValueFromChildren","Input","disabled","editable","Element","onChange","onValueChange","onChangeText","onClick","readOnly","inputStyles","getReadOnly","useInputHandlers","usePressHandlers","SelectOption","Picker","useable","item","isStr","isNum","getVal","text","label","Option","Radio","withTheme","args","KegSelect","InternalSelect","valKey","getInputValueKey","Select","selectStyles","selectClasses","useThemeTypeAsClass","classRef","useClassName","select","useSelectHandlers","Icon","icon","ChevronDown","color","Slider","KegSwitch","InternalSwitch","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","areaColor","backgroundColor","colors","onTintColor","useCheckedState","themeStyles","join","setCheckedValue","event","checkCall","SideComponent","Component","renderFromType","ChildrenComponent","useSwitchHandle","Switch","LeftComponent","close","RightComponent","SwitchComponent","setCheckedSetter","useState","toBool","elThemePath","activeStyles","typeClassName","left","getChecked","getOnChangeHandler","isWeb","getPlatform","KegText","href","target","attrs","Touchable","Link","LinkWrapper","ScrollView","KegScrollView","propTypes"],"mappings":"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"}