{"version":3,"file":"getInputValue.js","sources":["../../../src/utils/helpers/getInputValue.js"],"sourcesContent":["import { get, isFunc, isArr } from '@keg-hub/jsutils'\n\n/**\n * Gets the correct key name based on the platform and available onChange functions\n * @param {boolean} isWeb - Is on the web platform\n * @param {function} onChange - handles changes the value\n * @param {function} onValueChange - handles changes the value (Native)\n * @param {boolean} readOnly - Is the the component read only\n *\n * @returns {string} - Name of prop key to use\n */\nexport const getInputValueKey = (isWeb, onChange, onValueChange, readOnly) => {\n  return !isWeb\n    ? 'selectedValue'\n    : isFunc(onChange) || isFunc(onValueChange) || readOnly\n      ? 'value'\n      : 'defaultValue'\n}\n\n/**\n * Checks if value exists, if not, tries to get the value from the children\n * @param {Any} value - Value to use\n * @param {*} children - Children of a component\n *\n * @returns {Any} - Found value\n */\nexport const getValueFromChildren = (value, children) => {\n  return value\n    ? value\n    : children\n      ? isArr(children)\n          ? get(children, [ '0', 'props', 'children' ])\n          : get(children, [ 'props', 'children' ])\n      : ''\n}\n"],"names":["getInputValueKey","isWeb","onChange","onValueChange","readOnly","isFunc","getValueFromChildren","value","children","isArr","get"],"mappings":";;;;;;IAWaA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA8C;AAC5E,SAAO,CAACH,KAAD,GACH,eADG,GAEHI,cAAM,CAACH,QAAD,CAAN,IAAoBG,cAAM,CAACF,aAAD,CAA1B,IAA6CC,QAA7C,GACE,OADF,GAEE,cAJN;AAKD;IASYE,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACvD,SAAOD,KAAK,GACRA,KADQ,GAERC,QAAQ,GACNC,aAAK,CAACD,QAAD,CAAL,GACIE,WAAG,CAACF,QAAD,EAAW,CAAE,GAAF,EAAO,OAAP,EAAgB,UAAhB,CAAX,CADP,GAEIE,WAAG,CAACF,QAAD,EAAW,CAAE,OAAF,EAAW,UAAX,CAAX,CAHD,GAIN,EANN;AAOD;;;;;"}