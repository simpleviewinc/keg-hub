{"version":3,"file":"useFromToAnimation.js","sources":["../../../src/hooks/useFromToAnimation.js"],"sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { Animated } from 'react-native'\nimport { noOp } from '@keg-hub/jsutils'\nimport { getPlatform } from 'KegGetPlatform'\nconst isWeb = getPlatform() === 'web'\n\n/**\n * A hook for running an animation from an origin (from) point to a destination (to) point\n * @param {Object} params - options object\n * @param {number} params.from - the starting value of the animation\n * @param {number} params.to - the ending destination value of the animation\n * @param {Number} params.duration - time in milliseconds that the animation should proceed\n * @param {boolean} params.loop - loop the animation\n * @param {Easing} params.easing - react-native Easing obj\n * @param {Function} params.onFinish - passed to Animated.start(), called when the animation finishes\n * @returns {Array} [ Animated.Value ]\n *  - Animated.Value: pass this value to your Animated.View to begin the animation\n */\nexport const useFromToAnimation = params => {\n  const {\n    from,\n    to,\n    duration = 500,\n    onFinish = noOp,\n    loop = false,\n    easing,\n  } = params || {}\n  // determines when the animation should run\n  const animDependencies = [ from, to, duration, loop, easing, onFinish ]\n\n  // define the animated value here so we can return it. It needs to recompute\n  // whenever the animation would run again, which is why it shares hookDependencies\n  // with the useEffect below\n  const fromVal = useMemo(() => new Animated.Value(from), animDependencies)\n\n  const config = { toValue: to, duration, easing }\n  config.useNativeDriver = !isWeb\n\n  const animatedTiming = Animated.timing(fromVal, config)\n\n  useEffect(() => {\n    loop\n      ? Animated.loop(animatedTiming).start()\n      : animatedTiming.start(onFinish)\n  }, animDependencies)\n\n  return [fromVal]\n}\n"],"names":["isWeb","getPlatform","useFromToAnimation","params","from","to","duration","onFinish","noOp","loop","easing","animDependencies","fromVal","useMemo","Animated","Value","config","toValue","useNativeDriver","animatedTiming","timing","useEffect","start"],"mappings":";;;;;;;;;AAIA,IAAMA,KAAK,GAAGC,uBAAW,OAAO,KAAhC;IAcaC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM,EAAI;AAC1C,aAOIA,MAAM,IAAI,EAPd;AAAA,MACEC,IADF,QACEA,IADF;AAAA,MAEEC,EAFF,QAEEA,EAFF;AAAA,2BAGEC,QAHF;AAAA,MAGEA,QAHF,8BAGa,GAHb;AAAA,2BAIEC,QAJF;AAAA,MAIEA,QAJF,8BAIaC,YAJb;AAAA,uBAKEC,IALF;AAAA,MAKEA,IALF,0BAKS,KALT;AAAA,MAMEC,MANF,QAMEA,MANF,CAD0C;AAU1C,MAAMC,gBAAgB,GAAG,CAAEP,IAAF,EAAQC,EAAR,EAAYC,QAAZ,EAAsBG,IAAtB,EAA4BC,MAA5B,EAAoCH,QAApC,CAAzB,CAV0C;AAe1C,MAAMK,OAAO,GAAGC,aAAO,CAAC;AAAA,WAAM,IAAIC,oBAAQ,CAACC,KAAb,CAAmBX,IAAnB,CAAN;AAAA,GAAD,EAAiCO,gBAAjC,CAAvB;AAEA,MAAMK,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAEZ,EAAX;AAAeC,IAAAA,QAAQ,EAARA,QAAf;AAAyBI,IAAAA,MAAM,EAANA;AAAzB,GAAf;AACAM,EAAAA,MAAM,CAACE,eAAP,GAAyB,CAAClB,KAA1B;AAEA,MAAMmB,cAAc,GAAGL,oBAAQ,CAACM,MAAT,CAAgBR,OAAhB,EAAyBI,MAAzB,CAAvB;AAEAK,EAAAA,eAAS,CAAC,YAAM;AACdZ,IAAAA,IAAI,GACAK,oBAAQ,CAACL,IAAT,CAAcU,cAAd,EAA8BG,KAA9B,EADA,GAEAH,cAAc,CAACG,KAAf,CAAqBf,QAArB,CAFJ;AAGD,GAJQ,EAINI,gBAJM,CAAT;AAMA,SAAO,CAACC,OAAD,CAAP;AACD;;;;"}