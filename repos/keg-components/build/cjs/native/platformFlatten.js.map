{"version":3,"file":"platformFlatten.js","sources":["../../../src/utils/styles/platformFlatten.js"],"sourcesContent":["import { getPlatform } from 'KegGetPlatform'\nimport { get, deepMerge, reduceObj, isObj } from '@keg-hub/jsutils'\n\nconst allPlatforms = `$all`\nconst platform = `$` + getPlatform()\nconst nonPlatform = platform !== `$web` ? `$web` : `$native`\n\nconst platforms = [ allPlatforms, platform, nonPlatform ]\n\n/**\n * Merges an object with platform keys with the original object\n * @param {Object} toMerge - Object to merge with it's platform keys\n *\n * @returns {Object} - Merged object w/ the platform keys merged into it's self\n */\nconst mergePlatforms = toMerge => {\n  // Pull out the platform types to get object without platforms\n  const { $all, $web, $native, ...otherKeys } = toMerge\n\n  // Loop over the platform types\n  return platforms.reduce((merged, plat) => {\n    // Check if the platform should be merged\n    const platStyles = plat !== nonPlatform && get(toMerge, [plat])\n\n    // deepMerge the styles if needed\n    return platStyles ? deepMerge(merged, platStyles) : merged\n  }, otherKeys)\n}\n\n/**\n * Flattens an object based on the current platform\n * Merges together with any `$all` keys\n * @param {Object} initial\n *\n * @returns {Object} - Platform flattened object\n */\nexport const platformFlatten = initial => {\n  // Check if initial has platform keys in it\n  const hasPlatforms = Object.keys(initial).some(\n    key => platforms.indexOf(key) !== -1\n  )\n\n  // If it does merge the platforms\n  const noPlatforms = (hasPlatforms && mergePlatforms(initial)) || {\n    ...initial,\n  }\n\n  // Loop the object with no platforms, and check it's children for platforms\n  return reduceObj(\n    noPlatforms,\n    (key, value, merged) => {\n      // If the value is an object, flatten the platforms\n      // Set the value to the key in the merged object\n      merged[key] = isObj(value) ? platformFlatten(value) : value\n\n      return merged\n    },\n    noPlatforms\n  )\n}\n"],"names":["allPlatforms","platform","getPlatform","nonPlatform","platforms","mergePlatforms","toMerge","$all","$web","$native","otherKeys","reduce","merged","plat","platStyles","get","deepMerge","platformFlatten","initial","hasPlatforms","Object","keys","some","key","indexOf","noPlatforms","reduceObj","value","isObj"],"mappings":";;;;;;;;AAGA,IAAMA,YAAY,SAAlB;AACA,IAAMC,QAAQ,GAAG,MAAMC,uBAAW,EAAlC;AACA,IAAMC,WAAW,WAAjB;AAEA,IAAMC,SAAS,GAAG,CAAEJ,YAAF,EAAgBC,QAAhB,EAA0BE,WAA1B,CAAlB;AAQA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EAAI;AAAA,MAExBC,IAFwB,GAEcD,OAFd,CAExBC,IAFwB;AAAA,MAElBC,IAFkB,GAEcF,OAFd,CAElBE,IAFkB;AAAA,MAEZC,OAFY,GAEcH,OAFd,CAEZG,OAFY;AAAA,MAEAC,SAFA,sDAEcJ,OAFd;AAKhC,SAAOF,SAAS,CAACO,MAAV,CAAiB,UAACC,MAAD,EAASC,IAAT,EAAkB;AAExC,QAAMC,UAAU,GAAGD,IAAI,KAAKV,WAAT,IAAwBY,WAAG,CAACT,OAAD,EAAU,CAACO,IAAD,CAAV,CAA9C,CAFwC;AAKxC,WAAOC,UAAU,GAAGE,iBAAS,CAACJ,MAAD,EAASE,UAAT,CAAZ,GAAmCF,MAApD;AACD,GANM,EAMJF,SANI,CAAP;AAOD,CAZD;IAqBaO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO,EAAI;AAExC,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,CACnB,UAAAC,GAAG;AAAA,WAAInB,SAAS,CAACoB,OAAV,CAAkBD,GAAlB,MAA2B,CAAC,CAAhC;AAAA,GADgB,CAArB,CAFwC;AAOxC,MAAME,WAAW,GAAIN,YAAY,IAAId,cAAc,CAACa,OAAD,CAA/B,iDACfA,OADe,CAApB,CAPwC;AAYxC,SAAOQ,iBAAS,CACdD,WADc,EAEd,UAACF,GAAD,EAAMI,KAAN,EAAaf,MAAb,EAAwB;AAGtBA,IAAAA,MAAM,CAACW,GAAD,CAAN,GAAcK,aAAK,CAACD,KAAD,CAAL,GAAeV,eAAe,CAACU,KAAD,CAA9B,GAAwCA,KAAtD;AAEA,WAAOf,MAAP;AACD,GARa,EASda,WATc,CAAhB;AAWD;;;;"}