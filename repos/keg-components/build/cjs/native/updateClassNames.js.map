{"version":3,"file":"updateClassNames.js","sources":["../../../src/utils/helpers/updateClassNames.js"],"sourcesContent":["import { getPlatform } from 'KegGetPlatform'\nimport { ensureClassArray } from '../../utils/helpers/ensureClassArray'\nconst isWeb = getPlatform() === 'web'\n\n/**\n * Helper to update the classNames on a Dom node\n * @param {Object} element - Dom node element\n * @param {RefObject<Array<string>>} classesRef - Array of classes currently on the element\n * @param {string} defClass - Default keg-components class always on the element\n * @param {string|Array[string]} className - Class or classes to add to the element\n *\n * @returns {void}\n */\nexport const updateClassNames = (element, classesRef, defClass, className) => {\n  if (!isWeb || !('classList' in element)) return\n\n  // Add the default classes to the classList\n  defClass && element.classList.add(defClass)\n\n  // Ensure we have a flat array\n  const classArr = ensureClassArray(className)\n\n  // Loop over the previous classes, and see if any have been removed\n  classesRef.current.map(\n    cls => cls && classArr.indexOf(cls) === -1 && element.classList.remove(cls)\n  )\n\n  // Update our ref with the new classes\n  // Which will allows us to check them for updates on next render\n  classesRef.current = classArr\n\n  // Add the classes to the element\n  element.classList.add(...classArr)\n}\n"],"names":["updateClassNames","element","classesRef","defClass","className"],"mappings":";;;;;;IAaaA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUC,UAAV,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA8C;AAC5E,EAAyC,OADmC;AAoB7E;;;;"}