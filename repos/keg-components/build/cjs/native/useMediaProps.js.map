{"version":3,"file":"useMediaProps.js","sources":["../../../src/hooks/useMediaProps.js"],"sourcesContent":["import { useMemo } from 'react'\nimport { isValidComponent } from 'KegUtils'\nimport { get, reduceObj, isStr, deepMerge, isObj, noOpObj } from '@keg-hub/jsutils'\n\nconst getMediaType = (mediaTypes, styles) => {\n  return mediaTypes\n    ? reduceObj(\n        mediaTypes,\n        (key, value, mediaData) => {\n          return !mediaData.type && value\n            ? {\n                type: key,\n                media: value,\n                styles: !isObj(styles) ? styles : styles.media,\n              }\n            : mediaData\n        },\n        {}\n      )\n    : noOpObj\n}\n\nexport const useMediaProps = ({ Media, image, video, styles }) => {\n  return useMemo(() => {\n    const { type, media, styles: mediaStyles } = getMediaType(\n      { Media, image, video },\n      styles\n    )\n\n    // If no media, or media is a component, don't return any props\n    return !Boolean(media) || isValidComponent(media)\n      ? null\n      : // If media is a string, we assume its a url / source to media\n      isStr(media)\n        ? {\n            type,\n            src: media,\n            styles: {\n            // Add loading styles for media from theme\n              loading: styles.loading,\n              // Add all media styles from theme\n              ...mediaStyles,\n            },\n          }\n        : // Otherwise, it's assumed media is an object\n          {\n            type,\n            ...media,\n            styles: deepMerge(\n            // Add loading styles for media from theme\n              { loading: styles.loading },\n              // Add all media styles from theme\n              mediaStyles,\n              // Add passed in styles from user, only when media is an object\n              get(media, 'style', {})\n            ),\n          }\n  }, [ Media, image, video, styles ])\n}\n"],"names":["getMediaType","mediaTypes","styles","reduceObj","key","value","mediaData","type","media","isObj","noOpObj","useMediaProps","Media","image","video","useMemo","mediaStyles","Boolean","isValidComponent","isStr","src","loading","deepMerge","get"],"mappings":";;;;;;;;;;;;;AAIA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAaC,MAAb,EAAwB;AAC3C,SAAOD,UAAU,GACbE,iBAAS,CACPF,UADO,EAEP,UAACG,GAAD,EAAMC,KAAN,EAAaC,SAAb,EAA2B;AACzB,WAAO,CAACA,SAAS,CAACC,IAAX,IAAmBF,KAAnB,GACH;AACEE,MAAAA,IAAI,EAAEH,GADR;AAEEI,MAAAA,KAAK,EAAEH,KAFT;AAGEH,MAAAA,MAAM,EAAE,CAACO,aAAK,CAACP,MAAD,CAAN,GAAiBA,MAAjB,GAA0BA,MAAM,CAACM;AAH3C,KADG,GAMHF,SANJ;AAOD,GAVM,EAWP,EAXO,CADI,GAcbI,eAdJ;AAeD,CAhBD;IAkBaC,aAAa,GAAG,SAAhBA,aAAgB,OAAqC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbZ,MAAa,QAAbA,MAAa;AAChE,SAAOa,aAAO,CAAC,YAAM;AAAA,wBAC0Bf,YAAY,CACvD;AAAEY,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,KAAK,EAALA,KAAT;AAAgBC,MAAAA,KAAK,EAALA;AAAhB,KADuD,EAEvDZ,MAFuD,CADtC;AAAA,QACXK,IADW,iBACXA,IADW;AAAA,QACLC,KADK,iBACLA,KADK;AAAA,QACUQ,WADV,iBACEd,MADF;AAOnB,WAAO,CAACe,OAAO,CAACT,KAAD,CAAR,IAAmBU,iCAAgB,CAACV,KAAD,CAAnC,GACH,IADG;AAGLW,IAAAA,aAAK,CAACX,KAAD,CAAL,GACI;AACED,MAAAA,IAAI,EAAJA,IADF;AAEEa,MAAAA,GAAG,EAAEZ,KAFP;AAGEN,MAAAA,MAAM;AAEJmB,QAAAA,OAAO,EAAEnB,MAAM,CAACmB;AAFZ,SAIDL,WAJC;AAHR,KADJ;AAAA;AAaMT,MAAAA,IAAI,EAAJA;AAbN,OAcSC,KAdT;AAeMN,MAAAA,MAAM,EAAEoB,iBAAS;AAEf;AAAED,QAAAA,OAAO,EAAEnB,MAAM,CAACmB;AAAlB,OAFe;AAIfL,MAAAA,WAJe;AAMfO,MAAAA,WAAG,CAACf,KAAD,EAAQ,OAAR,EAAiB,EAAjB,CANY;AAfvB,MAHF;AA2BD,GAlCa,EAkCX,CAAEI,KAAF,EAASC,KAAT,EAAgBC,KAAhB,EAAuBZ,MAAvB,CAlCW,CAAd;AAmCD;;;;"}