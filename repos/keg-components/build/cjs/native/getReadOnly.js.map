{"version":3,"file":"getReadOnly.js","sources":["../../../src/utils/helpers/getReadOnly.js"],"sourcesContent":["/**\n * Checks if the passed in props equate to a disabled value\n * @param {boolean} isWeb - Is on the web platform\n * @param {boolean} readOnly - Is the component read only\n * @param {boolean} disabled - Is the component disabled\n * @param {boolean} editable - Is the component editable\n *\n * @returns {Object} key / value pair of readOnly state\n */\nexport const getReadOnly = (isWeb, readOnly, disabled, editable = true) => {\n  const key = isWeb ? 'disabled' : 'editable'\n\n  // Get the inverse of the props for native because editable works opposite of readOnly\n  const value = isWeb\n    ? readOnly || disabled || !editable\n    : !(readOnly || disabled || !editable)\n\n  return { [key]: value }\n}\n"],"names":["getReadOnly","isWeb","readOnly","disabled","editable","key","value"],"mappings":";;;;;;IASaA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAAgD;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACzE,MAAMC,GAAG,GAAGJ,KAAK,GAAG,UAAH,GAAgB,UAAjC,CADyE;AAIzE,MAAMK,KAAK,GAAGL,KAAK,GACfC,QAAQ,IAAIC,QAAZ,IAAwB,CAACC,QADV,GAEf,EAAEF,QAAQ,IAAIC,QAAZ,IAAwB,CAACC,QAA3B,CAFJ;AAIA,uDAAUC,GAAV,EAAgBC,KAAhB;AACD;;;;"}