{"version":3,"file":"autocompleteInput.js","sources":["../../../src/components/form/autocomplete/autocompleteInput.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { mod } from '@keg-hub/jsutils'\nimport { Input } from 'KegInput'\n\n/**\n * Key Press Handler for AutocompleteInput. Updates the\n * highlighted item in the menu when the user\n * presses the up or down arrow on the keyboard.\n * @param {number?} currentIndex - currently selected index in items\n * @param {Function} setSelectedItem - function to highlight an item\n * @param {Array<Object>} items - currently visible items in list\n */\nconst useKeyPressHandler = (currentIndex, setSelectedItem, items) => {\n  const up = 'ArrowUp'\n  const down = 'ArrowDown'\n  return useCallback(\n    ({ key }) => {\n      if (key !== up && key !== down) return\n\n      const delta = key === down ? 1 : -1\n      const nextIndex = mod(currentIndex + delta || 0, items.length)\n\n      items[nextIndex] && setSelectedItem(items[nextIndex])\n    },\n    [ currentIndex, setSelectedItem, items ]\n  )\n}\n\n/**\n *\n * @param {Object} props\n * @param {number} props.highlightedIndex - index of currently highlighted item\n * @param {Function} props.highlightItem - highlights the item object passed to it\n * @param {Function} props.selectItem - selects the item, filling the input text\n * @param {Array<Object>} props.items - the possible autocomplete items\n * @param {...*} props.* - remaining props are passed to <Input />\n */\nexport const AutocompleteInput = ({\n  highlightedIndex,\n  highlightItem,\n  selectItem,\n  items,\n  ...props\n}) => {\n  // on key press, highlight the element depending on arrow-up or arrow-down\n  const onKeyPress = useKeyPressHandler(highlightedIndex, highlightItem, items)\n\n  // on key press, select the highlighted item\n  const onEnterPress = useCallback(\n    () => selectItem?.(items[highlightedIndex]),\n    [ items, selectItem ]\n  )\n\n  return (\n    <Input\n      onKeyPress={onKeyPress}\n      onSubmitEditing={onEnterPress}\n      useTouch={false}\n      {...props}\n    />\n  )\n}\n\nAutocompleteInput.propTypes = {\n  ...Input.propTypes,\n  highlightedIndex: PropTypes.number,\n  highlightItem: PropTypes.func,\n  selectItem: PropTypes.func,\n  items: PropTypes.array,\n}\n"],"names":["useKeyPressHandler","currentIndex","setSelectedItem","items","up","down","useCallback","key","delta","nextIndex","mod","length","AutocompleteInput","highlightedIndex","highlightItem","selectItem","props","onKeyPress","onEnterPress","React","Input"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,YAAD,EAAeC,eAAf,EAAgCC,KAAhC,EAA0C;AACnE,MAAMC,EAAE,GAAG,SAAX;AACA,MAAMC,IAAI,GAAG,WAAb;AACA,SAAOC,iBAAW,CAChB,gBAAa;AAAA,QAAVC,GAAU,QAAVA,GAAU;AACX,QAAIA,GAAG,KAAKH,EAAR,IAAcG,GAAG,KAAKF,IAA1B,EAAgC;AAEhC,QAAMG,KAAK,GAAGD,GAAG,KAAKF,IAAR,GAAe,CAAf,GAAmB,CAAC,CAAlC;AACA,QAAMI,SAAS,GAAGC,WAAG,CAACT,YAAY,GAAGO,KAAf,IAAwB,CAAzB,EAA4BL,KAAK,CAACQ,MAAlC,CAArB;AAEAR,IAAAA,KAAK,CAACM,SAAD,CAAL,IAAoBP,eAAe,CAACC,KAAK,CAACM,SAAD,CAAN,CAAnC;AACD,GARe,EAShB,CAAER,YAAF,EAAgBC,eAAhB,EAAiCC,KAAjC,CATgB,CAAlB;AAWD,CAdD;IAyBaS,iBAAiB,GAAG,SAApBA,iBAAoB,QAM3B;AAAA,MALJC,gBAKI,SALJA,gBAKI;AAAA,MAJJC,aAII,SAJJA,aAII;AAAA,MAHJC,UAGI,SAHJA,UAGI;AAAA,MAFJZ,KAEI,SAFJA,KAEI;AAAA,MADDa,KACC;AAEJ,MAAMC,UAAU,GAAGjB,kBAAkB,CAACa,gBAAD,EAAmBC,aAAnB,EAAkCX,KAAlC,CAArC,CAFI;AAKJ,MAAMe,YAAY,GAAGZ,iBAAW,CAC9B;AAAA,WAAMS,UAAN,aAAMA,UAAN,uBAAMA,UAAU,CAAGZ,KAAK,CAACU,gBAAD,CAAR,CAAhB;AAAA,GAD8B,EAE9B,CAAEV,KAAF,EAASY,UAAT,CAF8B,CAAhC;AAKA,SACEI,wCAACC,WAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,eAAe,EAAEC,YAFnB;AAGE,IAAA,QAAQ,EAAE;AAHZ,KAIMF,KAJN,EADF;AAQD;;;;"}