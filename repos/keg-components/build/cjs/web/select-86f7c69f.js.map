{"version":3,"file":"select-86f7c69f.js","sources":["../../../src/assets/icons/chevronDown/chevronDown.js","../../../src/components/internal/select.js"],"sourcesContent":["import * as React from 'react'\nimport { SvgIcon } from 'KegSvgIcon'\n\nexport const ChevronDown = props => {\n  return (\n    <SvgIcon\n      {...props}\n      viewBox='0 0 448 512'\n      delta='M441.9 167.3l-19.8-19.8c-4.7-4.7-12.3-4.7-17 0L224 328.2 42.9 147.5c-4.7-4.7-12.3-4.7-17 0L6.1 167.3c-4.7 4.7-4.7 12.3 0 17l209.4 209.4c4.7 4.7 12.3 4.7 17 0l209.4-209.4c4.7-4.7 4.7-12.3 0-17z'\n    />\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Picker } from 'react-native'\nimport { useClassName } from 'KegClassName'\n\n/**\n * Switch\n * @summary Wraps the React Native picker component. All props are optional\n *\n * @param {Object} props - see switchPropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef(({ className, ...props }, ref) => {\n  const classRef = useClassName('keg-select', className, ref)\n\n  return (\n    <Picker {...props} ref={classRef} />\n  )\n})\n\nSelect.propTypes = {\n  ...Picker.propTypes,\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n}\n"],"names":["ChevronDown","props","React.createElement","SvgIcon","Select","React","forwardRef","ref","className","classRef","useClassName","Picker"],"mappings":";;;;;;;;;;;IAGaA,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAClC,SACEC,oBAACC,eAAD,yCACMF,KADN;AAEE,IAAA,OAAO,EAAC,aAFV;AAGE,IAAA,KAAK,EAAC;AAHR,KADF;AAOD;;ICEYG,MAAM,GAAGC,cAAK,CAACC,UAAN,CAAiB,gBAA0BC,GAA1B,EAAkC;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,MAAjBP,KAAiB;AACvE,MAAMQ,QAAQ,GAAGC,yBAAY,CAAC,YAAD,EAAeF,SAAf,EAA0BD,GAA1B,CAA7B;AAEA,SACEF,6BAACM,kBAAD,yCAAYV,KAAZ;AAAmB,IAAA,GAAG,EAAEQ;AAAxB,KADF;AAGD,CANqB;;;;;"}