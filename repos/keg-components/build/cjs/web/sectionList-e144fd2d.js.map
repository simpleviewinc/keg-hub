{"version":3,"file":"sectionList-e144fd2d.js","sources":["../../../src/utils/components/getElementLayout.js","../../../src/utils/components/scrollList.js","../../../src/hooks/useScroll/useScroll.js","../../../src/components/list/sectionList.native.js","../../../src/components/list/sectionList.js"],"sourcesContent":["import { getPlatform } from 'KegGetPlatform'\nconst isWeb = getPlatform() === 'web'\n\nconst defLayout = { top: 0, left: 0 }\n\n/**\n * Helper to get a normalize layout location of the passed in element\n * @param {Object} el - Dom Element to get the layout for\n *\n * @returns {Object} - Layout of the passed in Dom Element\n */\nexport const getElementLayout = el => {\n  // If not on a web platform, we should not try to access the window / document objects\n  if (!isWeb) return defLayout\n\n  const rect = el.getBoundingClientRect()\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n\n  return {\n    top: rect.top + scrollTop,\n    left: rect.left + scrollLeft,\n  }\n}\n","import { exists } from '@keg-hub/jsutils'\n\n/**\n * Helper method to scroll to an item in a list in a **BROWSER ENVIRONMENT ONLY**\n * <br/> Native does not have a window.scroll, so the helpers must be defined separately\n * @function\n * @param {object} props\n * @param {object} [props.top] - Vertical scroll to position\n * @param {object} [props.left] - Horizontal scroll to position\n * @param {object} [props.behavior=smooth] - Type of scrolling ( auto | smooth )\n */\nexport const scrollList = ({ top, left, behavior = 'smooth' }) => {\n  window.scroll({\n    behavior,\n    ...(exists(top) && { top }),\n    ...(exists(left) && { left }),\n  })\n}\n","import { useState, useLayoutEffect, useCallback, useRef } from 'react'\nimport { noOp, throttle } from '@keg-hub/jsutils'\nimport { getScrollValues } from 'KegGetScrollValues'\n/**\n * Custom hook to track the browser windows scroll position\n * <br/> The onScroll prop should be a function on consistent identity for the throttle to work\n * <br/> I.E. Wrap with `useCallback` if needed\n * @function\n * @example\n * const [{ scrollX, scrollY }] = useScroll()\n * @param {function} [onScroll] - Function called when the scroll event fires\n * @param {function} [onScrollEnd] - Function called at the end of the scroll event\n * @param {number} [amount=50] - Throttle amount for the scrollHandler callback\n *\n * @returns {Object} The current scrollX and scrollY positions\n */\nexport const useScroll = (onScroll = noOp, onScrollEnd = noOp, amount = 50) => {\n  const [ scroll, setScroll ] = useState({\n    scrollX: 0,\n    scrollY: 0,\n  })\n\n  const timeoutRef = useRef(null)\n\n  const eventHandler = useCallback(\n    throttle((event, isEnd = false) => {\n      const scrollUpdate = getScrollValues()\n\n      isEnd\n        ? onScrollEnd?.(event, scrollUpdate)\n        : onScroll?.(event, scrollUpdate)\n\n      setScroll(scrollUpdate)\n    }, amount),\n    [ amount, onScroll, onScrollEnd, setScroll ]\n  )\n\n  const handlerTimeout = useCallback(\n    event => {\n      if (timeoutRef.current !== null) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        eventHandler(event, true)\n      }, 3 * amount)\n\n      eventHandler(event)\n    },\n    [ amount, timeoutRef && timeoutRef.current, eventHandler ]\n  )\n\n  useLayoutEffect(() => {\n    window.addEventListener('scroll', handlerTimeout)\n\n    return () => window.removeEventListener('scroll', handlerTimeout)\n  }, [handlerTimeout])\n\n  return scroll\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../typography/text'\nimport { useScroll } from 'KegUseScroll'\nimport { useClassName } from 'KegClassName'\nimport { useThemePath } from '../../hooks/useThemePath'\nimport { useScrollClassName } from 'KegScrollClassName'\nimport { checkCall, noPropObj, noPropArr, get, isFunc } from '@keg-hub/jsutils'\nimport React, {\n  useCallback,\n  useRef,\n  useMemo,\n  useEffect,\n  useState,\n  createRef,\n} from 'react'\nimport { SectionList as RNSectionList, SafeAreaView } from 'react-native'\nimport {\n  renderFromType,\n  getElementLayout,\n  scrollList,\n} from '../../utils/components'\n\n/**\n * Helper hook to add __kegIndex to the sections\n * This allows referencing them as needed without requiring the consumer to add the index\n *\n * @param {Array} sections - Groups of items to be displayed in the SectionList component\n *\n * @return {Array} - sections array with the __kegIndex added\n */\nconst useIndexedSections = (sections, indexBy) => {\n  return useMemo(() => {\n    return sections.map((section, index) => ({\n      ...section,\n      __kegIndex: get(section, indexBy, index),\n    }))\n  }, [sections])\n}\n\n/**\n * Helper hook to allow tracking scrolling between section\n * @param {function} onScrollSectionChange - Consumer Callback for when a section is scrolled\n * @param {number} sectionChangeOffset - Offset the final scroll position by some amount (px)\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} activeSection - Most recent Section in the view calling this hook\n * @param {function} setActiveSection - Update which section is active\n * @param {Object} isScrollingRef - React ref to track if we are scrolling\n *\n * @returns {function} - Method to call when a section is scrolled\n */\nconst useSectionChangeOnScroll = (\n  onScrollSectionChange,\n  sectionChangeOffset,\n  activeSection,\n  setActiveSection,\n  sectionRefs,\n  isScrollingRef\n) => {\n  useScroll(\n    null,\n    useCallback((__, scrollUpdate) =>\n      calculateActiveSection({\n        onScrollSectionChange,\n        sectionChangeOffset,\n        activeSection,\n        setActiveSection,\n        sectionRefs,\n        isScrollingRef,\n        scrollUpdate,\n      })\n    )\n  )\n}\n\n/**\n * Calculates and sets the active section based on current scroll value\n * @param {Object} props\n * @param {function} props.onScrollSectionChange - Consumer Callback for when a section is scrolled\n * @param {number} props.sectionChangeOffset - Offset the final scroll position by some amount (px)\n * @param {Object} props.sectionRefs - React ref of all Section divider components.\n * @param {Object} props.activeSection - Most recent Section in the view calling this hook\n * @param {function} props.setActiveSection - Update which section is active\n * @param {Object} props.isScrollingRef - React ref to track if we are scrolling\n * @param {Object} props.scrollUpdate - contains current scrollX and scrollY values {scrollX, scrollY}\n *\n * @returns {Void}\n */\nconst calculateActiveSection = props => {\n  const {\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef,\n    scrollUpdate,\n  } = props\n\n  if (!onScrollSectionChange || isScrollingRef.current || !scrollUpdate) return\n\n  const { scrollY } = scrollUpdate\n  // Subtract the custom offset to the scroll position\n  // Because offset should be relative to the element, not the scroll pos\n  const scrollLoc = scrollY - sectionChangeOffset\n\n  // Loop the sections can check their position against the scroll position\n  // Find closest section that's more then the current scroll position\n  const currentSection = Object.entries(sectionRefs.current).reduce(\n    (foundSection, [ __, sectionData ]) => {\n      const checkTop = sectionData?.layout?.top\n      const foundTop = foundSection?.layout?.top\n\n      if (\n        !foundSection ||\n        (scrollLoc >= checkTop && foundTop < checkTop) ||\n        (foundTop > scrollLoc && foundTop > checkTop)\n      )\n        foundSection = sectionData\n\n      return foundSection\n    },\n    false\n  )\n\n  if (!currentSection || currentSection.index === activeSection) return\n\n  checkCall(onScrollSectionChange, currentSection.index)\n  setActiveSection(currentSection.index)\n}\n\n/**\n * Helper hook to allow switching / scrolling to a section when a section change happens\n * @param {boolean} doScrolling - Is automatic scrolling turned on\n * @param {function} onSectionChange - Consumer Callback method for when a section changes\n * @param {number} scrollOffset - Offset the final scroll position by some amount (px)\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} listRef - React ref of the SectionList component\n * @param {Object} isScrollingRef - React ref to track if we are scrolling\n * @param {number} scrollCooldown - Amount of time to wait before allowing scrolling (ms)\n * @param {function} setActiveSection - Update which section is active\n *\n * @returns {function} - Method to call when the current section is changed\n */\nconst useSectionChange = (\n  doScrolling,\n  onSectionChange,\n  scrollOffset,\n  setActiveSection,\n  sectionRefs,\n  listRef,\n  isScrollingRef,\n  scrollCooldown\n) => {\n  return useCallback(\n    index => {\n      // If there's no scrolling call the onSectionChange if it exists\n      if (!doScrolling) return checkCall(onSectionChange, index)\n\n      // Layout of the SectionHeader should be set in the useEffect hook\n      // of the SectionHeader component so it can be accessed here\n      const sectionData = sectionRefs.current[index]\n      const layout = sectionData?.layout\n\n      if (!layout)\n        return console.warn(`Section layout not correctly set`, sectionData)\n\n      // Update the is scrolling ref\n      // So other scrolling methods don't try to scroll\n      isScrollingRef.current = true\n\n      // Call the scroll method, to scroll to the section header based on it's layout\n      scrollList({\n        listRef,\n        animated: true,\n        behavior: 'smooth',\n        top: layout.top + scrollOffset,\n      })\n\n      // Call the passed in onSectionChange if it exists\n      checkCall(onSectionChange, index)\n\n      // Update the internal active section\n      setActiveSection(index)\n\n      // Wrap in a timeout to give it some cool down\n      // No way to track when scrolling stops, so this is the best we have\n      setTimeout(() => {\n        // Turn is scrolling back off\n        isScrollingRef.current = false\n      }, scrollCooldown)\n    },\n    [\n      scrollOffset,\n      scrollCooldown,\n      listRef.current,\n      onSectionChange,\n      setActiveSection,\n      sectionRefs.current,\n      isScrollingRef.current,\n    ]\n  )\n}\n\n/**\n * Displays a section header for each section, adding a view to helper with tracking\n * @param {Object} props\n * @param {number} props.index - Position of the section being rendered\n * @param {Object|function|node} props.renderSectionHeader - Callback passed from the consumer\n * @param {Object} props.sectionRefs - Ref Object to hold refs to the section header Dom Node\n * @param {Object} props.section - Current section being rendered\n * @param {Object} props.styles - Merged custom and theme styles\n * @param {function} props.onSectionChange - Callback called when a section is changed\n */\nconst SectionHeader = props => {\n  const {\n    index,\n    onSectionChange,\n    renderSectionHeader,\n    sectionRefs,\n    section,\n    styles,\n  } = props\n\n  const sectionRef = useRef(null)\n\n  useEffect(() => {\n    // If no onSectionChange method\n    // then we don't need to set the sectionRefs\n    if (!isFunc(onSectionChange)) return\n\n    sectionRefs.current[index] = sectionRef.current\n\n    sectionRefs.current[index].element &&\n      !sectionRefs.current[index].layout &&\n      (sectionRefs.current[index].layout = getElementLayout(\n        sectionRef.current.element\n      ))\n\n    return () => delete sectionRefs.current[index]\n  }, [ sectionRef.current, index, onSectionChange ])\n\n  // Wrap the renderSectionHeader method\n  // With a fragment, and view so we can track the section headers\n  // with an internal component and ref\n  return (\n    <>\n      <View\n        className={`keg-section-${index}`}\n        ref={element => (sectionRef.current = { element, index })}\n      />\n      { checkCall(renderSectionHeader, { section, styles, onSectionChange }) }\n    </>\n  )\n}\n\n/**\n * Helper hook for the renderSectionHeader, that wraps our custom Section header in a callback\n * @param {function} renderSectionHeader - Consumers callback method to render their section headers\n * @param {function} onSectionChange - Consumers callback called whe a section is changed\n * @param {Object} sectionRefs - React ref of all Section divider components.\n * @param {Object} styles - Merged custom and theme styles\n *\n * @returns {function} - Render function for Section Headers\n */\nconst useRenderSectionHeader = (\n  renderSectionHeader,\n  onSectionChange,\n  sectionRefs,\n  styles\n) => {\n  // This gets used by the renderSectionHeader prop\n  // It's not an issue with hooks, because the Callback hook\n  // Has already been called before is passed as prop to the SectionList component\n  // Which means we can call hooks in sub components\n  return useCallback(\n    ({ section }) => {\n      return (\n        <SectionHeader\n          index={section.__kegIndex}\n          renderSectionHeader={renderSectionHeader}\n          onSectionChange={onSectionChange}\n          section={section}\n          sectionRefs={sectionRefs}\n          styles={styles}\n        />\n      )\n    },\n    [ styles, onSectionChange, sectionRefs.current, renderSectionHeader ]\n  )\n}\n\nconst useRenderItem = (renderItem, onSectionChange) => {\n  return useCallback(\n    ({ item }) => {\n      return checkCall(renderItem, { item, onSectionChange })\n    },\n    [ renderItem, onSectionChange ]\n  )\n}\n\n/**\n * SectionList\n * @summary Default view component that wraps the React Native View component. All props are optional\n *\n * @param {Object} props - see SectionList PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {String} props.innerClassName - Value to set the innerClassName to (web platform only)\n *\n */\nexport const SectionList = React.forwardRef((props, ref) => {\n  const {\n    activeSection: initialSection,\n    className,\n    innerClassName,\n    indexSectionHeaderBy,\n    noSectionHeaderScroll,\n    scrollCooldown = 2000,\n    onScrollSectionChange,\n    onSectionChange,\n    renderListHeader,\n    renderSectionHeader,\n    renderItem,\n    sectionChangeOffset = 10,\n    sections = noPropArr,\n    styles = noPropObj,\n    themePath,\n    type = 'default',\n    ...args\n  } = props\n\n  const sectionRefs = useRef({})\n  const isScrollingRef = useRef(false)\n  const listRef = ref || createRef()\n  const safeClassRef = useClassName('keg-safearea-list', className)\n  const classRef = useScrollClassName(\n    `keg-sectionlist`,\n    className,\n    innerClassName,\n    listRef\n  )\n\n  const listStyles = useThemePath(themePath || `list.section.${type}`, styles)\n  const indexedSections = useIndexedSections(sections, indexSectionHeaderBy)\n  const [ activeSection, setActiveSection ] = useState(\n    initialSection || get(indexedSections, '0.__kegIndex')\n  )\n\n  const [ sectionsContent, setSectionsContent ] = useState(sections)\n\n  useEffect(() => {\n    if (sections === sectionsContent) return\n    // if the section contents changes without scrolling,\n    // we want to make sure we update the activeSection accordingly\n    const scrollUpdate = {\n      scrollY: window.pageYOffset,\n    }\n    calculateActiveSection({\n      onScrollSectionChange,\n      sectionChangeOffset,\n      activeSection,\n      setActiveSection,\n      sectionRefs,\n      isScrollingRef,\n      scrollUpdate,\n    })\n\n    setSectionsContent(sections)\n  }, [\n    sections,\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef,\n  ])\n\n  const onSectionChangeAction = useSectionChange(\n    noSectionHeaderScroll !== true,\n    onSectionChange,\n    sectionChangeOffset,\n    setActiveSection,\n    sectionRefs,\n    listRef,\n    isScrollingRef,\n    scrollCooldown\n  )\n  const onRenderItem = useRenderItem(renderItem, onSectionChangeAction)\n  const onSectionHeaderRender = useRenderSectionHeader(\n    renderSectionHeader,\n    onSectionChangeAction,\n    sectionRefs,\n    listStyles\n  )\n\n  useSectionChangeOnScroll(\n    onScrollSectionChange,\n    sectionChangeOffset,\n    activeSection,\n    setActiveSection,\n    sectionRefs,\n    isScrollingRef\n  )\n\n  return (\n    <View\n      className='keg-sectionlist-container'\n      style={listStyles?.main}\n    >\n      { renderListHeader &&\n        renderFromType(\n          renderListHeader,\n          {\n            ...props,\n            styles: listStyles,\n            onSectionChange: onSectionChangeAction,\n          },\n          Text\n        ) }\n      <SafeAreaView\n        ref={safeClassRef}\n        style={listStyles?.content.list}\n      >\n        <RNSectionList\n          {...args}\n          ref={classRef}\n          renderItem={onRenderItem}\n          sections={indexedSections}\n          renderSectionHeader={onSectionHeaderRender}\n        />\n      </SafeAreaView>\n    </View>\n  )\n})\n\nSectionList.propTypes = {\n  ...RNSectionList.propTypes,\n  activeSection: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  /**\n   * Property on each section used to index each section header\n   */\n  indexSectionHeaderBy: PropTypes.string,\n  innerClassName: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  noSectionHeaderScroll: PropTypes.bool,\n  /**\n   * Called when a section becomes active ( visible ) from scrolling\n   */\n  onScrollSectionChange: PropTypes.func,\n  /**\n   * Called when a section changes either through scrolling or programmatically\n   * Is NOT called when onScrollSectionChange prop exists, and section is changed from scrolling\n   */\n  onSectionChange: PropTypes.func,\n  scrollCooldown: PropTypes.number,\n  /**\n   * Render prop to render the list header\n   */\n  renderListHeader: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Render prop to render the header of each section\n   */\n  renderSectionHeader: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Render prop to render each item in each section\n   */\n  renderItem: PropTypes.oneOfType([ PropTypes.node, PropTypes.func ]),\n  /**\n   * Offset the scroll position by some amount (px) when section header scrolling is enabled\n   */\n  sectionChangeOffset: PropTypes.number,\n  sections: PropTypes.array,\n  styles: PropTypes.object,\n  themePath: PropTypes.string,\n  type: PropTypes.string,\n}\n","import { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { SectionList as KegSectionList } from './sectionList.native'\n\n/**\n * SectionList\n * @summary Default SectionList component that wraps the React Native SectionList. All props are optional\n *\n * @param {Object} props - see SectionList PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {String} props.innerClassName - Value to set the innerClassName to (web platform only)\n *\n */\nexport const SectionList = StyleInjector(KegSectionList, {\n  displayName: 'SectionList',\n  className: `keg-sectionlist`,\n})\n\nSectionList.propTypes = KegSectionList.propTypes\n"],"names":["getElementLayout","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","top","left","scrollList","behavior","scroll","exists","useScroll","onScroll","noOp","onScrollEnd","amount","useState","scrollX","scrollY","setScroll","timeoutRef","useRef","eventHandler","useCallback","throttle","event","isEnd","scrollUpdate","getScrollValues","handlerTimeout","current","clearTimeout","setTimeout","useLayoutEffect","addEventListener","removeEventListener","useIndexedSections","sections","indexBy","useMemo","map","section","index","__kegIndex","get","useSectionChangeOnScroll","onScrollSectionChange","sectionChangeOffset","activeSection","setActiveSection","sectionRefs","isScrollingRef","__","calculateActiveSection","props","scrollLoc","currentSection","Object","entries","reduce","foundSection","sectionData","checkTop","layout","foundTop","checkCall","useSectionChange","doScrolling","onSectionChange","scrollOffset","listRef","scrollCooldown","console","warn","animated","SectionHeader","renderSectionHeader","styles","sectionRef","useEffect","isFunc","element","React","View","useRenderSectionHeader","useRenderItem","renderItem","item","SectionList","forwardRef","ref","initialSection","className","innerClassName","indexSectionHeaderBy","noSectionHeaderScroll","renderListHeader","noPropArr","noPropObj","themePath","type","args","createRef","safeClassRef","useClassName","classRef","useScrollClassName","listStyles","useThemePath","indexedSections","sectionsContent","setSectionsContent","onSectionChangeAction","onRenderItem","onSectionHeaderRender","main","renderFromType","Text","SafeAreaView","content","list","RNSectionList","StyleInjector","KegSectionList","displayName","propTypes"],"mappings":"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"}