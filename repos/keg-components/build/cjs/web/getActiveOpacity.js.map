{"version":3,"file":"getActiveOpacity.js","sources":["../../../src/utils/helpers/getActiveOpacity.js"],"sourcesContent":["import {isNonNegative, noOpObj} from '@keg-hub/jsutils'\n\n/**\n * Helper that returns style definition for accessibilityRole and activeOpacity\n * @param {boolean=} isWeb\n * @param {object=} props \n * @param {object=} style \n */\nexport const getActiveOpacity = (isWeb, props=noOpObj, style=noOpObj) => {\n  const {\n    activeOpacity,\n    opacity,\n    showFeedback\n  } = props\n\n  // Check if opacity is passed from the props, or use the opacity from disabled styles\n  const list = [\n    activeOpacity, \n    opacity, \n    style?.opacity, \n    0.3\n  ]\n  return !isWeb && showFeedback !== false\n    ? {\n        accessibilityRole: 'button',\n        activeOpacity: list.find(isNonNegative)\n      }\n    : {}\n}\n"],"names":["getActiveOpacity","isWeb","props","noOpObj","style","activeOpacity","opacity","showFeedback","list","accessibilityRole","find","isNonNegative"],"mappings":";;;;;;IAQaA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAyC;AAAA,MAAjCC,KAAiC,uEAA3BC,eAA2B;AAAA,MAAlBC,KAAkB,uEAAZD,eAAY;AAAA,MAErEE,aAFqE,GAKnEH,KALmE,CAErEG,aAFqE;AAAA,MAGrEC,OAHqE,GAKnEJ,KALmE,CAGrEI,OAHqE;AAAA,MAIrEC,YAJqE,GAKnEL,KALmE,CAIrEK,YAJqE;AAQvE,MAAMC,IAAI,GAAG,CACXH,aADW,EAEXC,OAFW,EAGXF,KAHW,aAGXA,KAHW,uBAGXA,KAAK,CAAEE,OAHI,EAIX,GAJW,CAAb;AAMA,SAAO,CAACL,KAAD,IAAUM,YAAY,KAAK,KAA3B,GACH;AACEE,IAAAA,iBAAiB,EAAE,QADrB;AAEEJ,IAAAA,aAAa,EAAEG,IAAI,CAACE,IAAL,CAAUC,qBAAV;AAFjB,GADG,GAKH,EALJ;AAMD;;;;"}