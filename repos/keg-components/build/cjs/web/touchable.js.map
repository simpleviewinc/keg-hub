{"version":3,"file":"touchable.js","sources":["../../../src/components/touchable/touchable.native.js","../../../src/components/touchable/touchable.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pressable } from 'react-native'\nimport { useClassName } from 'KegClassName'\nimport { checkCall, noOpObj } from '@keg-hub/jsutils'\n/**\n * Touchable\n * @summary Custom Touch component. All props are optional\n *\n * @param {Object} props - see touchablePropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n * @property {Object} props.style - custom style - Set inline with the style prop\n * @property {Function} props.onPress - function to do when button is pressed\n * @property {Object} props.children - Child components of the component\n * @property {Object} props.ref - reference to native element\n * @property {Number=} props.activeOpacity - active opacity value. default 0.4\n * @property {Function=} props.onPress - called after onPressOut\n * @property {Function=} props.onPressIn - called on touch. before OnPress\n * @property {Function=} props.onPressOut - called when touch is released\n * @property {Boolean=} props.showFeedback - enable/disable active style opacity. default true\n */\nexport const Touchable = React.forwardRef((props, ref) => {\n  const { \n    className, \n    showFeedback = true, \n    touchRef, \n    onPress, \n    onPressIn, \n    onPressOut, \n    activeOpacity=0.4, \n    style=noOpObj, \n    ...attrs \n  } = props\n  const classRef = useClassName('keg-touchable', className, touchRef || ref)\n\n  const [ touchStyles, setTouchStyles ] = useState(style)\n\n  // update the opacity value on a touch in\n  const onTouchIn = useCallback((event) => {\n    checkCall(onPressIn, event)\n    showFeedback && setTouchStyles({ ...touchStyles, opacity: activeOpacity })\n  }, [ onPressIn, activeOpacity, showFeedback, touchStyles, setTouchStyles ])\n\n  // reset the styles back to default on touch out\n  const onTouchOut = useCallback((event) => {\n    checkCall(onPressOut, event)\n    setTouchStyles(style)\n  }, [ onPressOut, style, setTouchStyles ])\n\n  return <Pressable\n    accessible={true}\n    {...attrs}\n    style={touchStyles}\n    onPress={onPress}\n    onPressIn={onTouchIn}\n    onPressOut={onTouchOut}\n    ref={classRef}\n  />\n})\n\nTouchable.propTypes = {\n  ...Pressable.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  onClick: PropTypes.func,\n  onPress: PropTypes.func,\n  ref: PropTypes.object,\n  styles: PropTypes.object,\n  showFeedback: PropTypes.bool,\n  activeOpacity: PropTypes.number,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func\n\n}\n","import React from 'react'\nimport { Touchable as KegTouchable } from './touchable.native'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Touchable\n * @summary Touchable component that allows interactions based on touch. All props are optional\n *\n * @param {Object} props - see View PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Touchable = StyleInjector(KegTouchable, {\n  displayName: 'Touchable',\n  className: 'keg-touchable',\n  // Important rules should include the prefixed version\n  // Because important rules are checked after going through the prefixer\n  // Important rules have `!important` added to them to allow overwriting the style attribute\n  important: [\n    'transitionDuration',\n    'WebkitTransitionDuration',\n  ],\n})\n\nTouchable.propTypes = KegTouchable.propTypes\n"],"names":["Touchable","React","forwardRef","props","ref","className","showFeedback","touchRef","onPress","onPressIn","onPressOut","activeOpacity","style","noOpObj","attrs","classRef","useClassName","useState","touchStyles","setTouchStyles","onTouchIn","useCallback","event","checkCall","opacity","onTouchOut","Pressable","StyleInjector","KegTouchable","displayName","important","propTypes"],"mappings":";;;;;;;;;;;;;;;;;AAqBO,IAAMA,SAAS,GAAGC,cAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAEtDC,SAFsD,GAWpDF,KAXoD,CAEtDE,SAFsD;AAAA,4BAWpDF,KAXoD,CAGtDG,YAHsD;AAAA,MAGtDA,YAHsD,oCAGvC,IAHuC;AAAA,MAItDC,QAJsD,GAWpDJ,KAXoD,CAItDI,QAJsD;AAAA,MAKtDC,OALsD,GAWpDL,KAXoD,CAKtDK,OALsD;AAAA,MAMtDC,SANsD,GAWpDN,KAXoD,CAMtDM,SANsD;AAAA,MAOtDC,UAPsD,GAWpDP,KAXoD,CAOtDO,UAPsD;AAAA,6BAWpDP,KAXoD,CAQtDQ,aARsD;AAAA,MAQtDA,aARsD,qCAQxC,GARwC;AAAA,qBAWpDR,KAXoD,CAStDS,KATsD;AAAA,MAStDA,KATsD,6BAShDC,eATgD;AAAA,MAUnDC,KAVmD,sDAWpDX,KAXoD;AAYxD,MAAMY,QAAQ,GAAGC,yBAAY,CAAC,eAAD,EAAkBX,SAAlB,EAA6BE,QAAQ,IAAIH,GAAzC,CAA7B;AAZwD,kBAchBa,cAAQ,CAACL,KAAD,CAdQ;AAAA;AAAA,MAchDM,WAdgD;AAAA,MAcnCC,cAdmC;AAiBxD,MAAMC,SAAS,GAAGC,iBAAW,CAAC,UAACC,KAAD,EAAW;AACvCC,IAAAA,iBAAS,CAACd,SAAD,EAAYa,KAAZ,CAAT;AACAhB,IAAAA,YAAY,IAAIa,cAAc,uFAAMD,WAAN;AAAmBM,MAAAA,OAAO,EAAEb;AAA5B,OAA9B;AACD,GAH4B,EAG1B,CAAEF,SAAF,EAAaE,aAAb,EAA4BL,YAA5B,EAA0CY,WAA1C,EAAuDC,cAAvD,CAH0B,CAA7B,CAjBwD;AAuBxD,MAAMM,UAAU,GAAGJ,iBAAW,CAAC,UAACC,KAAD,EAAW;AACxCC,IAAAA,iBAAS,CAACb,UAAD,EAAaY,KAAb,CAAT;AACAH,IAAAA,cAAc,CAACP,KAAD,CAAd;AACD,GAH6B,EAG3B,CAAEF,UAAF,EAAcE,KAAd,EAAqBO,cAArB,CAH2B,CAA9B;AAKA,SAAOlB,6BAACyB,qBAAD;AACL,IAAA,UAAU,EAAE;AADP,KAEDZ,KAFC;AAGL,IAAA,KAAK,EAAEI,WAHF;AAIL,IAAA,OAAO,EAAEV,OAJJ;AAKL,IAAA,SAAS,EAAEY,SALN;AAML,IAAA,UAAU,EAAEK,UANP;AAOL,IAAA,GAAG,EAAEV;AAPA,KAAP;AASD,CArCwB,CAAlB;;ICTMf,WAAS,GAAG2B,2BAAa,CAACC,SAAD,EAAe;AACnDC,EAAAA,WAAW,EAAE,WADsC;AAEnDxB,EAAAA,SAAS,EAAE,eAFwC;AAMnDyB,EAAAA,SAAS,EAAE,CACT,oBADS,EAET,0BAFS;AANwC,CAAf;AAYtC9B,WAAS,CAAC+B,SAAV,GAAsBH,SAAY,CAACG,SAAnC;;;;"}