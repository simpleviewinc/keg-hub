{"version":3,"file":"index.js","sources":["../../../src/components/filePicker/filePicker.js","../../../src/components/form/checkGroup/checkGroup.js","../../../src/components/form/form/form.js","../../../src/components/form/option/option.js","../../../src/components/form/radio/radio.js","../../../src/components/form/select/select.js","../../../src/components/form/slider/slider.js","../../../src/components/form/switch/switch.js","../../../src/components/link/link.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useThemePath } from '../../hooks'\nimport PropTypes from 'prop-types'\nimport { P } from '../typography'\nimport { Button } from '../button'\nimport { View } from 'KegView'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { Input as KegInput } from '../internal/input.web'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst Input = StyleInjector(KegInput, {\n  displayName: 'FilePickerInput',\n  className: 'keg-file-picker-input'\n})\n\n/**\n * A component for selecting files from the user's system. Looks better than a basic input element,\n * and accepts style objects for styling further\n * @param {Object} props - props object. Accepts all standard <input /> props which will be passed to the input element. Additional props:\n * @param {String} props.title - the text inside the button\n * @param {Object} props.style - style for the wrapping View\n * @param {Object} props.buttonStyle - style for the button\n * @param {Object} props.fileStyle - style for the file name text\n * @param {Object} props.themePath - theme type path for everything except the button\n * @param {Object} props.buttonThemePath - theme type path for the button itself (@see Button)\n * @param {Boolean} props.showFile - if true, it will show the file name next to the input\n * @param {Function} props.onFilePicked - function called when a file was selected and handles extracting the file for you: file => { ... }\n * @param {Boolean} props.openOnMount - opens filepicker on component mount\n * @param {Object} ref - an optional ref to the underlying input element\n */\nexport const FilePicker = React.forwardRef((props, ref) => {\n  const {\n    className,\n    onChange,\n    title,\n    children,\n    style = {},\n    showFile = true,\n    onFilePicked,\n    themePath = 'filePicker.default',\n    buttonThemePath = 'button.contained.default',\n    capture,\n    openOnMount = false,\n    ...args\n  } = props\n\n  const componentTheme = useThemePath(themePath)\n\n  // store the file selected by the user\n  const [ file, setFile ] = useState({})\n\n  // handle user selecting a file\n  const handleInputChange = useCallback(\n    event => {\n      onChange && onChange(event)\n\n      const file = event.target.files[0]\n      file && onFilePicked && onFilePicked(file)\n      file && setFile(file)\n    },\n    [ onChange, onFilePicked, setFile ]\n  )\n\n  // make an input ref so that we can call the input's click() handler to start picking files\n  // when the user clicks the button\n  const refToInput = useRef()\n\n  const clickInput = useCallback(\n    () => refToInput.current && refToInput.current.click(),\n    [refToInput]\n  )\n\n  // if openOnMount is set to true, then immediately open the file picker\n  useEffect(() => {\n    openOnMount && clickInput()\n  }, [])\n\n  return (\n    <View\n      className={useThemeTypeAsClass(\n        themePath || type,\n        'keg-filepicker',\n        className\n      )}\n      style={[ get(componentTheme, 'main'), style ]}\n    >\n      <Button\n        content={title}\n        onClick={clickInput}\n        style={get(componentTheme, 'content.button')}\n        themePath={buttonThemePath}\n      >\n        { children }\n      </Button>\n\n      {\n        // show the file name if the flag is set for it\n        showFile && (\n          <P style={get(componentTheme, 'content.file')}>{ file.name }</P>\n        )\n      }\n\n      { /* this input is hidden from the user, but is still used for selecting a file */ }\n      <Input\n        {...args}\n        ref={input => {\n          ref && (ref.current = input)\n          refToInput.current = input\n        }}\n        onChange={handleInputChange}\n        style={get(componentTheme, 'content.input')}\n        type='file'\n        capture={capture}\n      />\n    </View>\n  )\n})\n\nFilePicker.propTypes = {\n  title: PropTypes.string,\n  style: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  fileStyle: PropTypes.object,\n  themePath: PropTypes.string,\n  buttonThemePath: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilePicked: PropTypes.func,\n  showFile: PropTypes.bool,\n}\n","import React, { useCallback, useImperativeHandle, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Text } from '../../typography/text'\nimport { Checkbox } from 'KegCheckbox'\nimport { useStyle } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\nimport { useChildrenWithRefs } from '../../../hooks/useChildrenWithRefs'\nimport { mapObj, noOp } from '@keg-hub/jsutils'\n\n/**\n * Simple header for CheckGroup, without a checkbox\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the Text element\n * @param {*} props.* - remaining props are passed to the Text element\n */\nconst SimpleHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, ...rest } = props\n\n  // add no-op handle here just for consistency with other header\n  useImperativeHandle(ref, () => ({ isChecked: undefined, setChecked: noOp }))\n\n  const textStyle = useStyle('form.checkGroup.simpleHeader.main', style)\n  return (\n    <Text\n      className={className}\n      style={textStyle}\n      {...rest}\n    >\n      { title }\n    </Text>\n  )\n})\n\n/**\n * Header for CheckGroup, with a checkbox for select-all functionality\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the header\n * @param {Function?} props.onPress - handler for checkbox press\n * @param {boolean} props.checked - initial value of header checkbox\n */\nconst CheckboxHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, onPress, checked } = props\n  const headerStyles = useMemo(\n    () => ({\n      main: style,\n      content: {\n        right: {},\n      },\n    }),\n    [style]\n  )\n\n  const onChangeHandler = useCallback((_, val) => onPress?.(val), [onPress])\n\n  return (\n    <Checkbox\n      RightComponent={title}\n      rightClassName={className}\n      styles={headerStyles}\n      checked={checked}\n      onChange={onChangeHandler}\n      ref={ref}\n      close\n    />\n  )\n})\n\n/**\n * A group of checkbox items with a header.\n * Will include a select-all checkbox in the header IF you define the children as a function (@see story examples)\n * @param {Object} props\n * @param {string} props.className - css class name\n * @param {string} props.headerClassName - css class name for header text\n * @param {string} props.title - title of the group\n * @param {boolean?} props.initChecked - initial checked value of the group header box, if you are using it\n * @param {boolean?} props.showHeaderCheckbox - true if you want a group header check box, with select-all functionality\n * @param {boolean?} props.showHeader - true by default. If false, hides the header entirely, only showing children\n * @param {Function?} props.onGroupPress - handler of header checkbox\n * @param {*} props.children - components in the group (@see CheckboxGroup.Item)\n * @param {Object?} props.styles\n * @param {Object?} props.styles.main\n * @param {Object?} props.styles.header\n */\nexport const CheckGroup = React.forwardRef((props, ref) => {\n  const {\n    className,\n    headerClassName,\n    title,\n    children,\n    styles,\n    initChecked = false,\n    onGroupPress,\n    showHeaderCheckbox = false,\n    showHeader = true,\n  } = props\n\n  const groupStyles = useStyle('form.checkGroup', styles)\n\n  // get children updated with ref props, and the refs themselves\n  const [ childrenWithProps, childRefs ] = useChildrenWithRefs(\n    children,\n    showHeaderCheckbox\n  )\n\n  // callback that manages select-all behavior on click of the header checkbox\n  const headerCheckHandler = useCallback(\n    checked => {\n      onGroupPress?.(checked)\n      mapObj(childRefs.current, (_, child) => child?.setChecked?.(checked))\n    },\n    [childRefs]\n  )\n\n  const Header = () =>\n    showHeaderCheckbox ? (\n      <CheckboxHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        onPress={showHeaderCheckbox && headerCheckHandler}\n        checked={showHeaderCheckbox ? initChecked : undefined}\n        ref={ref}\n      />\n    ) : (\n      <SimpleHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        ref={ref}\n      />\n    )\n\n  return (\n    <View\n      className={useClassList('keg-check-group', className)}\n      style={groupStyles?.main}\n    >\n      { showHeader && <Header /> }\n      { childrenWithProps }\n    </View>\n  )\n})\n\nCheckGroup.Item = Checkbox\n\nCheckGroup.propTypes = {\n  className: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  headerClassName: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  title: PropTypes.string,\n  initChecked: PropTypes.bool,\n  showHeaderCheckbox: PropTypes.bool,\n  showHeader: PropTypes.bool,\n  onGroupPress: PropTypes.func,\n  styles: PropTypes.oneOfType([ PropTypes.object, PropTypes.array ]),\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemePath } from '../../../hooks'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\n/**\n * Form\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see formPropTypes\n * @property {String} props.type - default ''\n * @property {Object} props.style - custom style\n * @property {Function} props.onSubmit - function when form is submitted\n * @property {Object} props.children\n * @property {Object} ref - reference to native element\n *\n */\nexport const Form = React.forwardRef((props, ref) => {\n  const theme = useTheme()\n\n  const {\n    children,\n    className,\n    elType,\n    style,\n    type,\n    themePath = `form.form.${type || 'default'}`,\n    ...elProps\n  } = props\n\n  const formTheme = useThemePath(themePath)\n\n  return (\n    <View\n      accessibilityRole='form'\n      className={useClassList('keg-form', className)}\n      {...elProps}\n      style={[ get(theme, 'form.form.default'), formTheme, style ]}\n      ref={ref}\n    >\n      { children }\n    </View>\n  )\n})\n\nForm.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onSubmit: PropTypes.func,\n  ref: PropTypes.object,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Option = props => {\n  const { children, label, style, text, value, ...args } = props\n\n  return (\n    <option\n      {...args}\n      value={value || label || text}\n    >\n      { label || value || text || children }\n    </option>\n  )\n}\n\nOption.propTypes = {\n  style: PropTypes.object,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n}\n","import React from 'react'\nimport { Input } from 'KegInput'\n\nexport const Radio = props => <Input\n  {...props}\n  type='radio'\n/>\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Select as InternalSelect } from '../../internal/select'\nimport { useThemePath } from '../../../hooks'\nimport { useSelectHandlers } from '../../../hooks/useSelectHandlers'\nimport { getValueFromChildren, getInputValueKey } from '../../../utils'\nimport { useClassName } from 'KegClassName'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { ChevronDown } from '../../../assets/icons'\nimport { Icon } from 'KegIcon'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSelect = StyleInjector(InternalSelect, {\n  displayName: 'Select',\n  className: 'keg-select'\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = props => {\n  const { children, onChange, onValueChange, readOnly, value } = props\n\n  const setValue = getValueFromChildren(value, children)\n  const valKey = getInputValueKey(false, onChange, onValueChange, readOnly)\n\n  return { [valKey]: setValue }\n}\n\n/**\n * Select\n * @summary Default Select component that wraps the Internal Select component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegSelect PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled,\n    readOnly,\n    onChange,\n    onValueChange,\n    style,\n    styles,\n    type = 'default',\n    themePath = `form.select.${type}`,\n    value,\n    ...elProps\n  } = props\n\n  const selectStyles = useThemePath(themePath, styles)\n  const selectClasses = useThemeTypeAsClass(\n    themePath || type,\n    'keg-select',\n    className\n  )\n  const classRef = useClassName('keg-select', selectClasses, ref)\n\n  return (\n    <View style={[ selectStyles.main, style ]}>\n      <KegSelect\n        ref={classRef}\n        {...elProps}\n        enabled={!disabled}\n        style={[selectStyles.select]}\n        {...getValue(props)}\n        {...useSelectHandlers({ onChange, onValueChange })}\n      >\n        { children }\n      </KegSelect>\n      <Icon\n        styles={selectStyles.icon}\n        Component={ChevronDown}\n        color={disabled && selectStyles.icon?.disabled?.color}\n      />\n    </View>\n  )\n})\n\n\nSelect.propTypes = {\n  ...InternalSelect.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  ref: PropTypes.object,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n","export const Slider = () => {\n  return null\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.join(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n","import React from 'react'\nimport { LinkWrapper } from './link.wrapper'\nimport { KegText } from 'KegText'\nimport { Touchable } from '../touchable'\nimport PropTypes from 'prop-types'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useClassList } from 'KegClassList'\n\nconst isWeb = getPlatform() === 'web'\nconst Text = KegText('link')\n\nconst Element = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    elProps,\n    href,\n    onPress,\n    style,\n    target,\n    ...attrs\n  } = props\n\n  return (\n    <Touchable\n      className={useClassList('keg-link', className)}\n      {...elProps}\n      {...attrs}\n      touchRef={ref}\n    >\n      <Text\n        accessibilityRole='link'\n        className='keg-link-text'\n        style={style}\n        href={href}\n        target={target}\n      >\n        { children }\n      </Text>\n    </Touchable>\n  )\n})\n\nconst Link = props => <LinkWrapper\n  {...props}\n  Element={Element}\n  isWeb={isWeb}\n/>\n\nLink.propTypes = {\n  href: PropTypes.string,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport { Link, Link as A }\n"],"names":["Input","StyleInjector","KegInput","displayName","className","FilePicker","React","forwardRef","props","ref","onChange","title","children","style","showFile","onFilePicked","themePath","buttonThemePath","capture","openOnMount","args","componentTheme","useThemePath","useState","file","setFile","handleInputChange","useCallback","event","target","files","refToInput","useRef","clickInput","current","click","useEffect","View","useThemeTypeAsClass","type","get","Button","P","name","input","SimpleHeader","rest","useImperativeHandle","isChecked","undefined","setChecked","noOp","textStyle","useStyle","Text","CheckboxHeader","onPress","checked","headerStyles","useMemo","main","content","right","onChangeHandler","_","val","Checkbox","CheckGroup","headerClassName","styles","initChecked","onGroupPress","showHeaderCheckbox","showHeader","groupStyles","useChildrenWithRefs","childrenWithProps","childRefs","headerCheckHandler","mapObj","child","Header","header","useClassList","Item","Form","theme","useTheme","elType","elProps","formTheme","Option","label","text","value","Radio","KegSelect","InternalSelect","getValue","onValueChange","readOnly","setValue","getValueFromChildren","valKey","getInputValueKey","Select","disabled","selectStyles","selectClasses","classRef","useClassName","select","useSelectHandlers","Icon","icon","ChevronDown","color","Slider","KegSwitch","InternalSwitch","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","areaColor","backgroundColor","colors","onTintColor","useCheckedState","themeStyles","join","setCheckedValue","checkCall","SideComponent","Component","isStr","renderFromType","ChildrenComponent","useSwitchHandle","Switch","LeftComponent","close","RightComponent","SwitchComponent","setCheckedSetter","toBool","elThemePath","activeStyles","typeClassName","left","getChecked","getOnChangeHandler","isWeb","getPlatform","KegText","Element","href","attrs","Touchable","Link","LinkWrapper"],"mappings":"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"}