{"version":3,"file":"cardMedia-b5fb5c3a.js","sources":["../../../src/components/image/image.js","../../../src/components/card/cardMedia.js"],"sourcesContent":["import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Loading } from '../loading'\nimport { checkCall, isFunc } from '@keg-hub/jsutils'\nimport { Image as InternalImage } from '../internal/image'\nimport { useThemeHover, useStyle } from '@keg-hub/re-theme'\nimport { useThemePath } from 'KegHooks'\nimport React, { useState, forwardRef, useRef, useCallback } from 'react'\nimport { useClassList } from 'KegClassList'\nimport { getImgSrc, getPressHandler } from 'KegUtils'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\nconst KegImage = StyleInjector(InternalImage, {\n  displayName: 'Image',\n  className: 'keg-image',\n})\n\n/**\n * Image\n * @summary Custom image wrapper component. All props are optional\n *\n * @param {Object} props - see buttonPropTypes\n * @property {string} props.alt - Alternate text when image fails to load\n * @property {Function} props.onPress - function to do when image is pressed\n * @property {String} props.src - Source url of the image\n * @property {Object} props.style - custom style\n * @property {string} props.type - image type\n * @property {Boolean} props.useLoading - (defaults true) if true, show a loading spinner for remote sources until they load\n *\n */\nexport const Image = forwardRef((props, ref) => {\n  const [ loading, setLoading ] = useState(true)\n  const internalRef = ref || useRef(null)\n\n  const {\n    alt,\n    className,\n    children,\n    onClick,\n    onPress,\n    src,\n    source,\n    styles,\n    type = 'default',\n    themePath = `image.${type}`,\n    useLoading = true,\n    ...attrs\n  } = props\n\n  const builtStyles = useThemePath(themePath, styles)\n  const loadingStyles = useStyle(builtStyles.loading, builtStyles.image)\n  const loadedStyles = useStyle(loadingStyles, builtStyles.loaded)\n\n  const [ imgRef, elementStyle, setStyle ] = useThemeHover(\n    loadedStyles,\n    builtStyles.hover,\n    { internalRef }\n  )\n\n  // Listen for updates to the image loading\n  const onLoad = useCallback(() => {\n    // Update state that the image is loaded\n    checkCall(setLoading, false)\n    // Update the style to use for the loaded image - So we can see it\n    checkCall(setStyle, elementStyle)\n    // Call onLoad in props if it exists\n    checkCall(props.onLoad, props)\n    // Call the imgRef function or set it if it exists\n    isFunc(imgRef)\n      ? imgRef(internalRef.current)\n      : imgRef && (imgRef.current = internalRef.current)\n  }, [ src, source, internalRef.current ])\n\n  return (\n    <View\n      className={useClassList(`keg-image-container`, className)}\n      style={builtStyles.container}\n    >\n      { loading && useLoading && (\n        <Loading\n          className='keg-image-loading'\n          styles={builtStyles.loadingComp}\n        />\n      ) }\n      <KegImage\n        {...attrs}\n        style={loading ? loadingStyles : builtStyles.image}\n        {...getPressHandler(false, onClick, onPress)}\n        {...getImgSrc(false, src, source)}\n        onLoadEnd={onLoad}\n        alt={alt}\n        ref={internalRef}\n      />\n    </View>\n  )\n})\n\nImage.propTypes = {\n  ...InternalImage.propTypes,\n  onPress: PropTypes.func,\n  type: PropTypes.string,\n  alt: PropTypes.string,\n  src: PropTypes.oneOfType([ PropTypes.string, PropTypes.object ]),\n  styles: PropTypes.object,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Image } from 'KegImg'\nimport { get } from '@keg-hub/jsutils'\nimport { useStyle } from '@keg-hub/re-theme'\n\nconst noHeader = { marginTop: 0 }\n\nconst MediaFromType = ({ mediaProps, styles }) => {\n  const {\n    className,\n    type,\n    resizeMode = 'cover',\n    resizeMethod = 'scale',\n    ...props\n  } = mediaProps\n  const { image, video, container, loading, loadingComp } = styles\n\n  const mediaStyles = useStyle(\n    type === 'image' && image && { image },\n    type === 'video' && video && { video },\n    container && { container },\n    loading && { loading },\n    loadingComp && { loadingComp }\n  )\n\n  switch (type) {\n  case 'image': {\n    return (\n      <Image\n        resizeMode={resizeMode}\n        resizeMethod={resizeMethod}\n        {...props}\n        className='keg-card-media'\n        styles={mediaStyles}\n      />\n    )\n  }\n  default: {\n    return null\n  }\n  }\n}\n\nexport const CardMedia = ({\n  hasHeader,\n  mediaProps,\n  Media,\n  subtitle,\n  styles,\n  title,\n}) => {\n  // If no mediaProps, just return Media\n  // It's either a custom component || does not exist\n  // Otherwise render with the mediaProps\n  return Media || !mediaProps ? (\n    Media || null\n  ) : (\n    <View\n      className='keg-card-media'\n      style={[ get(styles, 'main'), hasHeader === false && noHeader ]}\n    >\n      <MediaFromType\n        mediaProps={mediaProps}\n        styles={styles}\n      />\n    </View>\n  )\n}\n\nCardMedia.propTypes = {\n  image: PropTypes.object,\n  styles: PropTypes.object,\n  subtitle: PropTypes.string,\n  title: PropTypes.string,\n}\n"],"names":["KegImage","StyleInjector","InternalImage","displayName","className","Image","forwardRef","props","ref","useState","loading","setLoading","internalRef","useRef","alt","children","onClick","onPress","src","source","styles","type","themePath","useLoading","attrs","builtStyles","useThemePath","loadingStyles","useStyle","image","loadedStyles","loaded","useThemeHover","hover","imgRef","elementStyle","setStyle","onLoad","useCallback","checkCall","isFunc","current","useClassList","container","loadingComp","getPressHandler","getImgSrc","noHeader","marginTop","MediaFromType","mediaProps","resizeMode","resizeMethod","video","mediaStyles","CardMedia","hasHeader","Media","subtitle","title","get"],"mappings":"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"}