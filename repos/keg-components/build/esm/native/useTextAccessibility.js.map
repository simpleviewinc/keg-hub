{"version":3,"file":"useTextAccessibility.js","sources":["../../../src/hooks/useTextAccessibility.js"],"sourcesContent":["import { useMemo } from 'react'\n\n/**\n * All possible heading size options\n * @array\n */\nconst headings = [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\n\n/**\n * Custom hook to memoize the accessibilityRole of a text component\n * @function\n * @param {string} element - Name of the text element to build the accessibilityRole props for\n * @param {string} accessibilityRole - Accessibility Role for the element\n *\n * @returns {Object} - Built accessibilityRole props for the text component\n */\nexport const useTextAccessibility = (element, accessibilityRole) => {\n  return useMemo(() => {\n    const type = accessibilityRole\n      ? accessibilityRole\n      : headings.includes(element)\n        ? 'header'\n        : element\n\n    return {\n      accessibilityRole: type,\n      ...(type === 'header' && { ['aria-level']: element[1] }),\n    }\n  }, [ element, accessibilityRole ])\n}\n"],"names":["headings","useTextAccessibility","element","accessibilityRole","useMemo","type","includes"],"mappings":";;;AAMA,IAAMA,QAAQ,GAAG,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAjB;IAUaC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,iBAAV,EAAgC;AAClE,SAAOC,OAAO,CAAC,YAAM;AACnB,QAAMC,IAAI,GAAGF,iBAAiB,GAC1BA,iBAD0B,GAE1BH,QAAQ,CAACM,QAAT,CAAkBJ,OAAlB,IACE,QADF,GAEEA,OAJN;AAMA;AACEC,MAAAA,iBAAiB,EAAEE;AADrB,OAEMA,IAAI,KAAK,QAAT,wBAAwB,YAAxB,EAAuCH,OAAO,CAAC,CAAD,CAA9C,CAFN;AAID,GAXa,EAWX,CAAEA,OAAF,EAAWC,iBAAX,CAXW,CAAd;AAYD;;;;"}