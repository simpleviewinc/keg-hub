{"version":3,"file":"itemHeader.js","sources":["../../../src/components/header/itemHeader/itemHeader.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { get } from '@keg-hub/jsutils'\nimport { View } from 'KegView'\nimport { Button } from '../../button'\nimport { Icon } from 'KegIcon'\nimport { H5 } from '../../typography'\nimport { renderFromType } from '../../../utils'\nimport { useThemePath } from '../../../hooks'\nimport { useClassList } from 'KegClassList'\nimport { noPropObj } from '@keg-hub/jsutils'\nimport { isValidComponent } from '../../../utils/validate/isValidComponent'\nimport { getPlatform } from 'KegGetPlatform'\n\nconst isWeb = getPlatform() === 'web'\n\n/**\n * ItemHeader\n * @summary used to make other types of headers\n * @param {Object} props - see PropTypes below\n *\n * @returns {Component} - header component\n */\nexport const ItemHeader = props => {\n  const theme = useTheme()\n\n  const {\n    appHeader,\n    className,\n    title,\n    styles,\n    RightComponent,\n    CenterComponent,\n    LeftComponent,\n    onLeftClick,\n    leftIcon,\n    LeftIconComponent,\n    rightIcon,\n    RightIconComponent,\n    IconComponent,\n    onRightClick,\n    shadow,\n    ellipsis,\n    themePath,\n    children,\n    ...elProps\n  } = props\n\n  const headerStyles = useThemePath(themePath || `header.itemHeader`, styles)\n\n  // builds the left, center, and right section based on props\n  return (\n    <View\n      className={useClassList('keg-header', className)}\n      {...elProps}\n      style={[\n        headerStyles.main,\n        appHeader && get(headerStyles, [ 'appHeader', 'main' ]),\n        shadow && get(headerStyles, [ 'shadow', 'main' ]),\n      ]}\n    >\n      { !isWeb && shadow && <View style={headerStyles?.shadow?.cover} /> }\n      { children || (\n        <>\n          <Side\n            styles={headerStyles.content}\n            iconName={leftIcon}\n            IconElement={LeftIconComponent || IconComponent}\n            action={onLeftClick}\n          >\n            { LeftComponent }\n          </Side>\n\n          <Center\n            ellipsis={ellipsis}\n            theme={theme}\n            styles={headerStyles.content?.center}\n            title={title}\n          >\n            { CenterComponent }\n          </Center>\n\n          <Side\n            right\n            styles={headerStyles.content}\n            iconName={rightIcon}\n            IconElement={RightIconComponent || IconComponent}\n            action={onRightClick}\n          >\n            { RightComponent }\n          </Side>\n        </>\n      ) }\n    </View>\n  )\n}\n\nItemHeader.propTypes = {\n  title: PropTypes.string,\n  styles: PropTypes.object,\n  RightComponent: PropTypes.element,\n  LeftComponent: PropTypes.element,\n  CenterComponent: PropTypes.element,\n  onLeftClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  leftIcon: PropTypes.string,\n  LeftIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  onRightClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  rightIcon: PropTypes.string,\n  RightIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  IconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  shadow: PropTypes.bool,\n  ellipsis: PropTypes.bool,\n  themePath: PropTypes.string,\n}\n\n/**\n * Center\n * @summary gets the center section for the header component\n * @param {Object} props\n * @property {Object} props.theme - re-theme object used for styling\n * @property {Boolean=} props.ellipsis - applies ellipsis on text. default true\n * @property {Object} props.styles\n * @property {String=} props.title - title displayed in the center \n * @property {Component} props.children  - custom component to display on the center section. overrides the other props\n\n * @returns {Component} - center component\n */\nconst Center = props => {\n  const { styles, title, ellipsis = true, children } = props\n\n  return (\n    <View\n      className='keg-header-center'\n      style={styles.main}\n    >\n      { (children && renderFromType(children, {}, null)) || (\n        <H5\n          className='keg-header-center-title'\n          ellipsis={ellipsis}\n          style={styles.content.title}\n        >\n          { title }\n        </H5>\n      ) }\n    </View>\n  )\n}\n\n/**\n * Side\n * @summary builds the side sections of the appheader\n * @param {Object} props\n * @property {Object} props.styles\n * @property {String=} props.iconName - name of icon to use (FontAwesome icons). uses the Icon component\n * @property {Component} props.IconElement - icon component for the icon set (e.g. FontAwesome)\n * @property {Function} props.action - function to perform on section click\n * @property {Component} props.children  - custom component to display on the section. overrides the other props\n * @property {Boolean} props.right - to decide which side theme to use\n *\n * @returns {Component} - section component\n */\nconst Side = props => {\n  const { styles, iconName, IconElement, action, children, right } = props\n\n  const position = right ? 'right' : 'left'\n  // get the styles for the specified position\n  const contentStyles = get(styles, [ position, 'content' ], noPropObj)\n  const iconProps = {\n    styles,\n    IconElement,\n    iconName,\n    position,\n  }\n\n  const showIcon = isValidComponent(IconElement)\n\n  return (\n    <View\n      className={`keg-header-${position}`}\n      style={get(styles, [ position, 'main' ])}\n    >\n      { /* if 'action' is passed in, use a button to wrap the icon */ }\n      { (children && renderFromType(children, {}, null)) ||\n        (action ? (\n          <Button\n            className={`keg-header-${position}-button`}\n            styles={contentStyles.button}\n            onClick={action}\n          >\n            { showIcon && <CustomIcon {...iconProps} /> }\n          </Button>\n        ) : (\n          showIcon && (\n            <View\n              className={`keg-header-${position}-icon`}\n              style={contentStyles.main}\n            >\n              <CustomIcon {...iconProps} />\n            </View>\n          )\n        )) }\n    </View>\n  )\n}\n\n/**\n * CustomIcon\n * @summary Creates a customized Icon Component for the side components\n * @param {Object} props\n * @property {Object} styles - default theme style\n * @property {String} iconName - icon name\n * @property {Component} IconElement - icon component for the icon set\n * @property {String} position - side position (left/right)\n *\n * @returns {Component} - Customized Icon component\n */\nconst CustomIcon = props => {\n  const { className, iconName, IconElement, position, styles } = props\n\n  return (\n    <Icon\n      className={className}\n      name={iconName}\n      Element={IconElement}\n      styles={get(styles, [ position, 'content', 'icon' ])}\n    />\n  )\n}\n"],"names":["ItemHeader","props","theme","useTheme","appHeader","className","title","styles","RightComponent","CenterComponent","LeftComponent","onLeftClick","leftIcon","LeftIconComponent","rightIcon","RightIconComponent","IconComponent","onRightClick","shadow","ellipsis","themePath","children","elProps","headerStyles","useThemePath","React","useClassList","main","get","cover","content","center","Center","renderFromType","Side","iconName","IconElement","action","right","position","contentStyles","noPropObj","iconProps","showIcon","isValidComponent","button","CustomIcon"],"mappings":"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"}