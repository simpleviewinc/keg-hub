{"version":3,"file":"itemHeader.js","sources":["../../../src/components/header/itemHeader/itemHeader.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { get } from '@keg-hub/jsutils'\nimport { View } from 'KegView'\nimport { Button } from '../../button'\nimport { Icon } from 'KegIcon'\nimport { H5 } from '../../typography'\nimport { renderFromType } from '../../../utils'\nimport { useClassList } from 'KegClassList'\nimport { noPropObj } from '@keg-hub/jsutils'\nimport { isValidComponent } from '../../../utils/validate/isValidComponent'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useAccessibilityRole, useThemePath } from 'KegHooks'\n\nconst isWeb = getPlatform() === 'web'\n\n/**\n * ItemHeader\n * @summary used to make other types of headers\n * @param {Object} props - see PropTypes below\n *\n * @returns {Component} - header component\n */\nexport const ItemHeader = props => {\n  const theme = useTheme()\n\n  const {\n    accessibilityRole,\n    appHeader,\n    className,\n    title,\n    styles,\n    RightComponent,\n    CenterComponent,\n    LeftComponent,\n    onLeftClick,\n    leftIcon,\n    LeftIconComponent,\n    rightIcon,\n    RightIconComponent,\n    IconComponent,\n    onRightClick,\n    shadow,\n    ellipsis,\n    themePath,\n    children,\n    ...elProps\n  } = props\n\n  const headerStyles = useThemePath(themePath || `header.itemHeader`, styles)\n  const accessibilityRoleObj = useAccessibilityRole(accessibilityRole, 'header')\n\n  // builds the left, center, and right section based on props\n  return (\n    <View\n      className={useClassList('keg-header', className)}\n      {...elProps}\n      {...accessibilityRoleObj}\n      style={[\n        headerStyles.main,\n        appHeader && get(headerStyles, [ 'appHeader', 'main' ]),\n        shadow && get(headerStyles, [ 'shadow', 'main' ]),\n      ]}\n    >\n      { !isWeb && shadow && <View style={headerStyles?.shadow?.cover} /> }\n      { children || (\n        <>\n          <Side\n            styles={headerStyles.content}\n            iconName={leftIcon}\n            IconElement={LeftIconComponent || IconComponent}\n            action={onLeftClick}\n          >\n            { LeftComponent }\n          </Side>\n\n          <Center\n            ellipsis={ellipsis}\n            theme={theme}\n            styles={headerStyles.content?.center}\n            title={title}\n          >\n            { CenterComponent }\n          </Center>\n\n          <Side\n            right\n            styles={headerStyles.content}\n            iconName={rightIcon}\n            IconElement={RightIconComponent || IconComponent}\n            action={onRightClick}\n          >\n            { RightComponent }\n          </Side>\n        </>\n      ) }\n    </View>\n  )\n}\n\nItemHeader.propTypes = {\n  title: PropTypes.string,\n  styles: PropTypes.object,\n  RightComponent: PropTypes.element,\n  LeftComponent: PropTypes.element,\n  CenterComponent: PropTypes.element,\n  onLeftClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  leftIcon: PropTypes.string,\n  LeftIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  onRightClick: PropTypes.oneOfType([ PropTypes.func, PropTypes.any ]),\n  rightIcon: PropTypes.string,\n  RightIconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  IconComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n    PropTypes.elementType,\n  ]),\n  shadow: PropTypes.bool,\n  ellipsis: PropTypes.bool,\n  themePath: PropTypes.string,\n}\n\n/**\n * Center\n * @summary gets the center section for the header component\n * @param {Object} props\n * @property {Object} props.theme - re-theme object used for styling\n * @property {Boolean=} props.ellipsis - applies ellipsis on text. default true\n * @property {Object} props.styles\n * @property {String=} props.title - title displayed in the center \n * @property {Component} props.children  - custom component to display on the center section. overrides the other props\n\n * @returns {Component} - center component\n */\nconst Center = props => {\n  const { styles, title, ellipsis = true, children } = props\n\n  return (\n    <View\n      className='keg-header-center'\n      style={styles.main}\n    >\n      { (children && renderFromType(children, {}, null)) ||\n        //Don't render header element if title is empty since it causes issues with Accessibility standards\n        (title && (\n          <H5\n            className='keg-header-center-title'\n            ellipsis={ellipsis}\n            style={styles.content.title}\n          >\n            { title }\n          </H5>\n        )) }\n    </View>\n  )\n}\n\n/**\n * Side\n * @summary builds the side sections of the appheader\n * @param {Object} props\n * @property {Object} props.styles\n * @property {String=} props.iconName - name of icon to use (FontAwesome icons). uses the Icon component\n * @property {Component} props.IconElement - icon component for the icon set (e.g. FontAwesome)\n * @property {Function} props.action - function to perform on section click\n * @property {Component} props.children  - custom component to display on the section. overrides the other props\n * @property {Boolean} props.right - to decide which side theme to use\n *\n * @returns {Component} - section component\n */\nconst Side = props => {\n  const { styles, iconName, IconElement, action, children, right } = props\n\n  const position = right ? 'right' : 'left'\n  // get the styles for the specified position\n  const contentStyles = get(styles, [ position, 'content' ], noPropObj)\n  const iconProps = {\n    styles,\n    IconElement,\n    iconName,\n    position,\n  }\n\n  const showIcon = isValidComponent(IconElement)\n\n  return (\n    <View\n      className={`keg-header-${position}`}\n      style={get(styles, [ position, 'main' ])}\n    >\n      { /* if 'action' is passed in, use a button to wrap the icon */ }\n      { (children && renderFromType(children, {}, null)) ||\n        (action ? (\n          <Button\n            className={`keg-header-${position}-button`}\n            styles={contentStyles.button}\n            onClick={action}\n          >\n            { showIcon && <CustomIcon {...iconProps} /> }\n          </Button>\n        ) : (\n          showIcon && (\n            <View\n              className={`keg-header-${position}-icon`}\n              style={contentStyles.main}\n            >\n              <CustomIcon {...iconProps} />\n            </View>\n          )\n        )) }\n    </View>\n  )\n}\n\n/**\n * CustomIcon\n * @summary Creates a customized Icon Component for the side components\n * @param {Object} props\n * @property {Object} styles - default theme style\n * @property {String} iconName - icon name\n * @property {Component} IconElement - icon component for the icon set\n * @property {String} position - side position (left/right)\n *\n * @returns {Component} - Customized Icon component\n */\nconst CustomIcon = props => {\n  const { className, iconName, IconElement, position, styles } = props\n\n  return (\n    <Icon\n      className={className}\n      name={iconName}\n      Element={IconElement}\n      styles={get(styles, [ position, 'content', 'icon' ])}\n    />\n  )\n}\n"],"names":["ItemHeader","props","theme","useTheme","accessibilityRole","appHeader","className","title","styles","RightComponent","CenterComponent","LeftComponent","onLeftClick","leftIcon","LeftIconComponent","rightIcon","RightIconComponent","IconComponent","onRightClick","shadow","ellipsis","themePath","children","elProps","headerStyles","useThemePath","accessibilityRoleObj","useAccessibilityRole","React","useClassList","main","get","cover","content","center","Center","renderFromType","Side","iconName","IconElement","action","right","position","contentStyles","noPropObj","iconProps","showIcon","isValidComponent","button","CustomIcon"],"mappings":"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"}