{"version":3,"file":"scrollableSelect.js","sources":["../../../src/components/form/scrollable/select/scrollableSelect.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SelectItem } from '../item/item'\nimport { SelectView } from './selectView'\nimport { withScrollIntoView } from 'KegHocs'\n\n/**\n * Wrapper around SelectItem that ensures it stays in the view\n * of the ScrollableSelect list (by automatically scrolling it)\n */\nconst InViewSelectItem = withScrollIntoView(SelectItem, false)\n\n/**\n * A scrollable menu list of items, with prop-adjustable height and visibility\n * @param {Object} props\n * @param {Array} props.items - array of objects of the form { text, key } - key is optional if each item has unique text\n * @param {Object} props.styles - style object for the view. \".main\": styles the root SelectView. \".content\": styles each SelectItem.\n * @param {Boolean} props.visible - boolean, indicating the menu is visible or hidden. Defaults to true.\n * @param {Function} props.onSelect - the callback of form (item) => {...}. Fires when a menu item is selected\n * @param {Number} props.height - the maximum height of the menu before scrolling is required to see remaining items.\n */\nexport const ScrollableSelect = ({\n  items,\n  styles,\n  visible = true,\n  onSelect,\n  selectedItem,\n  height,\n}) => {\n  return (\n    <SelectView\n      style={styles?.main}\n      visible={visible}\n      height={height ?? 150}\n    >\n      { items.map(item => {\n        const highlighted = selectedItem && item.key === selectedItem.key\n        return (\n          <InViewSelectItem\n            key={item.key || item.text}\n            item={item}\n            onSelect={onSelect}\n            highlighted={highlighted}\n            scrollIntoView={highlighted}\n            style={styles?.content}\n          />\n        )\n      }) }\n    </SelectView>\n  )\n}\n\nScrollableSelect.propTypes = {\n  styles: PropTypes.object,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  visible: PropTypes.bool,\n  onSelect: PropTypes.func,\n  height: PropTypes.number,\n}\n"],"names":["InViewSelectItem","withScrollIntoView","SelectItem","ScrollableSelect","items","styles","visible","onSelect","selectedItem","height","React","main","map","item","highlighted","key","text","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,gBAAgB,GAAGC,kBAAkB,CAACC,UAAD,CAA3C;IAWaC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAO1B;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,0BAJJC,OAII;AAAA,MAJJA,OAII,6BAJM,IAIN;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,SACEC,6BAAC,UAAD;AACE,IAAA,KAAK,EAAEL,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEM,IADjB;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,MAAM,EAAEG,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAHpB,KAKIL,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI,EAAI;AAClB,QAAMC,WAAW,GAAGN,YAAY,IAAIK,IAAI,CAACE,GAAL,KAAaP,YAAY,CAACO,GAA9D;AACA,WACEL,6BAAC,gBAAD;AACE,MAAA,GAAG,EAAEG,IAAI,CAACE,GAAL,IAAYF,IAAI,CAACG,IADxB;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAIE,MAAA,WAAW,EAAEO,WAJf;AAKE,MAAA,cAAc,EAAEA,WALlB;AAME,MAAA,KAAK,EAAET,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEY;AANjB,MADF;AAUD,GAZC,CALJ,CADF;AAqBD;;;;"}