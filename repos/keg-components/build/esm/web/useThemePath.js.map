{"version":3,"file":"useThemePath.js","sources":["../../../src/hooks/useThemePath.js"],"sourcesContent":["import { useMemo } from 'react'\nimport { useTheme } from '@keg-hub/re-theme'\nimport {\n  deepMerge,\n  get,\n  isEmptyColl,\n  reduceObj,\n  noPropObj,\n} from '@keg-hub/jsutils'\n\n/**\n * Checks if the styles object is not a valid styles object\n * @param {Object} styles - styles object to be tested\n *\n * @returns {boolean} - false if the styles object is not valid\n */\nconst validateStyles = styles =>\n  !Boolean(!styles || styles === noPropObj || isEmptyColl(styles))\n\n/**\n * Gets the styles from the theme object based on passed in path\n * <br/>If path does not exist, log an error and return the noPropObj\n * @param {Object} theme - App Theme\n * @param {string|Array} path - Path to the styles in the theme\n *\n * @returns {Object} - Found theme styles\n */\nconst getStylesFromPath = (theme, path) => {\n  return (\n    (path && get(theme, path)) ||\n    (() => {\n      process.env.NODE_ENV === 'development' &&\n        console.warn(`Could not find path \"${path}\" on theme`, path, theme)\n    })()\n  )\n}\n\n/**\n * Memorizes building styles object by merging the theme path and user styles\n * If not userStyles, returns the theme pathStyles\n * @param {Object} pathStyles\n * @param {Object} userStyles\n *\n * @returns {Object} - Merged styles object\n */\nconst mergeStyles = (pathStyles, userStyles) => {\n  // If no user styles, just return the pathStyles\n  if (!userStyles || userStyles === noPropObj) return pathStyles\n\n  // Get the keys of both to try and find the level of the userStyles\n  const pathKeys = Object.keys(pathStyles)\n  const userKeys = Object.keys(userStyles)\n\n  // Check if the userKeys has a key at the same level as the pathKeys\n  return !userKeys.length\n    ? pathStyles\n    : pathKeys.indexOf(userKeys[0]) !== -1\n      ? // If there is a match, then merge the objects at the top level\n      // Example => pathStyles.default && userStyles.default both exist\n        deepMerge(pathStyles, userStyles)\n      : // Otherwise the userStyles are expected to be one level deeper\n      // So add the user styles to each key of the path styles\n      // Example => pathStyles.default.main && userStyles.main both exist\n      reduceObj(\n        pathStyles,\n        (key, value, updated) => {\n          updated[key] = deepMerge(value, userStyles)\n          return updated\n        },\n        {}\n      )\n}\n\n/**\n * Finds a theme object from the passed in path and merges it with the passed in styles object\n * Stores the built styles on the state, and updates when passed in arguments change\n * @param {string} path - Path to the styles on the theme\n * @param {Object} styles - Custom styles to override the theme styles\n *\n * @returns {Object} - Built styles object and function to update the styles\n */\nexport const useThemePath = (path, styles = noPropObj) => {\n  // Get access to the theme\n  const theme = useTheme()\n\n  return useMemo(() => {\n    // Get the styles from the themePath\n    const pathStyles = getStylesFromPath(theme, path)\n\n    // Ensure styles is a collection and it's not empty\n    const validStyles = validateStyles(styles)\n\n    // If valid custom styles merge with the theme and return it\n    // Otherwise if no valid styles or pathStyles just return noPropObj\n    return validStyles\n      ? mergeStyles(pathStyles, styles)\n      : pathStyles || noPropObj\n  }, [ theme, path, styles ])\n}\n"],"names":["validateStyles","styles","Boolean","noPropObj","isEmptyColl","getStylesFromPath","theme","path","get","mergeStyles","pathStyles","userStyles","pathKeys","Object","keys","userKeys","length","indexOf","deepMerge","reduceObj","key","value","updated","useThemePath","useTheme","useMemo","validStyles"],"mappings":";;;;AAgBA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM;AAAA,SAC3B,CAACC,OAAO,CAAC,CAACD,MAAD,IAAWA,MAAM,KAAKE,SAAtB,IAAmCC,WAAW,CAACH,MAAD,CAA/C,CADmB;AAAA,CAA7B;AAWA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACzC,SACGA,IAAI,IAAIC,GAAG,CAACF,KAAD,EAAQC,IAAR,CAAZ,IACC,YAAM;AAGN,GAHD,EAFF;AAOD,CARD;AAkBA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAaC,UAAb,EAA4B;AAE9C,MAAI,CAACA,UAAD,IAAeA,UAAU,KAAKR,SAAlC,EAA6C,OAAOO,UAAP,CAFC;AAK9C,MAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,CAAjB;AACA,MAAMK,QAAQ,GAAGF,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAjB,CAN8C;AAS9C,SAAO,CAACI,QAAQ,CAACC,MAAV,GACHN,UADG,GAEHE,QAAQ,CAACK,OAAT,CAAiBF,QAAQ,CAAC,CAAD,CAAzB,MAAkC,CAAC,CAAnC;AAGEG,EAAAA,SAAS,CAACR,UAAD,EAAaC,UAAb,CAHX;AAOAQ,EAAAA,SAAS,CACPT,UADO,EAEP,UAACU,GAAD,EAAMC,KAAN,EAAaC,OAAb,EAAyB;AACvBA,IAAAA,OAAO,CAACF,GAAD,CAAP,GAAeF,SAAS,CAACG,KAAD,EAAQV,UAAR,CAAxB;AACA,WAAOW,OAAP;AACD,GALM,EAMP,EANO,CATb;AAiBD,CA1BD;IAoCaC,YAAY,GAAG,SAAfA,YAAe,CAAChB,IAAD,EAA8B;AAAA,MAAvBN,MAAuB,uEAAdE,SAAc;AAExD,MAAMG,KAAK,GAAGkB,QAAQ,EAAtB;AAEA,SAAOC,OAAO,CAAC,YAAM;AAEnB,QAAMf,UAAU,GAAGL,iBAAiB,CAACC,KAAD,EAAQC,IAAR,CAApC,CAFmB;AAKnB,QAAMmB,WAAW,GAAG1B,cAAc,CAACC,MAAD,CAAlC,CALmB;AASnB,WAAOyB,WAAW,GACdjB,WAAW,CAACC,UAAD,EAAaT,MAAb,CADG,GAEdS,UAAU,IAAIP,SAFlB;AAGD,GAZa,EAYX,CAAEG,KAAF,EAASC,IAAT,EAAeN,MAAf,CAZW,CAAd;AAaD;;;;"}