{"version":3,"file":"useThemeWithHeight.js","sources":["../../../src/hooks/useThemeWithHeight.js"],"sourcesContent":["import { useDimensions } from '@keg-hub/re-theme'\nimport { useLayoutEffect, useState } from 'react'\nimport { useThemePath } from './useThemePath'\nimport { deepMerge } from '@keg-hub/jsutils'\nimport { Dimensions } from 'react-native'\nconst windowHeight = Dimensions.get('window').height\nconst heightStyles = { height: windowHeight }\nconst buildHeightStyles = (height, key) => {\n  heightStyles.maxHeight = height\n  return key ? { [key]: heightStyles } : heightStyles\n}\nconst buildHeightWithTheme = (stylesWithHeight, themeStyles) => {\n  return deepMerge(themeStyles, stylesWithHeight)\n}\n/**\n * Adds height property to specified styles object with a value equal to the window/screen height\n * @param {string} themePath - Path to the styles on the theme\n * @param {Object} styles - Custom styles to override the theme styles\n * @param {string} key - object in styles to add height property to\n *\n * @returns {array} - styles object with height equal to window/screen height\n */\nexport const useThemeWithHeight = (themePath, styles, key) => {\n  const themeStyles = useThemePath(themePath, styles)\n  const { height } = useDimensions()\n  const [ curHeight, setCurHeight ] = useState(height)\n  const [ stylesWithHeight, setStylesWithHeight ] = useState(\n    buildHeightWithTheme(buildHeightStyles(height, key), themeStyles)\n  )\n  useLayoutEffect(() => {\n    if (height === curHeight) return\n    setCurHeight(height)\n    setStylesWithHeight(\n      buildHeightWithTheme(buildHeightStyles(height, key), themeStyles)\n    )\n  }, [ curHeight, height, key, themeStyles ])\n  return [ stylesWithHeight, setStylesWithHeight ]\n}\n"],"names":["windowHeight","Dimensions","get","height","heightStyles","buildHeightStyles","key","maxHeight","buildHeightWithTheme","stylesWithHeight","themeStyles","deepMerge","useThemeWithHeight","themePath","styles","useThemePath","useDimensions","useState","curHeight","setCurHeight","setStylesWithHeight","useLayoutEffect"],"mappings":";;;;;;;AAKA,IAAMA,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C;AACA,IAAMC,YAAY,GAAG;AAAED,EAAAA,MAAM,EAAEH;AAAV,CAArB;AACA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,MAAD,EAASG,GAAT,EAAiB;AACzCF,EAAAA,YAAY,CAACG,SAAb,GAAyBJ,MAAzB;AACA,SAAOG,GAAG,uBAAMA,GAAN,EAAYF,YAAZ,IAA6BA,YAAvC;AACD,CAHD;AAIA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,gBAAD,EAAmBC,WAAnB,EAAmC;AAC9D,SAAOC,SAAS,CAACD,WAAD,EAAcD,gBAAd,CAAhB;AACD,CAFD;IAWaG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAYC,MAAZ,EAAoBR,GAApB,EAA4B;AAC5D,MAAMI,WAAW,GAAGK,YAAY,CAACF,SAAD,EAAYC,MAAZ,CAAhC;AAD4D,uBAEzCE,aAAa,EAF4B;AAAA,MAEpDb,MAFoD,kBAEpDA,MAFoD;AAAA,kBAGxBc,QAAQ,CAACd,MAAD,CAHgB;AAAA;AAAA,MAGpDe,SAHoD;AAAA,MAGzCC,YAHyC;AAAA,mBAIVF,QAAQ,CACxDT,oBAAoB,CAACH,iBAAiB,CAACF,MAAD,EAASG,GAAT,CAAlB,EAAiCI,WAAjC,CADoC,CAJE;AAAA;AAAA,MAIpDD,gBAJoD;AAAA,MAIlCW,mBAJkC;AAO5DC,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAIlB,MAAM,KAAKe,SAAf,EAA0B;AAC1BC,IAAAA,YAAY,CAAChB,MAAD,CAAZ;AACAiB,IAAAA,mBAAmB,CACjBZ,oBAAoB,CAACH,iBAAiB,CAACF,MAAD,EAASG,GAAT,CAAlB,EAAiCI,WAAjC,CADH,CAAnB;AAGD,GANc,EAMZ,CAAEQ,SAAF,EAAaf,MAAb,EAAqBG,GAArB,EAA0BI,WAA1B,CANY,CAAf;AAOA,SAAO,CAAED,gBAAF,EAAoBW,mBAApB,CAAP;AACD;;;;"}