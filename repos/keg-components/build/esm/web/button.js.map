{"version":3,"file":"button.js","sources":["../../../src/components/button/button.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { Touchable } from '../touchable'\nimport { Text } from '../typography/text'\nimport { useThemePath } from '../../hooks'\nimport { useThemeHover, useThemeActive } from '@keg-hub/re-theme'\nimport { getActiveOpacity, getPressHandler, renderFromType } from '../../utils'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\n\n/**\n * Finds the child type and formats it in the proper type to be rendered\n * @param {Object|Array|string} Children - React components to render\n * @param {Object} theme - Re-Theme Object\n * @param {Object} activeStyle - Current styles based on the state of the element\n * @param {Object} [styles={}] - Custom styles passed into the component as a prop\n *\n * @returns {React Component|Object|Array}\n */\nconst getChildren = (Children, styles = {}) => {\n  return renderFromType(Children, { style: styles.content }, Text)\n}\n\nconst checkDisabled = (mainStyles, btnStyles, disabled) => {\n  return disabled\n    ? { ...mainStyles, ...get(btnStyles, 'disabled.main') }\n    : mainStyles\n}\n\n/**\n * Button\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see buttonPropTypes\n * @property {String} props.text - button text\n * @property {String} props.type - flat, text, outlined, contained; default 'flat'\n * @property {Object} props.style - custom style\n * @property {Function} props.onPress - function to do when button is pressed\n * @property {Boolean} props.disabled\n * @property {Object} props.children\n * @property {Object} props.ref - reference to native element\n *\n */\nexport const Button = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    content,\n    onClick,\n    onPress,\n    styles,\n    type = 'default',\n    themePath,\n    ...elProps\n  } = props\n\n  const btnStyles = useThemePath(\n    themePath || `button.contained.${type}`,\n    styles\n  )\n\n  const [ hoverRef, hoverStyles ] = useThemeHover(\n    get(btnStyles, 'default', {}),\n    get(btnStyles, 'hover'),\n    { ref }\n  )\n\n  const [ themeRef, themeStyles ] = useThemeActive(\n    hoverStyles,\n    get(btnStyles, 'active'),\n    { ref: hoverRef }\n  )\n\n  return (\n    <Touchable\n      accessibilityRole='button'\n      className={useThemeTypeAsClass(\n        themePath || type,\n        'keg-button',\n        className\n      )}\n      {...elProps}\n      touchRef={themeRef}\n      style={checkDisabled(themeStyles.main, btnStyles, props.disabled)}\n      children={getChildren(children || content, themeStyles)}\n      {...getPressHandler(false, onClick, onPress)}\n      {...getActiveOpacity(false, props, btnStyles)}\n    />\n  )\n})\n\nButton.propTypes = {\n  ...Touchable.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n  ]),\n  content: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n  ]),\n  Touchable: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  onPress: PropTypes.func,\n  ref: PropTypes.object,\n  styles: PropTypes.object,\n  themePath: PropTypes.string,\n}\n"],"names":["getChildren","Children","styles","renderFromType","style","content","Text","checkDisabled","mainStyles","btnStyles","disabled","get","Button","React","forwardRef","props","ref","className","children","onClick","onPress","type","themePath","elProps","useThemePath","useThemeHover","hoverRef","hoverStyles","useThemeActive","themeRef","themeStyles","useThemeTypeAsClass","main","getPressHandler","getActiveOpacity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAA2B;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAC7C,SAAOC,cAAc,CAACF,QAAD,EAAW;AAAEG,IAAAA,KAAK,EAAEF,MAAM,CAACG;AAAhB,GAAX,EAAsCC,IAAtC,CAArB;AACD,CAFD;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,EAAqC;AACzD,SAAOA,QAAQ,qCACNF,UADM,GACSG,GAAG,CAACF,SAAD,EAAY,eAAZ,CADZ,IAEXD,UAFJ;AAGD,CAJD;IAoBaI,MAAM,GAAGC,cAAK,CAACC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAEnDC,SAFmD,GAWjDF,KAXiD,CAEnDE,SAFmD;AAAA,MAGnDC,QAHmD,GAWjDH,KAXiD,CAGnDG,QAHmD;AAAA,MAInDb,OAJmD,GAWjDU,KAXiD,CAInDV,OAJmD;AAAA,MAKnDc,OALmD,GAWjDJ,KAXiD,CAKnDI,OALmD;AAAA,MAMnDC,OANmD,GAWjDL,KAXiD,CAMnDK,OANmD;AAAA,MAOnDlB,MAPmD,GAWjDa,KAXiD,CAOnDb,MAPmD;AAAA,oBAWjDa,KAXiD,CAQnDM,IARmD;AAAA,MAQnDA,IARmD,4BAQ5C,SAR4C;AAAA,MASnDC,SATmD,GAWjDP,KAXiD,CASnDO,SATmD;AAAA,MAUhDC,OAVgD,4BAWjDR,KAXiD;AAarD,MAAMN,SAAS,GAAGe,YAAY,CAC5BF,SAAS,+BAAwBD,IAAxB,CADmB,EAE5BnB,MAF4B,CAA9B;AAbqD,uBAkBnBuB,aAAa,CAC7Cd,GAAG,CAACF,SAAD,EAAY,SAAZ,EAAuB,EAAvB,CAD0C,EAE7CE,GAAG,CAACF,SAAD,EAAY,OAAZ,CAF0C,EAG7C;AAAEO,IAAAA,GAAG,EAAHA;AAAF,GAH6C,CAlBM;AAAA;AAAA,MAkB7CU,QAlB6C;AAAA,MAkBnCC,WAlBmC;AAAA,wBAwBnBC,cAAc,CAC9CD,WAD8C,EAE9ChB,GAAG,CAACF,SAAD,EAAY,QAAZ,CAF2C,EAG9C;AAAEO,IAAAA,GAAG,EAAEU;AAAP,GAH8C,CAxBK;AAAA;AAAA,MAwB7CG,QAxB6C;AAAA,MAwBnCC,WAxBmC;AA8BrD,SACEjB,6BAAC,SAAD;AACE,IAAA,iBAAiB,EAAC,QADpB;AAEE,IAAA,SAAS,EAAEkB,mBAAmB,CAC5BT,SAAS,IAAID,IADe,EAE5B,YAF4B,EAG5BJ,SAH4B;AAFhC,KAOMM,OAPN;AAQE,IAAA,QAAQ,EAAEM,QARZ;AASE,IAAA,KAAK,EAAEtB,aAAa,CAACuB,WAAW,CAACE,IAAb,EAAmBvB,SAAnB,EAA8BM,KAAK,CAACL,QAApC,CATtB;AAUE,IAAA,QAAQ,EAAEV,WAAW,CAACkB,QAAQ,IAAIb,OAAb,EAAsByB,WAAtB;AAVvB,KAWMG,eAAe,CAAC,KAAD,EAAQd,OAAR,EAAiBC,OAAjB,CAXrB,EAYMc,gBAAgB,CAAC,KAAD,EAAQnB,KAAR,EAAeN,SAAf,CAZtB,EADF;AAgBD,CA9CqB;;;;"}