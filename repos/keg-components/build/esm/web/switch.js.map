{"version":3,"file":"switch.js","sources":["../../../src/components/form/switch/switch.js"],"sourcesContent":["import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.get(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n"],"names":["KegSwitch","StyleInjector","InternalSwitch","displayName","className","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","color","areaColor","backgroundColor","colors","onTintColor","useCheckedState","isChecked","themeStyles","theme","useTheme","useMemo","get","content","setCheckedValue","setChecked","onChange","event","checkCall","SideComponent","Component","style","isStr","renderFromType","styles","ChildrenComponent","children","useSwitchHandle","ref","useImperativeHandle","Switch","forwardRef","props","checked","elType","disabled","LeftComponent","close","onValueChange","RightComponent","SwitchComponent","setCheckedSetter","type","themePath","value","elProps","useState","toBool","elThemePath","useThemePath","activeStyles","typeClassName","useThemeTypeAsClass","main","left","getChecked","getOnChangeHandler","right"],"mappings":"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"}