{"version":3,"file":"index.js","sources":["../../../src/hooks/useKeyPress/useKeyPress.js","../../../src/components/filePicker/filePicker.js","../../../src/components/form/checkGroup/checkGroup.js","../../../src/components/form/form/form.js","../../../src/components/form/option/option.js","../../../src/components/form/radio/radio.js","../../../src/components/form/select/select.js","../../../src/components/form/slider/slider.js","../../../src/components/form/switch/switch.js","../../../src/components/link/link.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react'\n\n/**\n * Helper for `useKeyPress` that sets and removes window listeners\n * @param {Function} upHandler\n * @param {Function} downHandler\n */\nconst manageListeners = (upHandler, downHandler) => {\n  window.addEventListener('keydown', downHandler)\n  window.addEventListener('keyup', upHandler)\n\n  // cleanup\n  return () => {\n    window.removeEventListener('keydown', downHandler)\n    window.removeEventListener('keyup', upHandler)\n  }\n}\n\n/**\n * @param {string} targetKey\n * @return {boolean} whether the key was pressed down or not\n */\nexport const useKeyPress = targetKey => {\n  const [ keyPressed, setKeyPressed ] = useState(false)\n\n  const downHandler = useCallback(\n    evt => evt.key === targetKey && setKeyPressed(true),\n    [ setKeyPressed, targetKey ]\n  )\n\n  const upHandler = useCallback(\n    evt => evt.key === targetKey && setKeyPressed(false),\n    [ setKeyPressed, targetKey ]\n  )\n\n  useEffect(\n    () => manageListeners(upHandler, downHandler),\n    [ downHandler, upHandler ]\n  )\n\n  return keyPressed\n}\n","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useThemePath } from '../../hooks'\nimport PropTypes from 'prop-types'\nimport { P } from '../typography'\nimport { Button } from '../button'\nimport { View } from 'KegView'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\nimport { Input as KegInput } from '../internal/input.web'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst Input = StyleInjector(KegInput, {\n  displayName: 'FilePickerInput',\n  className: 'keg-file-picker-input',\n})\n\n/**\n * A component for selecting files from the user's system. Looks better than a basic input element,\n * and accepts style objects for styling further\n * @param {Object} props - props object. Accepts all standard <input /> props which will be passed to the input element. Additional props:\n * @param {String} props.title - the text inside the button\n * @param {Object} props.style - style for the wrapping View\n * @param {Object} props.buttonStyle - style for the button\n * @param {Object} props.fileStyle - style for the file name text\n * @param {Object} props.themePath - theme type path for everything except the button\n * @param {Object} props.buttonThemePath - theme type path for the button itself (@see Button)\n * @param {Boolean} props.showFile - if true, it will show the file name next to the input\n * @param {Function} props.onFilePicked - function called when a file was selected and handles extracting the file for you: file => { ... }\n * @param {Boolean} props.openOnMount - opens filepicker on component mount\n * @param {Object} ref - an optional ref to the underlying input element\n */\nexport const FilePicker = React.forwardRef((props, ref) => {\n  const {\n    className,\n    onChange,\n    title,\n    children,\n    style = {},\n    showFile = true,\n    onFilePicked,\n    themePath = 'filePicker.default',\n    buttonThemePath = 'button.contained.default',\n    capture,\n    openOnMount = false,\n    ...args\n  } = props\n\n  const componentTheme = useThemePath(themePath)\n\n  // store the file selected by the user\n  const [ file, setFile ] = useState({})\n\n  // handle user selecting a file\n  const handleInputChange = useCallback(\n    event => {\n      onChange && onChange(event)\n\n      const file = event.target.files[0]\n      file && onFilePicked && onFilePicked(file)\n      file && setFile(file)\n    },\n    [ onChange, onFilePicked, setFile ]\n  )\n\n  // make an input ref so that we can call the input's click() handler to start picking files\n  // when the user clicks the button\n  const refToInput = useRef()\n\n  const clickInput = useCallback(\n    () => refToInput.current && refToInput.current.click(),\n    [refToInput]\n  )\n\n  // if openOnMount is set to true, then immediately open the file picker\n  useEffect(() => {\n    openOnMount && clickInput()\n  }, [])\n\n  return (\n    <View\n      className={useThemeTypeAsClass(\n        themePath || type,\n        'keg-filepicker',\n        className\n      )}\n      style={[ get(componentTheme, 'main'), style ]}\n    >\n      <Button\n        content={title}\n        onClick={clickInput}\n        style={get(componentTheme, 'content.button')}\n        themePath={buttonThemePath}\n      >\n        { children }\n      </Button>\n\n      {\n        // show the file name if the flag is set for it\n        showFile && (\n          <P style={get(componentTheme, 'content.file')}>{ file.name }</P>\n        )\n      }\n\n      { /* this input is hidden from the user, but is still used for selecting a file */ }\n      <Input\n        {...args}\n        ref={input => {\n          ref && (ref.current = input)\n          refToInput.current = input\n        }}\n        onChange={handleInputChange}\n        style={get(componentTheme, 'content.input')}\n        type='file'\n        capture={capture}\n      />\n    </View>\n  )\n})\n\nFilePicker.propTypes = {\n  title: PropTypes.string,\n  style: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  fileStyle: PropTypes.object,\n  themePath: PropTypes.string,\n  buttonThemePath: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilePicked: PropTypes.func,\n  showFile: PropTypes.bool,\n}\n","import React, { useCallback, useImperativeHandle, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { View } from 'KegView'\nimport { Text } from '../../typography/text'\nimport { Checkbox } from 'KegCheckbox'\nimport { useStyle } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\nimport { useChildrenWithRefs } from '../../../hooks/useChildrenWithRefs'\nimport { mapObj, noOp } from '@keg-hub/jsutils'\n\n/**\n * Simple header for CheckGroup, without a checkbox\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the Text element\n * @param {*} props.* - remaining props are passed to the Text element\n */\nconst SimpleHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, ...rest } = props\n\n  // add no-op handle here just for consistency with other header\n  useImperativeHandle(ref, () => ({ isChecked: undefined, setChecked: noOp }))\n\n  const textStyle = useStyle('form.checkGroup.simpleHeader.main', style)\n  return (\n    <Text\n      className={className}\n      style={textStyle}\n      {...rest}\n    >\n      { title }\n    </Text>\n  )\n})\n\n/**\n * Header for CheckGroup, with a checkbox for select-all functionality\n * @param {Object} props\n * @param {string} props.title - title of header\n * @param {Object} props.style - style rules to apply to the header\n * @param {Function?} props.onPress - handler for checkbox press\n * @param {boolean} props.checked - initial value of header checkbox\n */\nconst CheckboxHeader = React.forwardRef((props, ref) => {\n  const { title, className, style, onPress, checked } = props\n  const headerStyles = useMemo(\n    () => ({\n      main: style,\n      content: {\n        right: {},\n      },\n    }),\n    [style]\n  )\n\n  const onChangeHandler = useCallback((_, val) => onPress?.(val), [onPress])\n\n  return (\n    <Checkbox\n      RightComponent={title}\n      rightClassName={className}\n      styles={headerStyles}\n      checked={checked}\n      onChange={onChangeHandler}\n      ref={ref}\n      close\n    />\n  )\n})\n\n/**\n * A group of checkbox items with a header.\n * Will include a select-all checkbox in the header IF you define the children as a function (@see story examples)\n * @param {Object} props\n * @param {string} props.className - css class name\n * @param {string} props.headerClassName - css class name for header text\n * @param {string} props.title - title of the group\n * @param {boolean?} props.initChecked - initial checked value of the group header box, if you are using it\n * @param {boolean?} props.showHeaderCheckbox - true if you want a group header check box, with select-all functionality\n * @param {boolean?} props.showHeader - true by default. If false, hides the header entirely, only showing children\n * @param {Function?} props.onGroupPress - handler of header checkbox\n * @param {*} props.children - components in the group (@see CheckboxGroup.Item)\n * @param {Object?} props.styles\n * @param {Object?} props.styles.main\n * @param {Object?} props.styles.header\n */\nexport const CheckGroup = React.forwardRef((props, ref) => {\n  const {\n    className,\n    headerClassName,\n    title,\n    children,\n    styles,\n    initChecked = false,\n    onGroupPress,\n    showHeaderCheckbox = false,\n    showHeader = true,\n  } = props\n\n  const groupStyles = useStyle('form.checkGroup', styles)\n\n  // get children updated with ref props, and the refs themselves\n  const [ childrenWithProps, childRefs ] = useChildrenWithRefs(\n    children,\n    showHeaderCheckbox\n  )\n\n  // callback that manages select-all behavior on click of the header checkbox\n  const headerCheckHandler = useCallback(\n    checked => {\n      onGroupPress?.(checked)\n      mapObj(childRefs.current, (_, child) => child?.setChecked?.(checked))\n    },\n    [childRefs]\n  )\n\n  const Header = () =>\n    showHeaderCheckbox ? (\n      <CheckboxHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        onPress={showHeaderCheckbox && headerCheckHandler}\n        checked={showHeaderCheckbox ? initChecked : undefined}\n        ref={ref}\n      />\n    ) : (\n      <SimpleHeader\n        className={headerClassName}\n        style={groupStyles?.header}\n        title={title}\n        ref={ref}\n      />\n    )\n\n  return (\n    <View\n      className={useClassList('keg-check-group', className)}\n      style={groupStyles?.main}\n    >\n      { showHeader && <Header /> }\n      { childrenWithProps }\n    </View>\n  )\n})\n\nCheckGroup.Item = Checkbox\n\nCheckGroup.propTypes = {\n  className: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  headerClassName: PropTypes.oneOfType([ PropTypes.array, PropTypes.string ]),\n  title: PropTypes.string,\n  initChecked: PropTypes.bool,\n  showHeaderCheckbox: PropTypes.bool,\n  showHeader: PropTypes.bool,\n  onGroupPress: PropTypes.func,\n  styles: PropTypes.oneOfType([ PropTypes.object, PropTypes.array ]),\n}\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { get } from '@keg-hub/jsutils'\nimport { useThemePath } from '../../../hooks'\nimport { useTheme } from '@keg-hub/re-theme'\nimport { useClassList } from 'KegClassList'\n/**\n * Form\n * @summary Custom button component. All props are optional\n *\n * @param {Object} props - see formPropTypes\n * @property {String} props.type - default ''\n * @property {Object} props.style - custom style\n * @property {Function} props.onSubmit - function when form is submitted\n * @property {Object} props.children\n * @property {Object} ref - reference to native element\n */\nexport const Form = React.forwardRef((props, ref) => {\n  const theme = useTheme()\n\n  const {\n    children,\n    className,\n    elType,\n    style,\n    type,\n    themePath = `form.form.${type || 'default'}`,\n    ...elProps\n  } = props\n\n  const formTheme = useThemePath(themePath)\n\n  return (\n    <View\n      accessibilityRole='form'\n      className={useClassList('keg-form', className)}\n      {...elProps}\n      style={[ get(theme, 'form.form.default'), formTheme, style ]}\n      ref={ref}\n    >\n      { children }\n    </View>\n  )\n})\n\nForm.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  onSubmit: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Option = props => {\n  const { children, label, style, text, value, ...args } = props\n\n  return (\n    <option\n      {...args}\n      value={value || label || text}\n    >\n      { label || value || text || children }\n    </option>\n  )\n}\n\nOption.propTypes = {\n  style: PropTypes.object,\n  label: PropTypes.string,\n  text: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n}\n","import React from 'react'\nimport { Input } from 'KegInput'\n\nexport const Radio = props => <Input\n  {...props}\n  type='radio'\n/>\n","import React from 'react'\nimport { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Select as InternalSelect } from '../../internal/select'\nimport { useThemePath } from '../../../hooks'\nimport { useSelectHandlers } from '../../../hooks/useSelectHandlers'\nimport { getValueFromChildren, getInputValueKey } from '../../../utils'\nimport { useClassName } from 'KegClassName'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { ChevronDown } from '../../../assets/icons'\nimport { Icon } from 'KegIcon'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSelect = StyleInjector(InternalSelect, {\n  displayName: 'Select',\n  className: 'keg-select',\n})\n\n/**\n * Gets the key value pair for the select components value\n * @param {*} props - Props passed to the component\n *\n * @returns {Object} - key / value pair for the select component\n */\nconst getValue = props => {\n  const { children, onChange, onValueChange, readOnly, value } = props\n\n  const setValue = getValueFromChildren(value, children)\n  const valKey = getInputValueKey(false, onChange, onValueChange, readOnly)\n\n  return { [valKey]: setValue }\n}\n\n/**\n * Select\n * @summary Default Select component that wraps the Internal Select component with the styles injector. All props are optional\n *\n * @param {Object} props - see KegSelect PropTypes\n * @property {String} props.className - Value to set the className to (web platform only)\n *\n */\nexport const Select = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    disabled,\n    readOnly,\n    onChange,\n    onValueChange,\n    style,\n    styles,\n    type = 'default',\n    themePath = `form.select.${type}`,\n    value,\n    ...elProps\n  } = props\n\n  const selectStyles = useThemePath(themePath, styles)\n  const selectClasses = useThemeTypeAsClass(\n    themePath || type,\n    'keg-select',\n    className\n  )\n  const classRef = useClassName('keg-select', selectClasses, ref)\n\n  return (\n    <View style={[ selectStyles.main, style ]}>\n      <KegSelect\n        ref={classRef}\n        {...elProps}\n        enabled={!disabled}\n        style={[selectStyles.select]}\n        {...getValue(props)}\n        {...useSelectHandlers({ onChange, onValueChange })}\n      >\n        { children }\n      </KegSelect>\n      <Icon\n        styles={selectStyles.icon}\n        Component={ChevronDown}\n        color={disabled && selectStyles.icon?.disabled?.color}\n      />\n    </View>\n  )\n})\n\nSelect.propTypes = {\n  ...InternalSelect.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n","export const Slider = () => {\n  return null\n}\n","import { View } from 'KegView'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { useTheme } from '@keg-hub/re-theme'\nimport React, {\n  useState,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react'\nimport { useThemeTypeAsClass } from 'KegTypeAsClass'\nimport { useThemePath } from '../../../hooks'\nimport { get, isStr, toBool, checkCall } from '@keg-hub/jsutils'\nimport { getOnChangeHandler, getChecked, renderFromType } from '../../../utils'\nimport { Switch as InternalSwitch } from '../../internal/switch.js'\nimport { StyleInjector } from '@keg-hub/re-theme/styleInjector'\n\n/**\n * Wrap the internal component with the Styles Injector Hoc\n * <br/>This allows us to add the styles as css classes\n */\nconst KegSwitch = StyleInjector(InternalSwitch, {\n  displayName: 'Switch',\n  className: 'keg-switch',\n})\n\n/**\n * Gets the custom Native Switch colors from the passed in styles\n * @param {string} thumbColor - Color of the on/off indicator\n * @param {string} trackColor - Color of the background track\n * @param {Object} styles - { indicator={}, area={} } - passed in switch styles\n *\n * @returns {Object} - Contains the Native color props for the Switch component\n */\nconst getSwitchColors = (\n  thumbColor,\n  trackColor,\n  { indicator = {}, area = {} }\n) => {\n  const indicatorColor = thumbColor || indicator.color\n  const areaColor = trackColor || area.backgroundColor\n  const colors = {\n    ...(indicatorColor && { thumbColor: thumbColor || color }),\n    ...(areaColor && { trackColor: areaColor, onTintColor: areaColor }),\n  }\n\n  return colors\n}\n\n/**\n * Optimizes the check and non-checked styles so they don't have to be rebuilt on each render\n * Checked styles only rebuild when isChecked value has changed\n * @param {boolean} isChecked - Current state of the switch component\n * @param {Object} themeStyles - Styles of the Switch component\n *\n * @returns {Object} - Styles with the correct values based on isChecked state\n */\nconst useCheckedState = (isChecked, themeStyles) => {\n  const theme = useTheme()\n  return useMemo(() => {\n    return theme.get(themeStyles, {\n      content: {\n        area: {\n          ...get(themeStyles, 'content.area.off'),\n          ...(isChecked && get(themeStyles, 'content.area.on')),\n        },\n        indicator: {\n          ...get(themeStyles, 'content.indicator.off'),\n          ...(isChecked && get(themeStyles, 'content.indicator.on')),\n        },\n      },\n    })\n  }, [isChecked])\n}\n\n/**\n * Sets / Updates the value of the checked Component\n * Calls the callback, if it's passed in\n * @param {boolean} isChecked - Current state of the check value\n * @param {function} setChecked - Update the checked state\n * @param {function} onChange - Callback to call when the state changes\n *\n * @returns {function} - The checked state update function\n */\nconst setCheckedValue = (isChecked, setChecked, onChange) => {\n  return event => {\n    setChecked(!isChecked)\n    checkCall(onChange, event, !isChecked)\n  }\n}\n\n/**\n * Side\n * @summary builds the side sections of the Switch\n * @param {Object} props\n * @property {React Component|string|Object|Array} Component  - custom component to display in the section.\n * @property {Object} style - default headerstyle obj for section\n *\n * @returns {Component} - section component\n */\nconst SideComponent = ({ Component, style }) => {\n  return isStr(Component) ? (\n    <Text style={style}>{ Component }</Text>\n  ) : (\n    renderFromType(Component, { style: styles.content })\n  )\n}\n\n/**\n * Finds the children type and returns them in the format needed to render\n * @param {Object|Array|string} props.children - Child components to render\n *\n * @returns {React Component|Object|Array}\n */\nconst ChildrenComponent = ({ children }) => (\n  <>{ renderFromType(children, {}, null) }</>\n)\n\n/**\n * Exposes an imperative api for the consumer of switch\n * @param {RefObject} ref\n * @param {boolean} isChecked\n * @param {Function} setChecked\n */\nconst useSwitchHandle = (ref, isChecked, setChecked) => {\n  return useImperativeHandle(\n    ref,\n    () => ({\n      isChecked,\n      setChecked,\n    }),\n    [ ref, isChecked, setChecked ]\n  )\n}\n\n/**\n * Switch\n * Wraps the Internal KegSwitch which should be a Switch for the platform type\n * @param {Object} props - see PropTypes below\n *\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    className,\n    checked,\n    children,\n    elType,\n    disabled,\n    LeftComponent,\n    close,\n    onChange,\n    onValueChange,\n    RightComponent,\n    styles,\n    SwitchComponent,\n    setCheckedSetter,\n    type,\n    themePath,\n    thumbColor,\n    trackColor,\n    value,\n    ...elProps\n  } = props\n\n  const [ isChecked, setChecked ] = useState(toBool(checked || value))\n\n  // by default, switch manages its own toggled state.\n  // however, if the consumer needs to control that, it can by passing\n  // in a `ref`, then calling ref.current.setChecked to control the value\n  useSwitchHandle(ref, isChecked, setChecked)\n\n  const elThemePath =\n    themePath || `form.switch.${(close && 'close') || 'default'}`\n  const themeStyles = useThemePath(elThemePath, styles)\n  const activeStyles = useCheckedState(isChecked, themeStyles)\n  const typeClassName = useThemeTypeAsClass(\n    elThemePath || type,\n    'keg-switch',\n    className\n  )\n\n  return (\n    (children && (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        <ChildrenComponent\n          className='keg-switch-container'\n          children={children}\n        />\n      </View>\n    )) || (\n      <View\n        className={typeClassName}\n        style={activeStyles.main}\n      >\n        { LeftComponent && (\n          <SideComponent\n            className='keg-switch-left'\n            Component={LeftComponent}\n            style={activeStyles.content.left}\n          />\n        ) }\n\n        { SwitchComponent ? (\n          renderFromType(SwitchComponent, {\n            ...props,\n            styles: activeStyles.content,\n          })\n        ) : (\n          <KegSwitch\n            elProps={elProps}\n            disabled={disabled}\n            styles={activeStyles.content}\n            {...getSwitchColors(thumbColor, trackColor, activeStyles.content)}\n            {...getChecked(false, isChecked)}\n            {...getOnChangeHandler(\n              false,\n              setCheckedValue(isChecked, setChecked, onChange || onValueChange)\n            )}\n          />\n        ) }\n\n        { RightComponent && (\n          <SideComponent\n            className='keg-switch-right'\n            Component={RightComponent}\n            style={activeStyles.content.right}\n          />\n        ) }\n      </View>\n    )\n  )\n})\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  className: PropTypes.oneOfType([ PropTypes.string, PropTypes.array ]),\n  disabled: PropTypes.bool,\n  LeftComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  RightComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  SwitchComponent: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.element,\n  ]),\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  styles: PropTypes.object,\n  text: PropTypes.string,\n  themePath: PropTypes.string,\n  thumbColor: PropTypes.string,\n  trackColor: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.bool,\n}\n","import React from 'react'\nimport { LinkWrapper } from './link.wrapper'\nimport { KegText } from 'KegText'\nimport { Touchable } from '../touchable'\nimport PropTypes from 'prop-types'\nimport { getPlatform } from 'KegGetPlatform'\nimport { useClassList } from 'KegClassList'\n\nconst isWeb = getPlatform() === 'web'\nconst Text = KegText('link')\n\nconst Element = React.forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    elProps,\n    href,\n    onPress,\n    style,\n    target,\n    ...attrs\n  } = props\n\n  return (\n    <Touchable\n      className={useClassList('keg-link', className)}\n      {...elProps}\n      {...attrs}\n      touchRef={ref}\n    >\n      <Text\n        accessibilityRole='link'\n        className='keg-link-text'\n        style={style}\n        href={href}\n        target={target}\n      >\n        { children }\n      </Text>\n    </Touchable>\n  )\n})\n\nconst Link = props => <LinkWrapper\n  {...props}\n  Element={Element}\n  isWeb={isWeb}\n/>\n\nLink.propTypes = {\n  href: PropTypes.string,\n  onPress: PropTypes.func,\n  text: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\n\nexport { Link, Link as A }\n"],"names":["manageListeners","upHandler","downHandler","window","addEventListener","removeEventListener","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","useCallback","evt","key","useEffect","Input","StyleInjector","KegInput","displayName","className","FilePicker","React","forwardRef","props","ref","onChange","title","children","style","showFile","onFilePicked","themePath","buttonThemePath","capture","openOnMount","args","componentTheme","useThemePath","file","setFile","handleInputChange","event","target","files","refToInput","useRef","clickInput","current","click","useThemeTypeAsClass","type","get","name","input","SimpleHeader","rest","useImperativeHandle","isChecked","undefined","setChecked","noOp","textStyle","useStyle","Text","CheckboxHeader","onPress","checked","headerStyles","useMemo","main","content","right","onChangeHandler","_","val","CheckGroup","headerClassName","styles","initChecked","onGroupPress","showHeaderCheckbox","showHeader","groupStyles","useChildrenWithRefs","childrenWithProps","childRefs","headerCheckHandler","mapObj","child","Header","header","useClassList","Item","Checkbox","Form","theme","useTheme","elType","elProps","formTheme","Option","label","text","value","Radio","KegSelect","InternalSelect","getValue","onValueChange","readOnly","setValue","getValueFromChildren","valKey","getInputValueKey","Select","disabled","selectStyles","selectClasses","classRef","useClassName","select","useSelectHandlers","icon","ChevronDown","color","Slider","KegSwitch","InternalSwitch","getSwitchColors","thumbColor","trackColor","indicator","area","indicatorColor","areaColor","backgroundColor","colors","onTintColor","useCheckedState","themeStyles","setCheckedValue","checkCall","SideComponent","Component","isStr","renderFromType","ChildrenComponent","useSwitchHandle","Switch","LeftComponent","close","RightComponent","SwitchComponent","setCheckedSetter","toBool","elThemePath","activeStyles","typeClassName","left","getChecked","getOnChangeHandler","isWeb","getPlatform","KegText","Element","href","attrs","Link"],"mappings":"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"}