{"version":3,"file":"cloneFunc-30c0acdd.js","sources":["../../src/method/cloneFunc.js"],"sourcesContent":["/** @module functions */\n\nimport { get } from '../collection/get'\n\n/**\n * Clones a function using the Function constructor and calling toString on the passed in function\n * @example\n * const func = () => { console.log('test') }\n * const clone = cloneFunc(func)\n * // clone !== func\n * @function\n * @param {function} func - function to clone\n *\n * @returns {Object} cloned function\n */\nexport const cloneFunc = func => {\n\n  const funcClone = function(...args){\n    return func instanceof funcClone\n      ? (() => { return new func(...args) })()\n      : get(func.prototype, 'constructor.name')\n        ? new func(...args)\n        : func.apply(func, args)\n  }\n\n  for(let key in func )\n    func.hasOwnProperty(key) && (funcClone[key] = func[key])\n  \n  Object.defineProperty(funcClone, 'name', { value: func.name, configurable: true })\n  funcClone.toString = () => func.toString()\n\n  return funcClone\n}\n"],"names":["cloneFunc","func","funcClone","args","get","prototype","apply","key","hasOwnProperty","Object","defineProperty","value","name","configurable","toString"],"mappings":";;;;MAeaA,SAAS,GAAGC,IAAI,IAAI;AAE/B,QAAMC,SAAS,GAAG,UAAS,GAAGC,IAAZ,EAAiB;AACjC,WAAOF,IAAI,YAAYC,SAAhB,GACH,CAAC,MAAM;AAAE,aAAO,IAAID,IAAJ,CAAS,GAAGE,IAAZ,CAAP;AAA0B,KAAnC,GADG,GAEHC,OAAG,CAACH,IAAI,CAACI,SAAN,EAAiB,kBAAjB,CAAH,GACE,IAAIJ,IAAJ,CAAS,GAAGE,IAAZ,CADF,GAEEF,IAAI,CAACK,KAAL,CAAWL,IAAX,EAAiBE,IAAjB,CAJN;AAKD,GAND;AAQA,OAAI,IAAII,GAAR,IAAeN,IAAf,EACEA,IAAI,CAACO,cAAL,CAAoBD,GAApB,MAA6BL,SAAS,CAACK,GAAD,CAAT,GAAiBN,IAAI,CAACM,GAAD,CAAlD;AAEFE,EAAAA,MAAM,CAACC,cAAP,CAAsBR,SAAtB,EAAiC,MAAjC,EAAyC;AAAES,IAAAA,KAAK,EAAEV,IAAI,CAACW,IAAd;AAAoBC,IAAAA,YAAY,EAAE;AAAlC,GAAzC;AACAX,EAAAA,SAAS,CAACY,QAAV,GAAqB,MAAMb,IAAI,CAACa,QAAL,EAA3B;AAEA,SAAOZ,SAAP;AACD;;;;"}