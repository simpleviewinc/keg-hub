{"version":3,"file":"getURLParam-ded83eb3.js","sources":["../../src/url/queryToObj.js","../../src/url/objToQuery.js","../../src/url/isValidUrl.js","../../src/url/getURLParam.js"],"sourcesContent":["/** @module url */\n\nimport { isArr } from '../array/isArr'\n\n/**\n * takes a raw querystring input and converts it to an object\n * @param {String} string - querystring to parse into an object\n * @function\n * @returns {Object}\n */\nexport const queryToObj = string => {\n\n  const currentQueryItems = {}\n  const stringSplit = string.split('?')\n  const querystring = stringSplit[ stringSplit.length -1 ]\n  \n  if(!querystring) return currentQueryItems\n\n  const split = querystring.split('&')\n\n  split.length &&\n    split.map(item => {\n\n      const components = item.split('=')\n      if (components.length <= 1) return currentQueryItems\n\n      // split on the first instance of '=', so we join the rest if any\n      const itemSplit = [components.shift(), components.join('=')]\n\n      if (itemSplit.length === 2) {\n        \n        // if the value contains special char ',' then make it into an array\n        const array = decodeURIComponent(itemSplit[1]).split(',')\n        if (array && array.length > 1)\n          currentQueryItems[itemSplit[0]] = array\n        \n        // check if key already exists\n        else if (itemSplit[0] in currentQueryItems) {\n           // convert to array or append to it\n           const val = currentQueryItems[itemSplit[0]]\n           currentQueryItems[itemSplit[0]] = isArr(val) \n             ? val.push(decodeURIComponent(itemSplit[1])) \n             : [val, decodeURIComponent(itemSplit[1])]        \n        }\n        else\n          currentQueryItems[itemSplit[0]] = decodeURIComponent(itemSplit[1])\n      }\n    })\n\n  return currentQueryItems\n}\n","/** @module url */\n\nimport { reduceObj } from '../object/reduceObj'\nimport { isStr } from '../string/isStr'\nimport { isNum } from '../number/isNum'\nimport { isBool } from '../boolean/isBool'\nimport { isColl } from '../collection/isColl'\nimport { isArr } from '../array/isArr'\n\n/**\n * Converts the input object to url querystring\n * @param {Object} obj - object with kvp to convert into a querystring\n * @function\n * @returns {String} querystring\n */\nexport const objToQuery = obj => {\n  let firstSet\n  return reduceObj(obj, (key, value, urlStr) => {\n    if(!value) return urlStr\n\n    const useVal = isStr(value) || isNum(value) || isBool(value)\n      ? value \n      : isColl(value)\n        ? isArr(value) \n          ? value.join(',') \n          : JSON.stringify(value)\n        : null\n    \n    if(!useVal) return urlStr\n\n    urlStr = !firstSet\n      ? `?${encodeURIComponent(key)}=${encodeURIComponent(useVal)}`\n      : `${urlStr}&${encodeURIComponent(key)}=${encodeURIComponent(useVal)}`\n    firstSet = true\n\n    return urlStr\n  }, '')\n}\n","/** @module url */\n\n/**\n * Checks if the given string is a valid URL\n * Must begin with ftp/http/https\n * @param {String} string - any string to check if it's a valid url\n * @function\n * @returns {Boolean}\n */\nexport const isValidUrl = string => {\n  var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/\n\n  return regexp.test(string)\n}\n","/** @module url */\n\nimport { queryToObj } from './queryToObj'\nimport { validate } from '../validation/validate'\nimport { isStr } from '../string/isStr'\n\n/**\n * Gets the value for the URL parameter, if it's available.\n * Can be safely called on platforms without a global document object,\n * in which case this always returns null.\n * @function\n * @param {string} paramKey - a url param key \n * @return {string?} - value for the url parameter\n * @example\n * for www.test.com/?x=1&y=2\n * getURLParam('x') // 1\n * getURLParam('y') // 2\n */\nexport const getURLParam = paramKey => {\n  const [ valid ] = validate({ paramKey }, { paramKey: isStr })\n  if (!valid) return null\n\n  const doc = typeof document !== 'undefined' \n    ? document \n    : null\n  \n  const search = doc?.location?.search\n\n  return isStr(search)\n    ? queryToObj(search)?.[paramKey] ?? null\n    : null \n}"],"names":["queryToObj","string","currentQueryItems","stringSplit","split","querystring","length","map","item","components","itemSplit","shift","join","array","decodeURIComponent","val","isArr","push","objToQuery","obj","firstSet","reduceObj","key","value","urlStr","useVal","isStr","isNum","isBool","isColl","JSON","stringify","encodeURIComponent","isValidUrl","regexp","test","getURLParam","paramKey","valid","validate","doc","document","search","location"],"mappings":";;;;;;;;MAUaA,UAAU,GAAGC,MAAM,IAAI;AAElC,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAApB;AACA,QAAMC,WAAW,GAAGF,WAAW,CAAEA,WAAW,CAACG,MAAZ,GAAoB,CAAtB,CAA/B;AAEA,MAAG,CAACD,WAAJ,EAAiB,OAAOH,iBAAP;AAEjB,QAAME,KAAK,GAAGC,WAAW,CAACD,KAAZ,CAAkB,GAAlB,CAAd;AAEAA,EAAAA,KAAK,CAACE,MAAN,IACEF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAEhB,UAAMC,UAAU,GAAGD,IAAI,CAACJ,KAAL,CAAW,GAAX,CAAnB;AACA,QAAIK,UAAU,CAACH,MAAX,IAAqB,CAAzB,EAA4B,OAAOJ,iBAAP,CAHZ;AAMhB,UAAMQ,SAAS,GAAG,CAACD,UAAU,CAACE,KAAX,EAAD,EAAqBF,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAArB,CAAlB;AAEA,QAAIF,SAAS,CAACJ,MAAV,KAAqB,CAAzB,EAA4B;AAG1B,YAAMO,KAAK,GAAGC,kBAAkB,CAACJ,SAAS,CAAC,CAAD,CAAV,CAAlB,CAAiCN,KAAjC,CAAuC,GAAvC,CAAd;AACA,UAAIS,KAAK,IAAIA,KAAK,CAACP,MAAN,GAAe,CAA5B,EACEJ,iBAAiB,CAACQ,SAAS,CAAC,CAAD,CAAV,CAAjB,GAAkCG,KAAlC,CADF;AAAA,WAIK,IAAIH,SAAS,CAAC,CAAD,CAAT,IAAgBR,iBAApB,EAAuC;AAEzC,gBAAMa,GAAG,GAAGb,iBAAiB,CAACQ,SAAS,CAAC,CAAD,CAAV,CAA7B;AACAR,UAAAA,iBAAiB,CAACQ,SAAS,CAAC,CAAD,CAAV,CAAjB,GAAkCM,KAAK,CAACD,GAAD,CAAL,GAC9BA,GAAG,CAACE,IAAJ,CAASH,kBAAkB,CAACJ,SAAS,CAAC,CAAD,CAAV,CAA3B,CAD8B,GAE9B,CAACK,GAAD,EAAMD,kBAAkB,CAACJ,SAAS,CAAC,CAAD,CAAV,CAAxB,CAFJ;AAGF,SANI,MAQHR,iBAAiB,CAACQ,SAAS,CAAC,CAAD,CAAV,CAAjB,GAAkCI,kBAAkB,CAACJ,SAAS,CAAC,CAAD,CAAV,CAApD;AACH;AACF,GA1BD,CADF;AA6BA,SAAOR,iBAAP;AACD;;MCnCYgB,UAAU,GAAGC,GAAG,IAAI;AAC/B,MAAIC,QAAJ;AACA,SAAOC,SAAS,CAACF,GAAD,EAAM,CAACG,GAAD,EAAMC,KAAN,EAAaC,MAAb,KAAwB;AAC5C,QAAG,CAACD,KAAJ,EAAW,OAAOC,MAAP;AAEX,UAAMC,MAAM,GAAGC,KAAK,CAACH,KAAD,CAAL,IAAgBI,KAAK,CAACJ,KAAD,CAArB,IAAgCK,MAAM,CAACL,KAAD,CAAtC,GACXA,KADW,GAEXM,MAAM,CAACN,KAAD,CAAN,GACEP,KAAK,CAACO,KAAD,CAAL,GACEA,KAAK,CAACX,IAAN,CAAW,GAAX,CADF,GAEEkB,IAAI,CAACC,SAAL,CAAeR,KAAf,CAHJ,GAIE,IANN;AAQA,QAAG,CAACE,MAAJ,EAAY,OAAOD,MAAP;AAEZA,IAAAA,MAAM,GAAG,CAACJ,QAAD,GACJ,IAAGY,kBAAkB,CAACV,GAAD,CAAM,IAAGU,kBAAkB,CAACP,MAAD,CAAS,EADrD,GAEJ,GAAED,MAAO,IAAGQ,kBAAkB,CAACV,GAAD,CAAM,IAAGU,kBAAkB,CAACP,MAAD,CAAS,EAFvE;AAGAL,IAAAA,QAAQ,GAAG,IAAX;AAEA,WAAOI,MAAP;AACD,GAnBe,EAmBb,EAnBa,CAAhB;AAoBD;;MC5BYS,UAAU,GAAGhC,MAAM,IAAI;AAClC,MAAIiC,MAAM,GAAG,kFAAb;AAEA,SAAOA,MAAM,CAACC,IAAP,CAAYlC,MAAZ,CAAP;AACD;;MCKYmC,WAAW,GAAGC,QAAQ,IAAI;AAAA;AACrC,QAAM,CAAEC,KAAF,IAAYC,QAAQ,CAAC;AAAEF,IAAAA;AAAF,GAAD,EAAe;AAAEA,IAAAA,QAAQ,EAAEX;AAAZ,GAAf,CAA1B;AACA,MAAI,CAACY,KAAL,EAAY,OAAO,IAAP;AAEZ,QAAME,GAAG,GAAG,OAAOC,QAAP,KAAoB,WAApB,GACRA,QADQ,GAER,IAFJ;AAIA,QAAMC,MAAM,GAAGF,GAAH,aAAGA,GAAH,wCAAGA,GAAG,CAAEG,QAAR,kDAAG,cAAeD,MAA9B;AAEA,SAAOhB,KAAK,CAACgB,MAAD,CAAL,0CACH1C,UAAU,CAAC0C,MAAD,CADP,gDACH,YAAqBL,QAArB,CADG,uEAC+B,IAD/B,GAEH,IAFJ;AAGD;;;;"}