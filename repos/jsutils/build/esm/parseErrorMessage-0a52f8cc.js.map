{"version":3,"file":"parseErrorMessage-0a52f8cc.js","sources":["../../src/method/checkCall.js","../../src/method/complement.js","../../src/method/eitherFunc.js","../../src/method/debounce.js","../../src/method/doIt.js","../../src/method/hasDomAccess.js","../../src/method/memorize.js","../../src/method/runSeq.js","../../src/method/timedRun.js","../../src/method/throttle.js","../../src/method/throttleLast.js","../../src/method/limbo.js","../../src/method/uuid.js","../../src/method/parseErrorMessage.js"],"sourcesContent":["/** @module functions */\n\nimport { isFunc } from './isFunc'\n\n/**\n * Check if the passed in method is a function, and calls it\n * @example\n * checkCall((param1) => { return param1 }, 'foo')\n * // Returns 'foo'\n * @function\n * @param {function} method - function to call\n * @param {Object} params - params to pass to the method on call\n * @return {*} - whatever the passed in method returns\n */\nexport const checkCall = (method, ...params) => {\n  return isFunc(method)\n    ? method(...params)\n    : undefined\n}\n","/** @module functions */\n\nimport { validate } from '../validation'\nimport { isFunc } from '../method/isFunc'\n\n/**\n * Returns a new function that is the complement of predicate function `predicate`\n * @function\n * @param {Function} predicate \n * @returns {Function?} the complement of `predicate`, if it's a function, otherwise null\n * @example\n * const isNegative = x => (x < 0)\n * const isNonNegative = complement(isNegative)\n * isNonNegative(1) // true\n */\nexport const complement = predicate => {\n  const [ valid ] = validate({ predicate }, { predicate: isFunc })\n  return valid\n    ? (...args) => !predicate(...args)\n    : null\n}","/** @module functions */\n\nimport { isFunc } from './isFunc'\n\n/**\n * Returns the first param if it's a function.\n * <br> If first param is not a function, returns second param.\n * @example\n * eitherFunc(() => {}, 'bar')\n * // Returns first param because it's a function.\n * @example\n * eitherFunc('foo', 'bar')\n * // Returns 'bar'\n * @function\n * @param {function} func1 - return if is func\n * @param {function} func2 - use if first is not an object\n * @returns {function}\n */\nexport const eitherFunc = (func1, func2) => (\n  isFunc(func1) && func1 || func2\n)\n","/** @module functions */\n\nimport { isFunc } from './isFunc'\n\n/**\n * Limits the amount of calls to a function over time\n * @example\n * debounce(myFunction)\n * // Calls myFunction after the default 250 ms\n * @example\n * debounce(myFunction, 500)\n * // Calls myFunction after 500 ms\n * @example\n * debounce(myFunction, 500, true)\n * // Calls myFunction immediately\n * @function\n * @param {function} func - function to call\n * @param {number} wait - how long to wait between function calls\n * @param {boolean} immediate - should call immediately\n * @return { void }\n */\nexport const debounce = (func, wait = 250, immediate = false) => {\n  let timeout\n  function wrapFunc(...args){\n    if (!isFunc(func)) return null\n\n    const context = this\n    const later = () => {\n      timeout = null\n      !immediate && func.apply(context, args)\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow)\n      return isFunc(func) && func.apply(context, args)\n  }\n  return wrapFunc\n}\n","/** @module functions */\n\nimport { isNum } from '../number/isNum'\nimport { isFunc } from './isFunc'\n\n/**\n * Execute a method n times.\n * <br> Callback params - does not include number || callback method\n * @function\n  * @example\n * doIt(10, window, [], (index, arr) => { arr.push(index) }) === [ 0,1,2 ... 8,9 ]\n * @param {number} args.0 - number of times to call the callback\n * @param {parent} args.1 - value to bind the method call to ( this )\n * @param {function} last arg of args array - method to call\n * @return { void }\n */\nexport const doIt = (...args) => {\n  const params = args.slice()\n  const num = params.shift()\n  const bindTo = params.shift()\n  const cb = params.pop()\n  if(!isNum(num) || !isFunc(cb)) return []\n  \n  const doItAmount = new Array(num)\n  const responses = []\n  for(let i = 0; i < doItAmount.length; i++){\n    const data = cb.call(bindTo, i, ...params)\n    if (data === false) break\n    responses.push(data)\n  }\n\n  return responses\n}\n","/** @module functions */\n\n/**\n * Checks if there is access to the dom\n * @function\n * @example\n * // In Browser \n * hasDomAccess() === true\n * // In Node\n * hasDomAccess() === false\n * @return {Boolean} True if executed in a browser\n */\nexport const hasDomAccess = () => {\n  try {\n    return !!(\n      typeof window !== 'undefined' &&\n      window.document &&\n      window.document.createElement\n    )\n  }\n  catch (error) {\n    return false\n  }\n}","/** @module functions */\n\nimport { isNum } from '../number/isNum'\nimport { hasOwn } from '../object/hasOwn'\nimport { isFunc } from './isFunc'\n\n/**\n * Creates a method to memorize passed in methods output\n * @example\n * memorize(myFunction, cacheKeyFunction)\n  * @example\n * memorize(myFunction, cacheKeyFunction, 100)\n * @function\n * @param {function} func - method to memorize output of\n * @param {function} getCacheKey - gets the key to save cached output\n *\n * @return {function} memorized function with cache\n */\nexport const memorize = (func, getCacheKey, limit=1) => {\n    if (!isFunc(func) || (getCacheKey && !isFunc(getCacheKey)))\n      return console.error('Error: Expected a function', func, getCacheKey)\n\n    let memorized = function(){\n      const cache = memorized.cache\n      const key = getCacheKey ? getCacheKey.apply(this,  arguments) : arguments[0]\n\n      if (hasOwn(cache, key)) return cache[key]\n\n      const result = func.apply(this, arguments)\n\n      isNum(limit) && Object.keys(cache).length < limit\n        ? (cache[key] = result)\n        : (memorized.cache = { [key]: result })\n\n      return result\n    }\n\n    memorized.cache = {}\n    memorized.destroy = () => {\n      getCacheKey = undefined\n      memorized.cache = undefined\n      memorized.destroy = undefined\n      memorized = undefined\n    }\n\n    return memorized\n}\n","/** @module functions */\n\nimport { validate } from '../validation/validate'\nimport { isArr } from '../array/isArr'\nimport { isFunc } from './isFunc'\nimport { deepClone } from '../collection/deepClone'\n\n/**\n* Calls each promise-returning function in array `asyncFns`,\n* but awaits each before calling the next. Will pass the\n* index and resolved values of complete functions to each subsequent\n* function, in case any need them.\n* @function\n* @param {Array<Function>} asyncFns - array of functions to call in sequence. \n* Each will be passed (currentIndex, resultsSoFar)\n* @param {boolean?} [options.cloneResults=false] - if true, each function will be\n* passed a deep clone of the results array, rather than the reference to it.\n* @param {boolean?} [options.returnOriginal=true] - if true, any member of asyncFns that \n* is not a function will have its corresponding value in the return array be itself. \n* If this is false, that value will be undefined.\n* @return {Promise<Array<*>>} - returns a promise that resolves to an array of all the \n* asyncFns' return values \n* @example\n* const results = await runSeq(asyncFunctions)\n* @example\n* const results = await runSeq(asyncFunctions, { cloneResults: true, returnOriginal: false })\n*/\nexport const runSeq = async (asyncFns=[], options={}) => {\n  const [ valid ] = validate({ asyncFns }, { asyncFns: isArr })\n  if (!valid) return []\n\n  const { \n    cloneResults=false, \n    returnOriginal=true\n  } = options\n\n  const results = []\n\n  for (const fn of asyncFns) {\n    const result = isFunc(fn) \n      ? await fn(results.length, cloneResults ? deepClone(results) : results)\n      : returnOriginal ? fn : undefined\n    results.push(result)\n  }\n\n  return results\n}\n","/** @module functions */\n\nimport { validate } from '../validation/validate'\nimport { isFunc } from './isFunc'\n\n/**\n * Executes and times the function `fn`.\n * @function\n * @param {Function} fn \n * @param {...*?} args - any number of arguments to pass to fn when it is called\n * @return {Promise<Array<*, number>>} [ fn output, execution time in ms ]\n * @example\n * const [ result, executionTime ] = timedRun(() => http.get(url)))\n * @example\n * const [ result, executionTime ] = timedRun(http.get, url)\n */\nexport const timedRun = async (fn, ...args) => {\n  const [ valid ] = validate({ fn }, { fn: isFunc })\n  if (!valid) return [ undefined, -1 ]\n\n  const startTime = new Date()\n  const result = await fn(...args)\n  return [\n    result,\n    new Date() - startTime\n  ]\n}\n","/** @module functions */\n\n/**\n * Throttle function calls to only execute once over a wait period\n * @example\n * throttle(() => console.log('throttled'), 50)()\n * @function\n * @param {*} func - method to call after wait\n * @param {number} [wait=100] time to wait between calls\n * @return {function} throttled function\n */\nexport const throttle = (func, wait = 100) => {\n  let waiting = false\n  return function(...args){\n    if (waiting) return\n    waiting = true\n    func.apply(this, args)\n    return setTimeout(() => {\n      waiting = false\n    }, wait)\n  }\n}\n","/** @module functions */\n\n/**\n * Ensures the last call to the throttled function get called.\n * <br> Will wait the allotted time, before calling the last call to it.\n * <br> The final call will not execute until no more calls are made,\n * <br> Accepts a callback to call each time the throttle called,\n * @example\n * throttleLast(() => {}, () => {})()\n * // throttle function\n * @function\n * @param {function} func - method to call after wait\n * @param {function} cb - method to call after throttle function is called\n * @param {number} [wait=100] time to wait until executing func param\n * @return {function} throttled function\n */\nexport const throttleLast = (func, cb, wait = 100) => {\n  let throttleTimeout\n  return function(...args) {\n    // If the throttle already exists clear it, and create it again\n    if (throttleTimeout) clearTimeout(throttleTimeout)\n    // Store a reference to the timeout\n    // Will wait the allotted time until calling the final call to it\n    throttleTimeout = setTimeout(() => {\n      func.apply(this, args)\n      clearTimeout(throttleTimeout)\n    }, wait)\n    typeof cb === 'function' && cb()\n  }\n}\n","/** @module functions */\n\nimport { isFunc } from './isFunc'\n\n/**\n * Adds catch to a promise for better error handling of await functions\n * <br> Removes the need for wrapping await in a try / catch\n * @example\n * const [ err, data ] = await limbo(promiseFunction())\n * // returns an array\n * // * err will be undefined if no error was thrown\n * // * data will be the response from the promiseFunction\n * @function\n * @param {Promise} promise - Promise to be resolved\n * @return {Array} - Slot 1 => error, Slot 2 => response from promise\n */\nexport const limbo = promise => {\n  return !promise || !isFunc(promise.then)\n    ? [ new Error(`A promise or thenable is required as the first argument!`), null]\n    : promise\n      .then(data => [null, data])\n      .catch(err => [err, undefined])\n}\n","/** @module functions */\n\n/**\n * Creates a uuid, unique up to around 20 million iterations.\n * @example\n * uuid()\n * // New uuid as a string\n * @function\n * @param {number} start of the uuid\n * @return {string} - build uuid\n */\nexport const uuid = a => a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([ 1e7 ] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g,uuid)\n","/** @module functions */\n\nimport { isStr } from '../string/isStr'\nimport { isObj } from '../object/isObj'\nimport { isEmpty } from '../ext/isEmpty'\n\n/**\n * @function\n * Extracts the message from the exception, whether string\n * or object\n * @param {*} exception \n * @return {string?} - the message or null if no message is present\n * @example \n * try {\n *   throwSomeException()\n * }\n * catch (err) {\n *   const message = parseErrorMessage(err) || 'Error'\n * }\n */\nexport const parseErrorMessage = exception => {\n  return isStr(exception) && !isEmpty(exception)\n    ? exception\n    : isObj(exception)\n      ? exception.message\n      : null\n}"],"names":["checkCall","method","params","isFunc","undefined","complement","predicate","valid","validate","args","eitherFunc","func1","func2","debounce","func","wait","immediate","timeout","wrapFunc","context","later","apply","callNow","clearTimeout","setTimeout","doIt","slice","num","shift","bindTo","cb","pop","isNum","doItAmount","Array","responses","i","length","data","call","push","hasDomAccess","window","document","createElement","error","memorize","getCacheKey","limit","console","memorized","cache","key","arguments","hasOwn","result","Object","keys","destroy","runSeq","asyncFns","options","isArr","cloneResults","returnOriginal","results","fn","deepClone","timedRun","startTime","Date","throttle","waiting","throttleLast","throttleTimeout","limbo","promise","then","Error","catch","err","uuid","a","Math","random","toString","replace","parseErrorMessage","exception","isStr","isEmpty","isObj","message"],"mappings":"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"}