{"version":3,"file":"strToType-81b5721e.js","sources":["../../src/ext/strToType.js"],"sourcesContent":["/** @module Helpers */\n\nimport { isStr } from '../string/isStr'\nimport { isNum } from '../number/isNum'\nimport { toNum } from '../number/toNum'\nimport { isStrBool } from '../boolean/isStrBool'\nimport { toBool } from '../boolean/toBool'\n\n/**\n * Converts a string to its own type if possible.\n * @example\n * strToType('12345678')\n * // Returns 12345678\n * @example\n * strToType('{}')\n * // Returns {}\n * @example\n * strToType('[]')\n * // Returns []\n * @function\n * @param {*} val - value to convert\n * @return { any | string } converted value || string if can't convert\n */\nexport const strToType = val => {\n  return !val || !isStr(val)\n    ? val\n    : isStrBool(val)\n      ? toBool(val)\n      : isNum(val)\n        ? toNum(val)\n        : (() => {\n            try { return JSON.parse(val) }\n            catch(e){ return val }\n          })()\n}"],"names":["strToType","val","isStr","isStrBool","toBool","isNum","toNum","JSON","parse","e"],"mappings":";;;;;MAuBaA,SAAS,GAAGC,GAAG,IAAI;AAC9B,SAAO,CAACA,GAAD,IAAQ,CAACC,KAAK,CAACD,GAAD,CAAd,GACHA,GADG,GAEHE,SAAS,CAACF,GAAD,CAAT,GACEG,MAAM,CAACH,GAAD,CADR,GAEEI,KAAK,CAACJ,GAAD,CAAL,GACEK,KAAK,CAACL,GAAD,CADP,GAEE,CAAC,MAAM;AACL,QAAI;AAAE,aAAOM,IAAI,CAACC,KAAL,CAAWP,GAAX,CAAP;AAAwB,KAA9B,CACA,OAAMQ,CAAN,EAAQ;AAAE,aAAOR,GAAP;AAAY;AACvB,GAHD,GANR;AAUD;;;;"}