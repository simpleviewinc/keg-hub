{"version":3,"file":"index.js","sources":["../../../src/dimensions/webDimensions.js","../../../src/dimensions/useDimensions.js","../../../src/theme/withTheme.js","../../../src/hooks/useTheme.js","../../../src/styleParser/cssProperties.js","../../../src/styleParser/jsToCss.js","../../../src/hooks/useCss.js","../../../src/hooks/useStylesCallback.js","../../../src/hooks/hookFactory.js","../../../src/hooks/useThemeHover.js","../../../src/hooks/useThemeActive.js","../../../src/hooks/useThemeFocus.js"],"sourcesContent":["/** @module dimensions */\n\nimport { debounce, isArr, isFunc, checkCall } from '@keg-hub/jsutils'\nimport { Constants } from '../constants'\nimport { setRNDimensions } from './dimensions'\nimport { hasDomAccess } from '../helpers/hasDomAccess'\n\nconst DEBOUNCE_RATE = 100\n\n/**\n * Gets the window object if it's available\n *\n * @returns {Object} - Browser window object\n */\nconst getWindow = () => {\n  const winAccess = !hasDomAccess()\n\n  return winAccess\n    ? {\n        devicePixelRatio: undefined,\n        innerHeight: undefined,\n        innerWidth: undefined,\n        width: undefined,\n        height: undefined,\n        screen: {\n          height: undefined,\n          width: undefined,\n        },\n      }\n    : (() => {\n        return window\n      })()\n}\n\nconst winDim = getWindow()\n\n/**\n * Adds an event listener to the passed in element\n *\n * @param {*} element - Adds the eventlistener to this param\n * @param {string} event - Event to listen for\n * @param {function} method - Method to call when event fires\n * @param {Object|boolean} options - Options for eventlisteners on browsers\n */\nconst addListener = (element, event, method, options) => {\n  element &&\n    checkCall(element.addEventListener, event, method, options || false)\n}\n\n/**\n * Sets the screen size from the passed in window object\n * @param {Object} win - window object to set the screen size\n *\n * @returns {Object} - Updated screen object\n */\nconst setScreen = win => {\n  return {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width,\n  }\n}\n\n/**\n * Sets the window size from the passed in window object\n * @param {Object} win - window object to set the screen size\n *\n * @returns {Object} - Updated window object\n */\nconst setWin = win => {\n  return {\n    fontScale: 1,\n    height: win.innerHeight,\n    scale: win.devicePixelRatio || 1,\n    width: win.innerWidth,\n  }\n}\n\n/**\n * Default dimensions object\n */\nconst dimensions = { window: setWin(winDim), screen: setScreen(winDim) }\n\n/**\n * Event listeners cache\n */\nconst listeners = {}\n\n/**\n * Gets a dimensions property based on the passed in value\n * @param {string} dimension - string key name as window || screen\n *\n * @returns {Object} - window or screen property of the dimensions object\n */\nconst get = key => dimensions[key]\n\n/**\n * Sets a dimensions property based on the passed in values\n * @param {Object} dimensions - Object to update the dimensions values\n *\n * @returns {null}\n */\nconst set = ({ screen, window: win }) => {\n  screen && (dimensions.screen = screen)\n  win && (dimensions.window = win)\n}\n\n/**\n * Updates the dimensions object based on the current screen and window sizes\n * Calls any event listeners listening for dimensions updates\n */\nconst update = () => {\n  dimensions.window = setWin(winDim)\n  dimensions.screen = setScreen(winDim)\n\n  isArr(listeners[Constants.CHANGE_EVENT]) &&\n    listeners[Constants.CHANGE_EVENT].forEach(\n      listener => !listener.shouldUnmount && listener(dimensions)\n    )\n}\n\n/**\n * Adds an event listener to the even type\n * @param {string} type - Type of event to listen for\n * @param {function} listener - function to call when the event fires\n *\n */\nconst addEventListener = (type, listener) => {\n  if (!type || !isFunc(listener)) return\n\n  listeners[type] = listeners[type] || []\n  listeners[type].push(listener)\n}\n\n/**\n * Removes an event listener\n * @param {string} type - Type of event to listen for\n * @param {function} listener - function to remove from the event type\n *\n */\nconst removeEventListener = (type, removeListener) => {\n  type &&\n    isFunc(removeListener) &&\n    isArr(listeners[type]) &&\n    (listeners[type] = listeners[type].filter(\n      listener => listener !== removeListener\n    ))\n}\n\n// Check if we have access to the DOM, and if so add a resize event listener\nhasDomAccess() &&\n  checkCall(() =>\n    addListener(window, Constants.RESIZE_EVENT, debounce(update, DEBOUNCE_RATE))\n  )\n\nconst Dimensions = {\n  get,\n  set,\n  update,\n  addEventListener,\n  removeEventListener,\n}\n\nsetRNDimensions(Dimensions)\n\nexport { Dimensions, setRNDimensions }\n","/** @module dimensions */\n'use strict'\n\nimport { useState, useEffect } from 'react'\nimport { Dimensions } from './dimensions'\n\n// Get the original window dimensions\n\nexport const useDimensions = () => {\n  /**\n   * Set the original dimensions to the state hook\n   */\n  const [ dimensions, setDimensions ] = useState(Dimensions.get('window'))\n\n  /**\n   * onChange listener for when the screen size changes\n   *\n   * @param {Object} arguments.window - holds the size of the current window\n   */\n  const onChange = ({ window: win }) => {\n    // Pull out the relevant items form the window object\n    const { width, height, scale, fontScale } = win\n    // Update the state with the updated dimensions data\n    setDimensions({ width, height, scale, fontScale })\n  }\n\n  /**\n   * Use the useEffect hook to set the Dimensions event listeners\n   */\n  useEffect(() => {\n    // Add the event listener\n    Dimensions.addEventListener('change', onChange)\n\n    // Return a function to remove the event listener\n    return () => {\n      onChange.shouldUnmount = true\n      return Dimensions.removeEventListener('change', onChange)\n    }\n  }, [])\n\n  // Return the current dimensions\n  return dimensions\n}\n","/** @module theme */\n'use strict'\n\nimport React from 'react'\nimport { ReThemeContext } from '../context/reThemeContext'\n\n/**\n * Adds the theme, merge and dimensions props from the Context to the passed in components' props\n * @param {*} Component\n *\n * @returns {Class} - React Component wrapping the Context Consumer and the passed in component\n */\nexport const withTheme = Component => {\n  return props => {\n    return (\n      <ReThemeContext.Consumer>\n        { value => {\n          return <Component\n            theme={value}\n            {...props}\n          />\n        } }\n      </ReThemeContext.Consumer>\n    )\n  }\n}\n","/** @module hooks */\n\nimport { useContext } from 'react'\nimport { ReThemeContext } from '../context/reThemeContext'\n\n/**\n * Uses the useContext hook from react to get the current theme ( Value prop of the context )\n *\n * @returns { Object } - Current theme\n */\nexport const useTheme = () => {\n  return useContext(ReThemeContext)\n}\n","  \nexport default {\n  noUnits: {\n    animationIterationCount: true,\n    borderImageOutset: true,\n    borderImageSlice: true,\n    borderImageWidth: true,\n    boxFlex: true,\n    boxFlexGroup: true,\n    boxOrdinalGroup: true,\n    columnCount: true,\n    columns: true,\n    flex: true,\n    flexGrow: true,\n    flexPositive: true,\n    flexShrink: true,\n    flexNegative: true,\n    flexOrder: true,\n    gridRow: true,\n    gridRowEnd: true,\n    gridRowSpan: true,\n    gridRowStart: true,\n    gridColumn: true,\n    gridColumnEnd: true,\n    gridColumnSpan: true,\n    gridColumnStart: true,\n    fontWeight: true,\n    lineClamp: true,\n    lineHeight: true,\n    opacity: true,\n    order: true,\n    orphans: true,\n    tabSize: true,\n    widows: true,\n    zIndex: true,\n    zoom: true,\n\n    // SVG-related properties\n    fillOpacity: true,\n    floodOpacity: true,\n    stopOpacity: true,\n    strokeDasharray: true,\n    strokeDashoffset: true,\n    strokeMiterlimit: true,\n    strokeOpacity: true,\n    strokeWidth: true,\n  }\n}\n","import { isNum, isObj } from '@keg-hub/jsutils'\nimport cssProperties from './cssProperties'\n\n/**\n * Converts JS CSS rule into CSS string\n * @param  { object } rule - style as JS CSS\n * @return { string } rule convert into CSS string\n */\nconst createRules = rule => (\n  Object\n    .entries(rule)\n    .reduce((ruleString, [ propName, propValue ]) => {\n      const name = propName\n        .replace(/([A-Z])/g, matches => `-${matches[0].toLowerCase()}`)\n\n      const hasUnits = !cssProperties.noUnits[propName]\n      const val = hasUnits && isNum(propValue) && propValue + 'px' || propValue\n\n      return `${ruleString}\\n\\t${name}: ${val};`\n    }, '')\n)\n\n/**\n * Converts a block of JS CSS into CSS string\n * @param  { string } selector - CSS selector for the rules\n * @param  { object } rls - CSS rules to be converted into a string\n * @return\n */\nconst createBlock = (selector, rls) => {\n  const subSelect = []\n\n  const filteredRls = Object.keys(rls)\n    .reduce((filtered, key) => {\n\n      !isObj(rls[key])\n        ? (filtered[key] = rls[key])\n        : (subSelect.push([ `${selector} ${key}`, rls[key] ]))\n\n      return filtered\n    }, {})\n\n  const styRls = createRules(filteredRls)\n  let block = `${selector} {${styRls}\\n}\\n`\n\n  subSelect.length &&\n    subSelect.map(subItem => block += createBlock(subItem[0], subItem[1]))\n\n  return block\n}\n\n  /**\n  * Converts the JS styles into a css string\n  * @param  { array of objects } rules - array of object styles to add convert into string\n  * @return { string } styles objects converted into string as formatted css styles\n  */\nexport const jsToCss = rules => {\n  return Object\n    .entries(rules)\n    .reduce((styles, [ selector, rls ]) => (styles + createBlock(selector, rls)), '')\n}\n","import { useTheme } from './useTheme'\nimport { noOpObj } from '../helpers/noOp'\nimport { useContext, useMemo } from 'react'\nimport { jsToCss } from '../styleParser/jsToCss'\nimport { HeadContext } from '../head/headContext'\nimport { getRNPlatform } from '../context/platform'\nimport { hasDomAccess } from '../helpers/hasDomAccess'\nimport { generateDataSet } from '../styleParser/generateDataSet'\nimport { checkCall, get, isStr, isObj, exists, uniqArr, isEmptyColl } from '@keg-hub/jsutils'\n\n/**\n * Cache holder for quick check if we're using web styles or not\n * <br> Can be overridden by passing inline to the useCss hook\n * @object\n */\nlet __webPlatform\n\n\n/**\n * Validates the passed in theme style object to ensure the key value pairs are style rules\n * <br/>If style object is not valid, then it will throw!\n * <br/>Should only run in production\n * <br/>Bypassed when in production\n * @function\n * @param {Object} style - CssInJs style object\n * @param {string} selector - Root class name for build the sub-data-call attributes\n *\n * @returns {boolean} - If themeStyles is a valid styles object\n */\nconst validTheme = (themeStyles, selector) => {\n  return process.env.NODE_ENV === 'production' ||\n    Boolean(isObj(themeStyles) && selector) ||\n    console.error(\n      `[ ReTheme ERROR ] - Invalid styleRef`,\n      `\\n   - useCss hook requires a valid theme reference of type 'Object' || 'string'`,\n      `\\n   - As string - must be a dot delimited path to a styles object on the global theme`,\n      `\\n   - As Object - must be a valid CssInJs styles object`,\n      `\\n`,\n      `\\n   - A 'root class' of type 'string' is also required`,\n      `\\n   - It can be a key on the 'styleRef' as '$class' or '$className'`,\n      `\\n   - Or passed as the third argument to the 'useCss' hook`\n    )\n}\n\n/**\n * Checks if we should use web css style sheets or inline styles base on inline and platform\n * @function\n * @param {string} inline - Force use inline styles regardless of platform\n * \n * @returns {boolean} - true if using a web platform, false if not on web || inline === true\n */\nconst checkWebPlatform = inline => {\n  return inline\n    ? false\n    : exists(__webPlatform)\n      ? __webPlatform\n      : checkCall(() => {\n          const platform = getRNPlatform()\n          // Cache the web platform call so we don't have to call this again\n          // The Platform doesn't change, so it's not an issue\n          __webPlatform = hasDomAccess() && platform.OS === 'web'\n            ? true\n            : false\n\n          return __webPlatform\n        })\n}\n\n/**\n * Custom hook for adding styles to the Dom in a web context\n * When on native, will return a dataSet and style prop to be applied to the element\n * @example\n * const { cssProps, styleProps } = useCss(styleRef, customStyles, rootClass)\n * <Style {...styleProps} />\n * <View {...cssProps} >My View</View>\n * \n * @param {Object|string} styleRef - CssInJs style object with a $class || $className key\n *                                   Or a dot separate string path within the main Theme\n * @param {Object} [customStyles={}] - Custom styles to merge with the theme css\n * @param {Object} config - Defines how the hook should build the dataSet and styles\n * @param {boolean} [config.inline=false] - Always return inline styles\n * @param {string} [config.selector=styleRef.$class] - Root css selector to use for all dataSet props overrides $class in theme\n * @param {string} config.prefix - Filters only theme objects that start with this prefix\n * @param {string|function} config.format - Template for building the css selector\n * \n * @returns { Object } - Current theme\n */\nexport const useCss = (styleRef, customStyles, config={}) => {\n  const { rootClass, inline, selector, id } = config\n  \n  const theme = useTheme()\n  const head = useContext(HeadContext)\n\n  // Check if the styleRef is a theme path as a string\n  // Or it could be an style object from the theme\n  const themeStyles = useMemo(() => {\n    return isStr(styleRef) ? get(theme, styleRef, noOpObj) : (styleRef || noOpObj)\n  }, [ styleRef, theme ])\n  \n  // Ensure the custom styles are an object and not empty\n  const custom = !customStyles || !isObj(customStyles) || isEmptyColl(customStyles)\n    ? noOpObj\n    : customStyles\n\n  return useMemo(() => {\n    // Extract the $class and $className from the themeStyles\n    const { $class, $className, ...cssStyle } = (themeStyles || noOpObj)\n    const selector = rootClass || $className || $class || id\n\n    if(!validTheme(themeStyles, selector)) return noOpObj\n\n    // Check if we should add the styles to the Dom\n    const webContent = checkWebPlatform(inline) && { styles: {}, hash: [] }\n\n    // Builds the dataSet prop dynamically form \n    // The passed in cssStyle object\n    const { cssProps, web } = generateDataSet(\n      webContent,\n      cssStyle,\n      custom,\n      { selector, ...config }\n    )\n\n    if(!web) return { cssProps, styleProps: {} }\n\n    // TODO: this it not currently being handled after the refactor\n    // Need to update to use the hash based on custom styles\n    const hashId = web && uniqArr(web.hash).join('-')\n\n    // When on web, add the styles to a Dom <style> element\n    // This allows using css sudo classes like :hover\n    return {\n      cssProps,\n      styleProps: {\n        id: hashId,\n        // Only build the styles if the hashId does not all ready exist\n        children: head.hasHash(hashId) ? '' : jsToCss(web.styles, hashId),\n      }\n    }\n\n  }, [ themeStyles, custom, rootClass, inline, selector, id ])\n}\n","import { useMemo, useCallback } from 'react'\nimport { useTheme } from './useTheme'\nimport { checkCall, isObj, isEmptyColl } from '@keg-hub/jsutils'\n\n/**\n * Create a custom hook for building the styles that are memoized\n * @example\n * const buildStyles = (theme) => {\n *   return {\n *     main: { flexDirection: 'column', ...margin },\n *     button: { main: margin },\n *   }\n * }\n *\n * const styles = useStylesCallback(buildStyles)\n *\n * @param {function} stylesCb - Callback function to build the styles\n * @param {Array} cbDependencies - List of dependencies passed to useCallback hook for the stylesCb\n * @param {Object} [customStyles={}] - Custom styles to pass to the styles callback\n * \n * @returns { Object } - Current theme\n */\nexport const useStylesCallback = (stylesCb, cbDependencies, customStyles) => {\n  // Memorize the passed in callback\n  const cb = useCallback(stylesCb, cbDependencies || [])\n\n  // Ensure the custom styles is real styles object\n  const styles =\n    !customStyles || !isObj(customStyles) || isEmptyColl(customStyles)\n      ? false\n      : customStyles\n\n  // Get the theme object to pass to the styles callback\n  const theme = useTheme()\n\n  // Use the useMemo hook to memoize the call to the stylesCb\n  return useMemo(() => checkCall(cb, theme, styles, ...cbDependencies) || {}, [ theme, cb, styles ])\n}\n","import { useRef, useState, useCallback, useLayoutEffect } from 'react'\nimport { isFunc, isObj, isColl, deepMerge, checkCall } from '@keg-hub/jsutils'\nimport { Constants } from '../constants'\n\n/**\n * Updates a listener on an element ( add || remove )\n * @param {Object} element - Node to update the event listener on\n * @param {string} type - Type of update to make ( add || remove )\n * @param {Object} events - Events listener names\n * @param {Object} methods - Functions that run when the event is fired\n *\n * @returns {void}\n */\nconst updateListeners = (element, type, events, methods) => {\n  // Just return if no element or event type\n  if (!isObj(element) || !isFunc(element[type])) return null\n\n  // Set the methods to the event\n  element[type](events.on, methods.on)\n  element[type](events.off, methods.off)\n}\n\n/**\n * Works the same as an inline ref function, but adds event listeners to the element\n * <br/> Uses useCallback so that event listeners get changed when the element changes\n * @param {React Ref|Object} ref - React Ref object or regular object\n * @param {Object} events - Events listener names\n * @param {Object} methods - Functions that run when the event is fired\n *\n * @returns {React Callback Ref} - Reference to the callback method\n */\nconst createCBRef = (hookRef, events, methods, ref) => {\n  // This keeps track of the hookRef, and the event listeners on the element\n  return useCallback(\n    element => {\n      // Remove any old events if they exist\n      hookRef.current &&\n        updateListeners(\n          hookRef.current,\n          Constants.REMOVE_EVENT,\n          events,\n          methods\n        )\n\n      // Set the new element to the hookRef.current\n      // Because this hookRef is internal, we have to update current manually\n      hookRef.current = element\n\n      // Add the new listeners to the updated element\n      hookRef.current &&\n        updateListeners(hookRef.current, Constants.ADD_EVENT, events, methods)\n\n      // If no hookRef, then call the clean up method\n      !hookRef.current && methods.cleanup()\n\n      // Want to update the callback when the methods changes\n      // If the values change, then the method will also change\n      // So this will fire when the values change\n    },\n    [ methods.on, methods.off ]\n  )\n}\n\n/**\n * Creates the on and off methods for the hook\n * Wrap them in useCallback so we can use as dependencies in the Main callback ref\n * @param {*} onValue - Value to set when hook is active\n * @param {*} offValue - Value to set when hook is not active\n *\n * @returns {Object} - Contains the hooks to update to values on and off\n */\nconst createMethods = (offValue, onValue, setValue) => {\n  const cbWatchers = [ onValue, offValue ]\n\n  // These methods get called from createCBRef returned function\n  // An event listener is added to the ref.current element\n  // And when the event happens, Then either the on || off method is called!\n  // When called, it calls the setValue function which updates the state with the passed in value\n  return {\n    // Pass in the onValue / offValue to ensure it updates when the value changes\n    // This will also cause the useCallback create from createCBRef to fire\n    off: useCallback(() => setValue(offValue), cbWatchers),\n\n    // Watch both the onValue\n    on: useCallback(() => setValue(onValue), cbWatchers),\n\n    // Clean up helper to avoid memory leaks\n    cleanup: methods => {\n      if (!methods) return\n\n      isFunc(methods.on) && methods.on(undefined)\n      isFunc(methods.off) && methods.off(undefined)\n      onValue = undefined\n      offValue = undefined\n      setValue = undefined\n      methods = undefined\n    },\n  }\n}\n\nconst getOptions = (options = {}) => (options && !isObj(options) ? {} : options)\n\n/**\n * Checks if the onValue and Off value should be joined\n * @param {Object} offValue - Value to use then when state is off\n * @param {Object} onValue - Value to use then when state is on\n * @param {Object} valueOn - Alternate Value to use then when state is on\n * @param {boolean} noMerge - Should merge the onValue with the offValue\n *\n * @returns {Object} - valueOn or merged on / off object\n */\nconst checkJoinValues = (offValue, onValue, valueOn, noMerge) => {\n  // Need to clean it up to be more clear\n  // Just returning deepMerge(offValue, onValue) works the same\n  return noMerge || !isColl(onValue) || !isColl(offValue)\n    ? valueOn\n    : deepMerge(offValue, onValue)\n}\n\n/**\n * Creates a hook that will switch between the passed in values\n * <br/> It switches between values based on the passed in events it's listening to\n * @param {Object} events - Events listener names to listen too\n *\n * @returns {function} - Hook function\n */\nexport const hookFactory = events =>\n  /**\n   * Hook function called from within a react component\n   *\n   * @param {Any} offValue - Value to set when not active\n   * @param {Any} onValue - Value to set when active\n   * @param {boolean} noMerge - Don't merge the offValue with the onValue when false\n   *\n   * @returns {Array} - Contains the ref to be added to an element, and the current value\n   */\n  (offValue, onValue, options = {}) => {\n    const { ref, noMerge } = getOptions(options)\n\n    // Get the ref object\n    const hookRef = ref || useRef()\n    // Set the default value as off\n    const [ value, setValue ] = useState(offValue)\n    const [ valueOn, setValueOn ] = useState(onValue)\n\n    // Set default joinedOnOff, to allow comparing against later\n    const [ activeValue, setActiveValue ] = useState(\n      checkJoinValues(offValue, valueOn, valueOn, noMerge)\n    )\n\n    useLayoutEffect(() => {\n      if (onValue !== valueOn) {\n        setValueOn(onValue)\n        setActiveValue(checkJoinValues(offValue, onValue, onValue, noMerge))\n      }\n    }, [ onValue, valueOn, offValue, noMerge ])\n\n    // Create the callback ref ( i.e. function ref )\n    // Which gets the node the ref is attached to as an argument\n    const elementRef = createCBRef(\n      // Create an internal ref, that keeps track of the current element\n      // This way we can remove event listeners when the element changes\n      hookRef,\n      // Names of events to listen to\n      events,\n      // Create the methods to update the value using the setValue method\n      // These methods call the setValue method, which updates the state\n      createMethods(offValue, activeValue, setValue),\n      ref\n    )\n\n    // Get the value to use based on the current state of the values\n    const useValue =\n      value === offValue\n        ? // If the offValue and value are the same then no updated state\n          value\n        : // Check if value is equal to the activeValue ( original offValue + onValue merged )\n        value === activeValue\n          ? // If value and activeValue are equal,\n          // then the State is active for either the passed in ref or the current ref\n            activeValue\n          : offValue\n\n    return !isFunc(ref)\n      ? // Return the elementRef function and value to the component\n        [ elementRef, useValue, setValue ]\n      : checkCall(() => {\n        // When ref is a function, and there's no change\n        // or when value is not equal to off value or updated value,\n        // then we want to return the off value, because that has the updated state from the\n        // Other refs update\n        // So wrap the callbacks so we can call the passed in ref, and the new ref\n        const wrapRef = element => {\n          ref(element)\n          elementRef(element)\n        }\n\n        return [ wrapRef, useValue, setValue ]\n      })\n  }\n","/** @module hooks */\n\nimport { hookFactory } from './hookFactory'\n\n/**\n * Creates an useThemeHover hook based on the 'pointerover' and 'pointerout' events\n */\nexport const useThemeHover = hookFactory({\n  on: 'pointerover',\n  off: 'pointerout',\n})\n","/** @module hooks */\n\nimport { hookFactory } from './hookFactory'\n\n/**\n * Creates an useThemeActive hook based on the 'mouseenter' and 'mouseleave' events\n */\nexport const useThemeActive = hookFactory({ on: 'mousedown', off: 'mouseup' })\n","/** @module hooks */\n\nimport { hookFactory } from './hookFactory'\n\n/**\n * Creates an useThemeFocus hook based on the 'mouseenter' and 'mouseleave' events\n */\nexport const useThemeFocus = hookFactory({ on: 'focus', off: 'blur' })\n"],"names":["DEBOUNCE_RATE","getWindow","winAccess","hasDomAccess","devicePixelRatio","undefined","innerHeight","innerWidth","width","height","screen","window","winDim","addListener","element","event","method","options","checkCall","addEventListener","setScreen","win","fontScale","scale","setWin","dimensions","listeners","get","key","set","update","isArr","Constants","CHANGE_EVENT","forEach","listener","shouldUnmount","type","isFunc","push","removeEventListener","removeListener","filter","RESIZE_EVENT","debounce","Dimensions","setRNDimensions","useDimensions","useState","setDimensions","onChange","useEffect","withTheme","Component","props","React","value","useTheme","useContext","ReThemeContext","noUnits","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","createRules","rule","Object","entries","reduce","ruleString","propName","propValue","name","replace","matches","toLowerCase","hasUnits","cssProperties","val","isNum","createBlock","selector","rls","subSelect","filteredRls","keys","filtered","isObj","styRls","block","length","map","subItem","jsToCss","rules","styles","__webPlatform","checkWebPlatform","inline","exists","platform","getRNPlatform","OS","useCss","styleRef","customStyles","config","rootClass","id","theme","head","HeadContext","themeStyles","useMemo","isStr","noOpObj","custom","isEmptyColl","$class","$className","cssStyle","webContent","hash","generateDataSet","cssProps","web","styleProps","hashId","uniqArr","join","children","hasHash","useStylesCallback","stylesCb","cbDependencies","cb","useCallback","updateListeners","events","methods","on","off","createCBRef","hookRef","ref","current","REMOVE_EVENT","ADD_EVENT","cleanup","createMethods","offValue","onValue","setValue","cbWatchers","getOptions","checkJoinValues","valueOn","noMerge","isColl","deepMerge","hookFactory","useRef","setValueOn","activeValue","setActiveValue","useLayoutEffect","elementRef","useValue","wrapRef","useThemeHover","useThemeActive","useThemeFocus"],"mappings":";;;;;;;AAOA,IAAMA,aAAa,GAAG,GAAtB;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,SAAS,GAAG,CAACC,YAAY,EAA/B;AAEA,SAAOD,SAAS,GACZ;AACEE,IAAAA,gBAAgB,EAAEC,SADpB;AAEEC,IAAAA,WAAW,EAAED,SAFf;AAGEE,IAAAA,UAAU,EAAEF,SAHd;AAIEG,IAAAA,KAAK,EAAEH,SAJT;AAKEI,IAAAA,MAAM,EAAEJ,SALV;AAMEK,IAAAA,MAAM,EAAE;AACND,MAAAA,MAAM,EAAEJ,SADF;AAENG,MAAAA,KAAK,EAAEH;AAFD;AANV,GADY,GAYX,YAAM;AACL,WAAOM,MAAP;AACD,GAFD,EAZJ;AAeD,CAlBD;AAoBA,IAAMC,MAAM,GAAGX,SAAS,EAAxB;AAUA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAqC;AACvDH,EAAAA,OAAO,IACLI,SAAS,CAACJ,OAAO,CAACK,gBAAT,EAA2BJ,KAA3B,EAAkCC,MAAlC,EAA0CC,OAAO,IAAI,KAArD,CADX;AAED,CAHD;AAWA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AACvB,SAAO;AACLC,IAAAA,SAAS,EAAE,CADN;AAELb,IAAAA,MAAM,EAAEY,GAAG,CAACX,MAAJ,CAAWD,MAFd;AAGLc,IAAAA,KAAK,EAAEF,GAAG,CAACjB,gBAAJ,IAAwB,CAH1B;AAILI,IAAAA,KAAK,EAAEa,GAAG,CAACX,MAAJ,CAAWF;AAJb,GAAP;AAMD,CAPD;AAeA,IAAMgB,MAAM,GAAG,SAATA,MAAS,CAAAH,GAAG,EAAI;AACpB,SAAO;AACLC,IAAAA,SAAS,EAAE,CADN;AAELb,IAAAA,MAAM,EAAEY,GAAG,CAACf,WAFP;AAGLiB,IAAAA,KAAK,EAAEF,GAAG,CAACjB,gBAAJ,IAAwB,CAH1B;AAILI,IAAAA,KAAK,EAAEa,GAAG,CAACd;AAJN,GAAP;AAMD,CAPD;AAYA,IAAMkB,UAAU,GAAG;AAAEd,EAAAA,MAAM,EAAEa,MAAM,CAACZ,MAAD,CAAhB;AAA0BF,EAAAA,MAAM,EAAEU,SAAS,CAACR,MAAD;AAA3C,CAAnB;AAKA,IAAMc,SAAS,GAAG,EAAlB;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,GAAG;AAAA,SAAIH,UAAU,CAACG,GAAD,CAAd;AAAA,CAAf;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA6B;AAAA,MAA1BnB,MAA0B,QAA1BA,MAA0B;AAAA,MAAVW,GAAU,QAAlBV,MAAkB;AACvCD,EAAAA,MAAM,KAAKe,UAAU,CAACf,MAAX,GAAoBA,MAAzB,CAAN;AACAW,EAAAA,GAAG,KAAKI,UAAU,CAACd,MAAX,GAAoBU,GAAzB,CAAH;AACD,CAHD;AASA,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBL,EAAAA,UAAU,CAACd,MAAX,GAAoBa,MAAM,CAACZ,MAAD,CAA1B;AACAa,EAAAA,UAAU,CAACf,MAAX,GAAoBU,SAAS,CAACR,MAAD,CAA7B;AAEAmB,EAAAA,KAAK,CAACL,SAAS,CAACM,SAAS,CAACC,YAAX,CAAV,CAAL,IACEP,SAAS,CAACM,SAAS,CAACC,YAAX,CAAT,CAAkCC,OAAlC,CACE,UAAAC,QAAQ;AAAA,WAAI,CAACA,QAAQ,CAACC,aAAV,IAA2BD,QAAQ,CAACV,UAAD,CAAvC;AAAA,GADV,CADF;AAID,CARD;AAgBA,IAAMN,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACkB,IAAD,EAAOF,QAAP,EAAoB;AAC3C,MAAI,CAACE,IAAD,IAAS,CAACC,MAAM,CAACH,QAAD,CAApB,EAAgC;AAEhCT,EAAAA,SAAS,CAACW,IAAD,CAAT,GAAkBX,SAAS,CAACW,IAAD,CAAT,IAAmB,EAArC;AACAX,EAAAA,SAAS,CAACW,IAAD,CAAT,CAAgBE,IAAhB,CAAqBJ,QAArB;AACD,CALD;AAaA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,IAAD,EAAOI,cAAP,EAA0B;AACpDJ,EAAAA,IAAI,IACFC,MAAM,CAACG,cAAD,CADR,IAEEV,KAAK,CAACL,SAAS,CAACW,IAAD,CAAV,CAFP,KAGGX,SAAS,CAACW,IAAD,CAAT,GAAkBX,SAAS,CAACW,IAAD,CAAT,CAAgBK,MAAhB,CACjB,UAAAP,QAAQ;AAAA,WAAIA,QAAQ,KAAKM,cAAjB;AAAA,GADS,CAHrB;AAMD,CAPD;AAUAtC,YAAY,MACVe,SAAS,CAAC;AAAA,SACRL,WAAW,CAACF,MAAD,EAASqB,SAAS,CAACW,YAAnB,EAAiCC,QAAQ,CAACd,MAAD,EAAS9B,aAAT,CAAzC,CADH;AAAA,CAAD,CADX;AAKA,IAAM6C,UAAU,GAAG;AACjBlB,EAAAA,GAAG,EAAHA,GADiB;AAEjBE,EAAAA,GAAG,EAAHA,GAFiB;AAGjBC,EAAAA,MAAM,EAANA,MAHiB;AAIjBX,EAAAA,gBAAgB,EAAhBA,gBAJiB;AAKjBqB,EAAAA,mBAAmB,EAAnBA;AALiB,CAAnB;AAQAM,eAAe,CAACD,UAAD,CAAf;;IC5JaE,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBAIKC,QAAQ,CAACH,YAAU,CAAClB,GAAX,CAAe,QAAf,CAAD,CAJb;AAAA;AAAA,MAIzBF,UAJyB;AAAA,MAIbwB,aAJa;AAWjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqB;AAAA,QAAV7B,GAAU,QAAlBV,MAAkB;AAAA,QAE5BH,KAF4B,GAEQa,GAFR,CAE5Bb,KAF4B;AAAA,QAErBC,MAFqB,GAEQY,GAFR,CAErBZ,MAFqB;AAAA,QAEbc,KAFa,GAEQF,GAFR,CAEbE,KAFa;AAAA,QAEND,SAFM,GAEQD,GAFR,CAENC,SAFM;AAIpC2B,IAAAA,aAAa,CAAC;AAAEzC,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,MAAM,EAANA,MAAT;AAAiBc,MAAAA,KAAK,EAALA,KAAjB;AAAwBD,MAAAA,SAAS,EAATA;AAAxB,KAAD,CAAb;AACD,GALD;AAUA6B,EAAAA,SAAS,CAAC,YAAM;AAEdN,IAAAA,YAAU,CAAC1B,gBAAX,CAA4B,QAA5B,EAAsC+B,QAAtC,EAFc;AAKd,WAAO,YAAM;AACXA,MAAAA,QAAQ,CAACd,aAAT,GAAyB,IAAzB;AACA,aAAOS,YAAU,CAACL,mBAAX,CAA+B,QAA/B,EAAyCU,QAAzC,CAAP;AACD,KAHD;AAID,GATQ,EASN,EATM,CAAT,CArBiC;AAiCjC,SAAOzB,UAAP;AACD;;IC9BY2B,SAAS,GAAG,SAAZA,SAAY,CAAAC,SAAS,EAAI;AACpC,SAAO,UAAAC,KAAK,EAAI;AACd,WACEC,6BAAC,cAAD,CAAgB,QAAhB,QACI,UAAAC,KAAK,EAAI;AACT,aAAOD,6BAAC,SAAD;AACL,QAAA,KAAK,EAAEC;AADF,SAEDF,KAFC,EAAP;AAID,KANH,CADF;AAUD,GAXD;AAYD;;ICfYG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAOC,UAAU,CAACC,cAAD,CAAjB;AACD;;ACXD,oBAAe;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,uBAAuB,EAAE,IADlB;AAEPC,IAAAA,iBAAiB,EAAE,IAFZ;AAGPC,IAAAA,gBAAgB,EAAE,IAHX;AAIPC,IAAAA,gBAAgB,EAAE,IAJX;AAKPC,IAAAA,OAAO,EAAE,IALF;AAMPC,IAAAA,YAAY,EAAE,IANP;AAOPC,IAAAA,eAAe,EAAE,IAPV;AAQPC,IAAAA,WAAW,EAAE,IARN;AASPC,IAAAA,OAAO,EAAE,IATF;AAUPC,IAAAA,IAAI,EAAE,IAVC;AAWPC,IAAAA,QAAQ,EAAE,IAXH;AAYPC,IAAAA,YAAY,EAAE,IAZP;AAaPC,IAAAA,UAAU,EAAE,IAbL;AAcPC,IAAAA,YAAY,EAAE,IAdP;AAePC,IAAAA,SAAS,EAAE,IAfJ;AAgBPC,IAAAA,OAAO,EAAE,IAhBF;AAiBPC,IAAAA,UAAU,EAAE,IAjBL;AAkBPC,IAAAA,WAAW,EAAE,IAlBN;AAmBPC,IAAAA,YAAY,EAAE,IAnBP;AAoBPC,IAAAA,UAAU,EAAE,IApBL;AAqBPC,IAAAA,aAAa,EAAE,IArBR;AAsBPC,IAAAA,cAAc,EAAE,IAtBT;AAuBPC,IAAAA,eAAe,EAAE,IAvBV;AAwBPC,IAAAA,UAAU,EAAE,IAxBL;AAyBPC,IAAAA,SAAS,EAAE,IAzBJ;AA0BPC,IAAAA,UAAU,EAAE,IA1BL;AA2BPC,IAAAA,OAAO,EAAE,IA3BF;AA4BPC,IAAAA,KAAK,EAAE,IA5BA;AA6BPC,IAAAA,OAAO,EAAE,IA7BF;AA8BPC,IAAAA,OAAO,EAAE,IA9BF;AA+BPC,IAAAA,MAAM,EAAE,IA/BD;AAgCPC,IAAAA,MAAM,EAAE,IAhCD;AAiCPC,IAAAA,IAAI,EAAE,IAjCC;AAoCPC,IAAAA,WAAW,EAAE,IApCN;AAqCPC,IAAAA,YAAY,EAAE,IArCP;AAsCPC,IAAAA,WAAW,EAAE,IAtCN;AAuCPC,IAAAA,eAAe,EAAE,IAvCV;AAwCPC,IAAAA,gBAAgB,EAAE,IAxCX;AAyCPC,IAAAA,gBAAgB,EAAE,IAzCX;AA0CPC,IAAAA,aAAa,EAAE,IA1CR;AA2CPC,IAAAA,WAAW,EAAE;AA3CN;AADI,CAAf;;ACOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SACtBC,MAAM,CACHC,OADH,CACWF,IADX,EAEGG,MAFH,CAEU,UAACC,UAAD,QAAyC;AAAA;AAAA,QAA1BC,QAA0B;AAAA,QAAhBC,SAAgB;AAC/C,QAAMC,IAAI,GAAGF,QAAQ,CAClBG,OADU,CACF,UADE,EACU,UAAAC,OAAO;AAAA,wBAAQA,OAAO,CAAC,CAAD,CAAP,CAAWC,WAAX,EAAR;AAAA,KADjB,CAAb;AAGA,QAAMC,QAAQ,GAAG,CAACC,aAAa,CAACvD,OAAd,CAAsBgD,QAAtB,CAAlB;AACA,QAAMQ,GAAG,GAAGF,QAAQ,IAAIG,KAAK,CAACR,SAAD,CAAjB,IAAgCA,SAAS,GAAG,IAA5C,IAAoDA,SAAhE;AAEA,qBAAUF,UAAV,iBAA2BG,IAA3B,eAAoCM,GAApC;AACD,GAVH,EAUK,EAVL,CADsB;AAAA,CAAxB;AAoBA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,GAAX,EAAmB;AACrC,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,WAAW,GAAGlB,MAAM,CAACmB,IAAP,CAAYH,GAAZ,EACjBd,MADiB,CACV,UAACkB,QAAD,EAAWhG,GAAX,EAAmB;AAEzB,KAACiG,KAAK,CAACL,GAAG,CAAC5F,GAAD,CAAJ,CAAN,GACKgG,QAAQ,CAAChG,GAAD,CAAR,GAAgB4F,GAAG,CAAC5F,GAAD,CADxB,GAEK6F,SAAS,CAAClF,IAAV,CAAe,WAAKgF,QAAL,cAAiB3F,GAAjB,GAAwB4F,GAAG,CAAC5F,GAAD,CAA3B,CAAf,CAFL;AAIA,WAAOgG,QAAP;AACD,GARiB,EAQf,EARe,CAApB;AAUA,MAAME,MAAM,GAAGxB,WAAW,CAACoB,WAAD,CAA1B;AACA,MAAIK,KAAK,aAAMR,QAAN,eAAmBO,MAAnB,UAAT;AAEAL,EAAAA,SAAS,CAACO,MAAV,IACEP,SAAS,CAACQ,GAAV,CAAc,UAAAC,OAAO;AAAA,WAAIH,KAAK,IAAIT,WAAW,CAACY,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAAC,CAAD,CAApB,CAAxB;AAAA,GAArB,CADF;AAGA,SAAOH,KAAP;AACD,CApBD;AA2BO,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAC9B,SAAO5B,MAAM,CACVC,OADI,CACI2B,KADJ,EAEJ1B,MAFI,CAEG,UAAC2B,MAAD;AAAA;AAAA,QAAWd,QAAX;AAAA,QAAqBC,GAArB;AAAA,WAAgCa,MAAM,GAAGf,WAAW,CAACC,QAAD,EAAWC,GAAX,CAApD;AAAA,GAFH,EAEyE,EAFzE,CAAP;AAGD,CAJM;;ACxCP,IAAIc,aAAJ;AAoCA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,MAAM,EAAI;AACjC,SAAOA,MAAM,GACT,KADS,GAETC,MAAM,CAACH,aAAD,CAAN,GACEA,aADF,GAEEpH,SAAS,CAAC,YAAM;AACd,QAAMwH,QAAQ,GAAGC,aAAa,EAA9B,CADc;AAIdL,IAAAA,aAAa,GAAGnI,YAAY,MAAMuI,QAAQ,CAACE,EAAT,KAAgB,KAAlC,GACZ,IADY,GAEZ,KAFJ;AAIA,WAAON,aAAP;AACD,GATQ,CAJf;AAcD,CAfD;IAoCaO,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAWC,YAAX,EAAuC;AAAA,MAAdC,MAAc,uEAAP,EAAO;AAAA,MACnDC,SADmD,GACfD,MADe,CACnDC,SADmD;AAAA,MACxCT,MADwC,GACfQ,MADe,CACxCR,MADwC;AAAA,MAChCjB,QADgC,GACfyB,MADe,CAChCzB,QADgC;AAAA,MACtB2B,EADsB,GACfF,MADe,CACtBE,EADsB;AAG3D,MAAMC,KAAK,GAAG1F,QAAQ,EAAtB;AACA,MAAM2F,IAAI,GAAG1F,UAAU,CAAC2F,WAAD,CAAvB,CAJ2D;AAQ3D,MAAMC,WAAW,GAAGC,OAAO,CAAC,YAAM;AAChC,WAAOC,KAAK,CAACV,QAAD,CAAL,GAAkBnH,KAAG,CAACwH,KAAD,EAAQL,QAAR,EAAkBW,OAAlB,CAArB,GAAmDX,QAAQ,IAAIW,OAAtE;AACD,GAF0B,EAExB,CAAEX,QAAF,EAAYK,KAAZ,CAFwB,CAA3B,CAR2D;AAa3D,MAAMO,MAAM,GAAG,CAACX,YAAD,IAAiB,CAAClB,KAAK,CAACkB,YAAD,CAAvB,IAAyCY,WAAW,CAACZ,YAAD,CAApD,GACXU,OADW,GAEXV,YAFJ;AAIA,SAAOQ,OAAO,CAAC,YAAM;AAAA,eAE0BD,WAAW,IAAIG,OAFzC;AAAA,QAEXG,MAFW,QAEXA,MAFW;AAAA,QAEHC,UAFG,QAEHA,UAFG;AAAA,QAEYC,QAFZ;AAGnB,QAAMvC,QAAQ,GAAG0B,SAAS,IAAIY,UAAb,IAA2BD,MAA3B,IAAqCV,EAAtD;AAKA,QAAMa,UAAU,GAAGxB,gBAAgB,CAACC,MAAD,CAAhB,IAA4B;AAAEH,MAAAA,MAAM,EAAE,EAAV;AAAc2B,MAAAA,IAAI,EAAE;AAApB,KAA/C,CARmB;AAAA,2BAYOC,eAAe,CACvCF,UADuC,EAEvCD,QAFuC,EAGvCJ,MAHuC;AAIrCnC,MAAAA,QAAQ,EAARA;AAJqC,OAIxByB,MAJwB,EAZtB;AAAA,QAYXkB,QAZW,oBAYXA,QAZW;AAAA,QAYDC,GAZC,oBAYDA,GAZC;AAmBnB,QAAG,CAACA,GAAJ,EAAS,OAAO;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,UAAU,EAAE;AAAxB,KAAP,CAnBU;AAuBnB,QAAMC,MAAM,GAAGF,GAAG,IAAIG,OAAO,CAACH,GAAG,CAACH,IAAL,CAAP,CAAkBO,IAAlB,CAAuB,GAAvB,CAAtB,CAvBmB;AA2BnB,WAAO;AACLL,MAAAA,QAAQ,EAARA,QADK;AAELE,MAAAA,UAAU,EAAE;AACVlB,QAAAA,EAAE,EAAEmB,MADM;AAGVG,QAAAA,QAAQ,EAAEpB,IAAI,CAACqB,OAAL,CAAaJ,MAAb,IAAuB,EAAvB,GAA4BlC,OAAO,CAACgC,GAAG,CAAC9B,MAAL;AAHnC;AAFP,KAAP;AASD,GApCa,EAoCX,CAAEiB,WAAF,EAAeI,MAAf,EAAuBT,SAAvB,EAAkCT,MAAlC,EAA0CjB,QAA1C,EAAoD2B,EAApD,CApCW,CAAd;AAqCD;;ICvHYwB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,cAAX,EAA2B7B,YAA3B,EAA4C;AAE3E,MAAM8B,EAAE,GAAGC,WAAW,CAACH,QAAD,EAAWC,cAAc,IAAI,EAA7B,CAAtB,CAF2E;AAK3E,MAAMvC,MAAM,GACV,CAACU,YAAD,IAAiB,CAAClB,KAAK,CAACkB,YAAD,CAAvB,IAAyCY,WAAW,CAACZ,YAAD,CAApD,GACI,KADJ,GAEIA,YAHN,CAL2E;AAW3E,MAAMI,KAAK,GAAG1F,QAAQ,EAAtB,CAX2E;AAc3E,SAAO8F,OAAO,CAAC;AAAA,WAAMrI,SAAS,MAAT,UAAU2J,EAAV,EAAc1B,KAAd,EAAqBd,MAArB,4BAAgCuC,cAAhC,OAAmD,EAAzD;AAAA,GAAD,EAA8D,CAAEzB,KAAF,EAAS0B,EAAT,EAAaxC,MAAb,CAA9D,CAAd;AACD;;ACxBD,IAAM0C,eAAe,GAAG,SAAlBA,eAAkB,CAACjK,OAAD,EAAUuB,IAAV,EAAgB2I,MAAhB,EAAwBC,OAAxB,EAAoC;AAE1D,MAAI,CAACpD,KAAK,CAAC/G,OAAD,CAAN,IAAmB,CAACwB,MAAM,CAACxB,OAAO,CAACuB,IAAD,CAAR,CAA9B,EAA+C,OAAO,IAAP,CAFW;AAK1DvB,EAAAA,OAAO,CAACuB,IAAD,CAAP,CAAc2I,MAAM,CAACE,EAArB,EAAyBD,OAAO,CAACC,EAAjC;AACApK,EAAAA,OAAO,CAACuB,IAAD,CAAP,CAAc2I,MAAM,CAACG,GAArB,EAA0BF,OAAO,CAACE,GAAlC;AACD,CAPD;AAkBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUL,MAAV,EAAkBC,OAAlB,EAA2BK,GAA3B,EAAmC;AAErD,SAAOR,WAAW,CAChB,UAAAhK,OAAO,EAAI;AAETuK,IAAAA,OAAO,CAACE,OAAR,IACER,eAAe,CACbM,OAAO,CAACE,OADK,EAEbvJ,SAAS,CAACwJ,YAFG,EAGbR,MAHa,EAIbC,OAJa,CADjB,CAFS;AAYTI,IAAAA,OAAO,CAACE,OAAR,GAAkBzK,OAAlB,CAZS;AAeTuK,IAAAA,OAAO,CAACE,OAAR,IACER,eAAe,CAACM,OAAO,CAACE,OAAT,EAAkBvJ,SAAS,CAACyJ,SAA5B,EAAuCT,MAAvC,EAA+CC,OAA/C,CADjB,CAfS;AAmBT,KAACI,OAAO,CAACE,OAAT,IAAoBN,OAAO,CAACS,OAAR,EAApB,CAnBS;AAwBV,GAzBe,EA0BhB,CAAET,OAAO,CAACC,EAAV,EAAcD,OAAO,CAACE,GAAtB,CA1BgB,CAAlB;AA4BD,CA9BD;AAwCA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,QAApB,EAAiC;AACrD,MAAMC,UAAU,GAAG,CAAEF,OAAF,EAAWD,QAAX,CAAnB,CADqD;AAOrD,SAAO;AAGLT,IAAAA,GAAG,EAAEL,WAAW,CAAC;AAAA,aAAMgB,QAAQ,CAACF,QAAD,CAAd;AAAA,KAAD,EAA2BG,UAA3B,CAHX;AAMLb,IAAAA,EAAE,EAAEJ,WAAW,CAAC;AAAA,aAAMgB,QAAQ,CAACD,OAAD,CAAd;AAAA,KAAD,EAA0BE,UAA1B,CANV;AASLL,IAAAA,OAAO,EAAE,iBAAAT,OAAO,EAAI;AAClB,UAAI,CAACA,OAAL,EAAc;AAEd3I,MAAAA,MAAM,CAAC2I,OAAO,CAACC,EAAT,CAAN,IAAsBD,OAAO,CAACC,EAAR,CAAW7K,SAAX,CAAtB;AACAiC,MAAAA,MAAM,CAAC2I,OAAO,CAACE,GAAT,CAAN,IAAuBF,OAAO,CAACE,GAAR,CAAY9K,SAAZ,CAAvB;AACAwL,MAAAA,OAAO,GAAGxL,SAAV;AACAuL,MAAAA,QAAQ,GAAGvL,SAAX;AACAyL,MAAAA,QAAQ,GAAGzL,SAAX;AACA4K,MAAAA,OAAO,GAAG5K,SAAV;AACD;AAlBI,GAAP;AAoBD,CA3BD;AA6BA,IAAM2L,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAC/K,OAAD,uEAAW,EAAX;AAAA,SAAmBA,OAAO,IAAI,CAAC4G,KAAK,CAAC5G,OAAD,CAAjB,GAA6B,EAA7B,GAAkCA,OAArD;AAAA,CAAnB;AAWA,IAAMgL,eAAe,GAAG,SAAlBA,eAAkB,CAACL,QAAD,EAAWC,OAAX,EAAoBK,OAApB,EAA6BC,OAA7B,EAAyC;AAG/D,SAAOA,OAAO,IAAI,CAACC,MAAM,CAACP,OAAD,CAAlB,IAA+B,CAACO,MAAM,CAACR,QAAD,CAAtC,GACHM,OADG,GAEHG,SAAS,CAACT,QAAD,EAAWC,OAAX,CAFb;AAGD,CAND;AAeO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAAAtB,MAAM;AAAA;AAU/B,cAACY,QAAD,EAAWC,OAAX,EAAqC;AAAA,UAAjB5K,OAAiB,uEAAP,EAAO;AAAA,wBACV+K,UAAU,CAAC/K,OAAD,CADA;AAAA,UAC3BqK,GAD2B,eAC3BA,GAD2B;AAAA,UACtBa,OADsB,eACtBA,OADsB;AAInC,UAAMd,OAAO,GAAGC,GAAG,IAAIiB,MAAM,EAA7B,CAJmC;AAAA,sBAMPvJ,QAAQ,CAAC4I,QAAD,CAND;AAAA;AAAA,UAM3BpI,KAN2B;AAAA,UAMpBsI,QANoB;AAAA,uBAOH9I,QAAQ,CAAC6I,OAAD,CAPL;AAAA;AAAA,UAO3BK,OAP2B;AAAA,UAOlBM,UAPkB;AAAA,uBAUKxJ,QAAQ,CAC9CiJ,eAAe,CAACL,QAAD,EAAWM,OAAX,EAAoBA,OAApB,EAA6BC,OAA7B,CAD+B,CAVb;AAAA;AAAA,UAU3BM,WAV2B;AAAA,UAUdC,cAVc;AAcnCC,MAAAA,eAAe,CAAC,YAAM;AACpB,YAAId,OAAO,KAAKK,OAAhB,EAAyB;AACvBM,UAAAA,UAAU,CAACX,OAAD,CAAV;AACAa,UAAAA,cAAc,CAACT,eAAe,CAACL,QAAD,EAAWC,OAAX,EAAoBA,OAApB,EAA6BM,OAA7B,CAAhB,CAAd;AACD;AACF,OALc,EAKZ,CAAEN,OAAF,EAAWK,OAAX,EAAoBN,QAApB,EAA8BO,OAA9B,CALY,CAAf,CAdmC;AAuBnC,UAAMS,UAAU,GAAGxB,WAAW;AAG5BC,MAAAA,OAH4B;AAK5BL,MAAAA,MAL4B;AAQ5BW,MAAAA,aAAa,CAACC,QAAD,EAAWa,WAAX,EAAwBX,QAAxB,CARe,CAA9B,CAvBmC;AAoCnC,UAAMe,QAAQ,GACZrJ,KAAK,KAAKoI,QAAV;AAEIpI,MAAAA,KAFJ;AAIEA,MAAAA,KAAK,KAAKiJ,WAAV;AAGIA,MAAAA,WAHJ,GAIIb,QATR;AAWA,aAAO,CAACtJ,MAAM,CAACgJ,GAAD,CAAP;AAEH,OAAEsB,UAAF,EAAcC,QAAd,EAAwBf,QAAxB,CAFG,GAGH5K,SAAS,CAAC,YAAM;AAMhB,YAAM4L,OAAO,GAAG,SAAVA,OAAU,CAAAhM,OAAO,EAAI;AACzBwK,UAAAA,GAAG,CAACxK,OAAD,CAAH;AACA8L,UAAAA,UAAU,CAAC9L,OAAD,CAAV;AACD,SAHD;AAKA,eAAO,CAAEgM,OAAF,EAAWD,QAAX,EAAqBf,QAArB,CAAP;AACD,OAZU,CAHb;AAgBD;AAzE8B;AAAA,CAA1B;;ICvHMiB,aAAa,GAAGT,WAAW,CAAC;AACvCpB,EAAAA,EAAE,EAAE,aADmC;AAEvCC,EAAAA,GAAG,EAAE;AAFkC,CAAD;;ICA3B6B,cAAc,GAAGV,WAAW,CAAC;AAAEpB,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,GAAG,EAAE;AAAxB,CAAD;;ICA5B8B,aAAa,GAAGX,WAAW,CAAC;AAAEpB,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,GAAG,EAAE;AAApB,CAAD;;;;"}