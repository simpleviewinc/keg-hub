{"version":3,"file":"colors.js","sources":["../../../src/helpers/colors.js"],"sourcesContent":["import { isObj, isArr, isStr } from '@keg-hub/jsutils'\n\nconst convertToPercent = (num, percent) => parseInt((num * (100 + percent)) / 100)\n\nconst checkColorMax = num => (num < 255 ? num : 255)\n\nconst convertToColor = (num, percent) => {\n  const asPercent = convertToPercent(num, percent)\n  const withMax = checkColorMax(asPercent)\n  const asStr = withMax.toString(16)\n\n  return asStr.length == 1 ? `0${asStr}` : asStr\n}\n\nconst mapOpacity = opacity => {\n  // Map opacity amounts by .5\n  for (let amount = 100; amount >= 0; amount -= 5)\n    opacity[`_${amount}`] = opacity((amount / 100).toFixed(2))\n\n  return opacity\n}\n\n/**\n * Convert hex color to rgba\n * @param  { string } hex - color to convert\n *\n * @param {number} opacity - from 0-1\n * @return rgba as string\n */\nexport const hexToRgba = (hex, opacity, asObj) => {\n  if (!hex)\n    return (\n      console.warn('Can not convert hex to rgba', hex) || `rgba(255,255,255,0)`\n    )\n\n  hex = hex.indexOf('#') === 0 ? hex.replace('#', '') : hex\n\n  opacity = opacity > 1 ? (opacity / 100).toFixed(4) : opacity\n\n  const rgbaObj = {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: !opacity && opacity !== 0 ? 1 : opacity,\n  }\n\n  return asObj ? rgbaObj : toRgb(rgbaObj)\n}\n\n/**\n * Convert a hex color to rgba setting the opacity to the passed in amount prop\n * @param {number} amount - Opacity amount\n * @param {string|Object} color - color to convert\n *\n * @return rgba as string\n */\nexport const opacity = mapOpacity((amount, color) => {\n  return isStr(color) && color.indexOf('#') === 0\n    ? hexToRgba(color, amount)\n    : isObj(color)\n      ? toRgb(color, amount)\n      : `rgba(${color || '0,0,0'}, ${amount})`\n})\n\n/**\n * Shades a hex color based on the passed in percent\n * @param {string} color - Hex color to shade\n * @param {number} percent - amount to shared, can be positive or negitive\n *\n * @returns {string} - Shaded hex string\n */\nexport const shadeHex = (color, percent) => {\n  const rgba = hexToRgba(color, 1, true)\n\n  return (\n    '#' +\n    convertToColor(rgba.r, percent) +\n    convertToColor(rgba.g, percent) +\n    convertToColor(rgba.b, percent)\n  )\n}\n\n/**\n * Convert { r: 0, g: 0, b:0, a: 0 } object to rgba() string\n * @param {string|number|object} red - red color value or an object with r,g,b,a values\n * @param {string|number} green - green color value\n * @param {string|number} blue - blue color value\n * @param {number|float} alpha - opacity - from 0-1\n *\n * @return {string} rgba string\n */\nexport const toRgb = (red, green, blue, alpha) => {\n  const obj = isObj(red) ? red : { r: red, g: green, b: blue, a: alpha }\n  obj.a = !obj.a && obj.a !== 0 ? 1 : obj.a\n\n  return `rgba(${obj.r}, ${obj.g}, ${obj.b}, ${obj.a})`\n}\n\n/**\n * Builds a CSS transition rule\n * @param {Array} [props=[]] - CSS rules to have the transition applied to\n * @param {number} [speed=250] - Speed of the transition\n * @param {string} [timingFunc='ease'] - Type of transition animation to use\n *\n * @returns {Object} - Built CSS transition rule\n */\nexport const transition = (props = [], speed = 250, timingFunc = 'ease') => {\n  return typeof props === 'string'\n    ? { transition: `${props} ${speed}ms ${timingFunc}` }\n    : isArr(props)\n      ? {\n          transition: props\n            .reduce((trans, prop) => {\n              trans.push(`${prop} ${speed}ms ${timingFunc}`)\n              return trans\n            }, [])\n            .join(', ')\n        }\n      : null\n}\n"],"names":["convertToPercent","num","percent","parseInt","checkColorMax","convertToColor","asPercent","withMax","asStr","toString","length","mapOpacity","opacity","amount","toFixed","hexToRgba","hex","asObj","console","warn","indexOf","replace","rgbaObj","r","substring","g","b","a","toRgb","color","isStr","isObj","shadeHex","rgba","red","green","blue","alpha","obj","transition","props","speed","timingFunc","isArr","reduce","trans","prop","push","join"],"mappings":"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"}